// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

/// Bindings to Capstone
class Capstone {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  Capstone(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  Capstone.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  /// Return combined API version & major and minor version numbers.
  ///
  /// @major: major number of API version
  /// @minor: minor number of API version
  ///
  /// @return hexical number as (major << 8 | minor), which encodes both
  /// major & minor versions.
  /// NOTE: This returned value can be compared with version number made
  /// with macro CS_MAKE_VERSION
  ///
  /// For example, second API version would return 1 in @major, and 1 in @minor
  /// The return value would be 0x0101
  ///
  /// NOTE: if you only care about returned value, but not major and minor values,
  /// set both @major & @minor arguments to NULL.
  int version(
    ffi.Pointer<ffi.Int> major,
    ffi.Pointer<ffi.Int> minor,
  ) {
    return _version(
      major,
      minor,
    );
  }

  late final _versionPtr = _lookup<
      ffi.NativeFunction<
          ffi.UnsignedInt Function(
              ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Int>)>>('cs_version');
  late final _version = _versionPtr
      .asFunction<int Function(ffi.Pointer<ffi.Int>, ffi.Pointer<ffi.Int>)>();

  /// This API can be used to either ask for archs supported by this library,
  /// or check to see if the library was compile with 'diet' option (or called
  /// in 'diet' mode).
  ///
  /// To check if a particular arch is supported by this library, set @query to
  /// arch mode (CS_ARCH_* value).
  /// To verify if this library supports all the archs, use CS_ARCH_ALL.
  ///
  /// To check if this library is in 'diet' mode, set @query to CS_SUPPORT_DIET.
  ///
  /// @return True if this library supports the given arch, or in 'diet' mode.
  bool support(
    int query,
  ) {
    return _support(
      query,
    );
  }

  late final _supportPtr =
      _lookup<ffi.NativeFunction<ffi.Bool Function(ffi.Int)>>('cs_support');
  late final _support = _supportPtr.asFunction<bool Function(int)>();

  /// Initialize CS handle: this must be done before any usage of CS.
  ///
  /// @arch: architecture type (CS_ARCH_*)
  /// @mode: hardware mode. This is combined of CS_MODE_*
  /// @handle: pointer to handle, which will be updated at return time
  ///
  /// @return CS_ERR_OK on success, or other value on failure (refer to cs_err enum
  /// for detailed error).
  int open(
    int arch,
    int mode,
    ffi.Pointer<csh> handle,
  ) {
    return _open(
      arch,
      mode,
      handle,
    );
  }

  late final _openPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(
              ffi.Int32, ffi.Int32, ffi.Pointer<csh>)>>('cs_open');
  late final _open =
      _openPtr.asFunction<int Function(int, int, ffi.Pointer<csh>)>();

  /// Close CS handle: MUST do to release the handle when it is not used anymore.
  /// NOTE: this must be only called when there is no longer usage of Capstone,
  /// not even access to cs_insn array. The reason is the this API releases some
  /// cached memory, thus access to any Capstone API after cs_close() might crash
  /// your application.
  ///
  /// In fact,this API invalidate @handle by ZERO out its value (i.e *handle = 0).
  ///
  /// @handle: pointer to a handle returned by cs_open()
  ///
  /// @return CS_ERR_OK on success, or other value on failure (refer to cs_err enum
  /// for detailed error).
  int close(
    ffi.Pointer<csh> handle,
  ) {
    return _close(
      handle,
    );
  }

  late final _closePtr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(ffi.Pointer<csh>)>>(
          'cs_close');
  late final _close = _closePtr.asFunction<int Function(ffi.Pointer<csh>)>();

  /// Set option for disassembling engine at runtime
  ///
  /// @handle: handle returned by cs_open()
  /// @type: type of option to be set
  /// @value: option value corresponding with @type
  ///
  /// @return: CS_ERR_OK on success, or other value on failure.
  /// Refer to cs_err enum for detailed error.
  ///
  /// NOTE: in the case of CS_OPT_MEM, handle's value can be anything,
  /// so that cs_option(handle, CS_OPT_MEM, value) can (i.e must) be called
  /// even before cs_open()
  int option(
    int handle,
    int type,
    int value,
  ) {
    return _option(
      handle,
      type,
      value,
    );
  }

  late final _optionPtr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(csh, ffi.Int32, ffi.Size)>>(
          'cs_option');
  late final _option = _optionPtr.asFunction<int Function(int, int, int)>();

  /// Report the last error number when some API function fail.
  /// Like glibc's errno, cs_errno might not retain its old value once accessed.
  ///
  /// @handle: handle returned by cs_open()
  ///
  /// @return: error code of cs_err enum type (CS_ERR_*, see above)
  int errno(
    int handle,
  ) {
    return _errno(
      handle,
    );
  }

  late final _errnoPtr =
      _lookup<ffi.NativeFunction<ffi.Int32 Function(csh)>>('cs_errno');
  late final _errno = _errnoPtr.asFunction<int Function(int)>();

  /// Return a string describing given error code.
  ///
  /// @code: error code (see CS_ERR_* above)
  ///
  /// @return: returns a pointer to a string that describes the error code
  /// passed in the argument @code
  ffi.Pointer<ffi.Char> strerror(
    int code,
  ) {
    return _strerror(
      code,
    );
  }

  late final _strerrorPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function(ffi.Int32)>>(
          'cs_strerror');
  late final _strerror =
      _strerrorPtr.asFunction<ffi.Pointer<ffi.Char> Function(int)>();

  /// Disassemble binary code, given the code buffer, size, address and number
  /// of instructions to be decoded.
  /// This API dynamically allocate memory to contain disassembled instruction.
  /// Resulting instructions will be put into @*insn
  ///
  /// NOTE 1: this API will automatically determine memory needed to contain
  /// output disassembled instructions in @insn.
  ///
  /// NOTE 2: caller must free the allocated memory itself to avoid memory leaking.
  ///
  /// NOTE 3: for system with scarce memory to be dynamically allocated such as
  /// OS kernel or firmware, the API cs_disasm_iter() might be a better choice than
  /// cs_disasm(). The reason is that with cs_disasm(), based on limited available
  /// memory, we have to calculate in advance how many instructions to be disassembled,
  /// which complicates things. This is especially troublesome for the case @count=0,
  /// when cs_disasm() runs uncontrollably (until either end of input buffer, or
  /// when it encounters an invalid instruction).
  ///
  /// @handle: handle returned by cs_open()
  /// @code: buffer containing raw binary code to be disassembled.
  /// @code_size: size of the above code buffer.
  /// @address: address of the first instruction in given raw code buffer.
  /// @insn: array of instructions filled in by this API.
  /// NOTE: @insn will be allocated by this function, and should be freed
  /// with cs_free() API.
  /// @count: number of instructions to be disassembled, or 0 to get all of them
  ///
  /// @return: the number of successfully disassembled instructions,
  /// or 0 if this function failed to disassemble the given code
  ///
  /// On failure, call cs_errno() for error code.
  int disasm(
    int handle,
    ffi.Pointer<ffi.Uint8> code,
    int code_size,
    int address,
    int count,
    ffi.Pointer<ffi.Pointer<cs_insn>> insn,
  ) {
    return _disasm(
      handle,
      code,
      code_size,
      address,
      count,
      insn,
    );
  }

  late final _disasmPtr = _lookup<
      ffi.NativeFunction<
          ffi.Size Function(csh, ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Uint64,
              ffi.Size, ffi.Pointer<ffi.Pointer<cs_insn>>)>>('cs_disasm');
  late final _disasm = _disasmPtr.asFunction<
      int Function(int, ffi.Pointer<ffi.Uint8>, int, int, int,
          ffi.Pointer<ffi.Pointer<cs_insn>>)>();

  /// Deprecated function - to be retired in the next version!
  /// Use cs_disasm() instead of cs_disasm_ex()
  int disasm_ex(
    int handle,
    ffi.Pointer<ffi.Uint8> code,
    int code_size,
    int address,
    int count,
    ffi.Pointer<ffi.Pointer<cs_insn>> insn,
  ) {
    return _disasm_ex(
      handle,
      code,
      code_size,
      address,
      count,
      insn,
    );
  }

  late final _disasm_exPtr = _lookup<
      ffi.NativeFunction<
          ffi.Size Function(csh, ffi.Pointer<ffi.Uint8>, ffi.Size, ffi.Uint64,
              ffi.Size, ffi.Pointer<ffi.Pointer<cs_insn>>)>>('cs_disasm_ex');
  late final _disasm_ex = _disasm_exPtr.asFunction<
      int Function(int, ffi.Pointer<ffi.Uint8>, int, int, int,
          ffi.Pointer<ffi.Pointer<cs_insn>>)>();

  /// Free memory allocated by cs_malloc() or cs_disasm() (argument @insn)
  ///
  /// @insn: pointer returned by @insn argument in cs_disasm() or cs_malloc()
  /// @count: number of cs_insn structures returned by cs_disasm(), or 1
  /// to free memory allocated by cs_malloc().
  void free(
    ffi.Pointer<cs_insn> insn,
    int count,
  ) {
    return _free(
      insn,
      count,
    );
  }

  late final _freePtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Pointer<cs_insn>, ffi.Size)>>('cs_free');
  late final _free =
      _freePtr.asFunction<void Function(ffi.Pointer<cs_insn>, int)>();

  /// Allocate memory for 1 instruction to be used by cs_disasm_iter().
  ///
  /// @handle: handle returned by cs_open()
  ///
  /// NOTE: when no longer in use, you can reclaim the memory allocated for
  /// this instruction with cs_free(insn, 1)
  ffi.Pointer<cs_insn> malloc(
    int handle,
  ) {
    return _malloc(
      handle,
    );
  }

  late final _mallocPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<cs_insn> Function(csh)>>(
          'cs_malloc');
  late final _malloc =
      _mallocPtr.asFunction<ffi.Pointer<cs_insn> Function(int)>();

  /// Fast API to disassemble binary code, given the code buffer, size, address
  /// and number of instructions to be decoded.
  /// This API puts the resulting instruction into a given cache in @insn.
  /// See tests/test_iter.c for sample code demonstrating this API.
  ///
  /// NOTE 1: this API will update @code, @size & @address to point to the next
  /// instruction in the input buffer. Therefore, it is convenient to use
  /// cs_disasm_iter() inside a loop to quickly iterate all the instructions.
  /// While decoding one instruction at a time can also be achieved with
  /// cs_disasm(count=1), some benchmarks shown that cs_disasm_iter() can be 30%
  /// faster on random input.
  ///
  /// NOTE 2: the cache in @insn can be created with cs_malloc() API.
  ///
  /// NOTE 3: for system with scarce memory to be dynamically allocated such as
  /// OS kernel or firmware, this API is recommended over cs_disasm(), which
  /// allocates memory based on the number of instructions to be disassembled.
  /// The reason is that with cs_disasm(), based on limited available memory,
  /// we have to calculate in advance how many instructions to be disassembled,
  /// which complicates things. This is especially troublesome for the case
  /// @count=0, when cs_disasm() runs uncontrollably (until either end of input
  /// buffer, or when it encounters an invalid instruction).
  ///
  /// @handle: handle returned by cs_open()
  /// @code: buffer containing raw binary code to be disassembled
  /// @size: size of above code
  /// @address: address of the first insn in given raw code buffer
  /// @insn: pointer to instruction to be filled in by this API.
  ///
  /// @return: true if this API successfully decode 1 instruction,
  /// or false otherwise.
  ///
  /// On failure, call cs_errno() for error code.
  bool disasm_iter(
    int handle,
    ffi.Pointer<ffi.Pointer<ffi.Uint8>> code,
    ffi.Pointer<ffi.Size> size,
    ffi.Pointer<ffi.Uint64> address,
    ffi.Pointer<cs_insn> insn,
  ) {
    return _disasm_iter(
      handle,
      code,
      size,
      address,
      insn,
    );
  }

  late final _disasm_iterPtr = _lookup<
      ffi.NativeFunction<
          ffi.Bool Function(
              csh,
              ffi.Pointer<ffi.Pointer<ffi.Uint8>>,
              ffi.Pointer<ffi.Size>,
              ffi.Pointer<ffi.Uint64>,
              ffi.Pointer<cs_insn>)>>('cs_disasm_iter');
  late final _disasm_iter = _disasm_iterPtr.asFunction<
      bool Function(
          int,
          ffi.Pointer<ffi.Pointer<ffi.Uint8>>,
          ffi.Pointer<ffi.Size>,
          ffi.Pointer<ffi.Uint64>,
          ffi.Pointer<cs_insn>)>();

  /// Return friendly name of register in a string.
  /// Find the instruction id from header file of corresponding architecture (arm.h for ARM,
  /// x86.h for X86, ...)
  ///
  /// WARN: when in 'diet' mode, this API is irrelevant because engine does not
  /// store register name.
  ///
  /// @handle: handle returned by cs_open()
  /// @reg_id: register id
  ///
  /// @return: string name of the register, or NULL if @reg_id is invalid.
  ffi.Pointer<ffi.Char> reg_name(
    int handle,
    int reg_id,
  ) {
    return _reg_name(
      handle,
      reg_id,
    );
  }

  late final _reg_namePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(csh, ffi.UnsignedInt)>>('cs_reg_name');
  late final _reg_name =
      _reg_namePtr.asFunction<ffi.Pointer<ffi.Char> Function(int, int)>();

  /// Return friendly name of an instruction in a string.
  /// Find the instruction id from header file of corresponding architecture (arm.h for ARM, x86.h for X86, ...)
  ///
  /// WARN: when in 'diet' mode, this API is irrelevant because the engine does not
  /// store instruction name.
  ///
  /// @handle: handle returned by cs_open()
  /// @insn_id: instruction id
  ///
  /// @return: string name of the instruction, or NULL if @insn_id is invalid.
  ffi.Pointer<ffi.Char> insn_name(
    int handle,
    int insn_id,
  ) {
    return _insn_name(
      handle,
      insn_id,
    );
  }

  late final _insn_namePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              csh, ffi.UnsignedInt)>>('cs_insn_name');
  late final _insn_name =
      _insn_namePtr.asFunction<ffi.Pointer<ffi.Char> Function(int, int)>();

  /// Return friendly name of a group id (that an instruction can belong to)
  /// Find the group id from header file of corresponding architecture (arm.h for ARM, x86.h for X86, ...)
  ///
  /// WARN: when in 'diet' mode, this API is irrelevant because the engine does not
  /// store group name.
  ///
  /// @handle: handle returned by cs_open()
  /// @group_id: group id
  ///
  /// @return: string name of the group, or NULL if @group_id is invalid.
  ffi.Pointer<ffi.Char> group_name(
    int handle,
    int group_id,
  ) {
    return _group_name(
      handle,
      group_id,
    );
  }

  late final _group_namePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              csh, ffi.UnsignedInt)>>('cs_group_name');
  late final _group_name =
      _group_namePtr.asFunction<ffi.Pointer<ffi.Char> Function(int, int)>();

  /// Check if a disassembled instruction belong to a particular group.
  /// Find the group id from header file of corresponding architecture (arm.h for ARM, x86.h for X86, ...)
  /// Internally, this simply verifies if @group_id matches any member of insn->groups array.
  ///
  /// NOTE: this API is only valid when detail option is ON (which is OFF by default).
  ///
  /// WARN: when in 'diet' mode, this API is irrelevant because the engine does not
  /// update @groups array.
  ///
  /// @handle: handle returned by cs_open()
  /// @insn: disassembled instruction structure received from cs_disasm() or cs_disasm_iter()
  /// @group_id: group that you want to check if this instruction belong to.
  ///
  /// @return: true if this instruction indeed belongs to the given group, or false otherwise.
  bool insn_group(
    int handle,
    ffi.Pointer<cs_insn> insn,
    int group_id,
  ) {
    return _insn_group(
      handle,
      insn,
      group_id,
    );
  }

  late final _insn_groupPtr = _lookup<
      ffi.NativeFunction<
          ffi.Bool Function(
              csh, ffi.Pointer<cs_insn>, ffi.UnsignedInt)>>('cs_insn_group');
  late final _insn_group = _insn_groupPtr
      .asFunction<bool Function(int, ffi.Pointer<cs_insn>, int)>();

  /// Check if a disassembled instruction IMPLICITLY used a particular register.
  /// Find the register id from header file of corresponding architecture (arm.h for ARM, x86.h for X86, ...)
  /// Internally, this simply verifies if @reg_id matches any member of insn->regs_read array.
  ///
  /// NOTE: this API is only valid when detail option is ON (which is OFF by default)
  ///
  /// WARN: when in 'diet' mode, this API is irrelevant because the engine does not
  /// update @regs_read array.
  ///
  /// @insn: disassembled instruction structure received from cs_disasm() or cs_disasm_iter()
  /// @reg_id: register that you want to check if this instruction used it.
  ///
  /// @return: true if this instruction indeed implicitly used the given register, or false otherwise.
  bool reg_read(
    int handle,
    ffi.Pointer<cs_insn> insn,
    int reg_id,
  ) {
    return _reg_read(
      handle,
      insn,
      reg_id,
    );
  }

  late final _reg_readPtr = _lookup<
      ffi.NativeFunction<
          ffi.Bool Function(
              csh, ffi.Pointer<cs_insn>, ffi.UnsignedInt)>>('cs_reg_read');
  late final _reg_read =
      _reg_readPtr.asFunction<bool Function(int, ffi.Pointer<cs_insn>, int)>();

  /// Check if a disassembled instruction IMPLICITLY modified a particular register.
  /// Find the register id from header file of corresponding architecture (arm.h for ARM, x86.h for X86, ...)
  /// Internally, this simply verifies if @reg_id matches any member of insn->regs_write array.
  ///
  /// NOTE: this API is only valid when detail option is ON (which is OFF by default)
  ///
  /// WARN: when in 'diet' mode, this API is irrelevant because the engine does not
  /// update @regs_write array.
  ///
  /// @insn: disassembled instruction structure received from cs_disasm() or cs_disasm_iter()
  /// @reg_id: register that you want to check if this instruction modified it.
  ///
  /// @return: true if this instruction indeed implicitly modified the given register, or false otherwise.
  bool reg_write(
    int handle,
    ffi.Pointer<cs_insn> insn,
    int reg_id,
  ) {
    return _reg_write(
      handle,
      insn,
      reg_id,
    );
  }

  late final _reg_writePtr = _lookup<
      ffi.NativeFunction<
          ffi.Bool Function(
              csh, ffi.Pointer<cs_insn>, ffi.UnsignedInt)>>('cs_reg_write');
  late final _reg_write =
      _reg_writePtr.asFunction<bool Function(int, ffi.Pointer<cs_insn>, int)>();

  /// Count the number of operands of a given type.
  /// Find the operand type in header file of corresponding architecture (arm.h for ARM, x86.h for X86, ...)
  ///
  /// NOTE: this API is only valid when detail option is ON (which is OFF by default)
  ///
  /// @handle: handle returned by cs_open()
  /// @insn: disassembled instruction structure received from cs_disasm() or cs_disasm_iter()
  /// @op_type: Operand type to be found.
  ///
  /// @return: number of operands of given type @op_type in instruction @insn,
  /// or -1 on failure.
  int op_count(
    int handle,
    ffi.Pointer<cs_insn> insn,
    int op_type,
  ) {
    return _op_count(
      handle,
      insn,
      op_type,
    );
  }

  late final _op_countPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              csh, ffi.Pointer<cs_insn>, ffi.UnsignedInt)>>('cs_op_count');
  late final _op_count =
      _op_countPtr.asFunction<int Function(int, ffi.Pointer<cs_insn>, int)>();

  /// Retrieve the position of operand of given type in <arch>.operands[] array.
  /// Later, the operand can be accessed using the returned position.
  /// Find the operand type in header file of corresponding architecture (arm.h for ARM, x86.h for X86, ...)
  ///
  /// NOTE: this API is only valid when detail option is ON (which is OFF by default)
  ///
  /// @handle: handle returned by cs_open()
  /// @insn: disassembled instruction structure received from cs_disasm() or cs_disasm_iter()
  /// @op_type: Operand type to be found.
  /// @position: position of the operand to be found. This must be in the range
  /// [1, cs_op_count(handle, insn, op_type)]
  ///
  /// @return: index of operand of given type @op_type in <arch>.operands[] array
  /// in instruction @insn, or -1 on failure.
  int op_index(
    int handle,
    ffi.Pointer<cs_insn> insn,
    int op_type,
    int position,
  ) {
    return _op_index(
      handle,
      insn,
      op_type,
      position,
    );
  }

  late final _op_indexPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(csh, ffi.Pointer<cs_insn>, ffi.UnsignedInt,
              ffi.UnsignedInt)>>('cs_op_index');
  late final _op_index = _op_indexPtr
      .asFunction<int Function(int, ffi.Pointer<cs_insn>, int, int)>();

  /// Retrieve all the registers accessed by an instruction, either explicitly or
  /// implicitly.
  ///
  /// WARN: when in 'diet' mode, this API is irrelevant because engine does not
  /// store registers.
  ///
  /// @handle: handle returned by cs_open()
  /// @insn: disassembled instruction structure returned from cs_disasm() or cs_disasm_iter()
  /// @regs_read: on return, this array contains all registers read by instruction.
  /// @regs_read_count: number of registers kept inside @regs_read array.
  /// @regs_write: on return, this array contains all registers written by instruction.
  /// @regs_write_count: number of registers kept inside @regs_write array.
  ///
  /// @return CS_ERR_OK on success, or other value on failure (refer to cs_err enum
  /// for detailed error).
  int regs_access(
    int handle,
    ffi.Pointer<cs_insn> insn,
    ffi.Pointer<ffi.Uint16> regs_read,
    ffi.Pointer<ffi.Uint8> regs_read_count,
    ffi.Pointer<ffi.Uint16> regs_write,
    ffi.Pointer<ffi.Uint8> regs_write_count,
  ) {
    return _regs_access(
      handle,
      insn,
      regs_read,
      regs_read_count,
      regs_write,
      regs_write_count,
    );
  }

  late final _regs_accessPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int32 Function(
              csh,
              ffi.Pointer<cs_insn>,
              ffi.Pointer<ffi.Uint16>,
              ffi.Pointer<ffi.Uint8>,
              ffi.Pointer<ffi.Uint16>,
              ffi.Pointer<ffi.Uint8>)>>('cs_regs_access');
  late final _regs_access = _regs_accessPtr.asFunction<
      int Function(
          int,
          ffi.Pointer<cs_insn>,
          ffi.Pointer<ffi.Uint16>,
          ffi.Pointer<ffi.Uint8>,
          ffi.Pointer<ffi.Uint16>,
          ffi.Pointer<ffi.Uint8>)>();
}

/// Architecture type
abstract class cs_arch {
  /// < ARM architecture (including Thumb, Thumb-2)
  static const int ARM = 0;

  /// < ARM-64, also called AArch64
  static const int ARM64 = 1;

  /// < Mips architecture
  static const int MIPS = 2;

  /// < X86 architecture (including x86 & x86-64)
  static const int X86 = 3;

  /// < PowerPC architecture
  static const int PPC = 4;

  /// < Sparc architecture
  static const int SPARC = 5;

  /// < SystemZ architecture
  static const int SYSZ = 6;

  /// < XCore architecture
  static const int XCORE = 7;

  /// < 68K architecture
  static const int M68K = 8;

  /// < TMS320C64x architecture
  static const int TMS320C64X = 9;

  /// < 680X architecture
  static const int M680X = 10;

  /// < Ethereum architecture
  static const int EVM = 11;
  static const int MAX = 12;
  static const int ALL = 65535;
}

/// Mode type
abstract class cs_mode {
  /// < little-endian mode (default mode)
  static const int LITTLE_ENDIAN = 0;

  /// < 32-bit ARM
  static const int ARM = 0;

  /// < 16-bit mode (X86)
  static const int $16 = 2;

  /// < 32-bit mode (X86)
  static const int $32 = 4;

  /// < 64-bit mode (X86, PPC)
  static const int $64 = 8;

  /// < ARM's Thumb mode, including Thumb-2
  static const int THUMB = 16;

  /// < ARM's Cortex-M series
  static const int MCLASS = 32;

  /// < ARMv8 A32 encodings for ARM
  static const int V8 = 64;

  /// < MicroMips mode (MIPS)
  static const int MICRO = 16;

  /// < Mips III ISA
  static const int MIPS3 = 32;

  /// < Mips32r6 ISA
  static const int MIPS32R6 = 64;

  /// < Mips II ISA
  static const int MIPS2 = 128;

  /// < SparcV9 mode (Sparc)
  static const int V9 = 16;

  /// < Quad Processing eXtensions mode (PPC)
  static const int QPX = 16;

  /// < M68K 68000 mode
  static const int M68K_000 = 2;

  /// < M68K 68010 mode
  static const int M68K_010 = 4;

  /// < M68K 68020 mode
  static const int M68K_020 = 8;

  /// < M68K 68030 mode
  static const int M68K_030 = 16;

  /// < M68K 68040 mode
  static const int M68K_040 = 32;

  /// < M68K 68060 mode
  static const int M68K_060 = 64;

  /// < big-endian mode
  static const int BIG_ENDIAN = -2147483648;

  /// < Mips32 ISA (Mips)
  static const int MIPS32 = 4;

  /// < Mips64 ISA (Mips)
  static const int MIPS64 = 8;

  /// < M680X Hitachi 6301,6303 mode
  static const int M680X_6301 = 2;

  /// < M680X Hitachi 6309 mode
  static const int M680X_6309 = 4;

  /// < M680X Motorola 6800,6802 mode
  static const int M680X_6800 = 8;

  /// < M680X Motorola 6801,6803 mode
  static const int M680X_6801 = 16;

  /// < M680X Motorola/Freescale 6805 mode
  static const int M680X_6805 = 32;

  /// < M680X Motorola/Freescale/NXP 68HC08 mode
  static const int M680X_6808 = 64;

  /// < M680X Motorola 6809 mode
  static const int M680X_6809 = 128;

  /// < M680X Motorola/Freescale/NXP 68HC11 mode
  static const int M680X_6811 = 256;

  /// < M680X Motorola/Freescale/NXP CPU12
  /// < used on M68HC12/HCS12
  static const int M680X_CPU12 = 512;

  /// < M680X Freescale/NXP HCS08 mode
  static const int M680X_HCS08 = 1024;
}

/// User-defined dynamic memory related functions: malloc/calloc/realloc/free/vsnprintf()
/// By default, Capstone uses system's malloc(), calloc(), realloc(), free() & vsnprintf().
class cs_opt_mem extends ffi.Struct {
  external cs_malloc_t malloc;

  external cs_calloc_t calloc;

  external cs_realloc_t realloc;

  external cs_free_t free;

  external cs_vsnprintf_t vsnprintf;
}

typedef cs_malloc_t = ffi
    .Pointer<ffi.NativeFunction<ffi.Pointer<ffi.Void> Function(ffi.Size size)>>;
typedef cs_calloc_t = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Pointer<ffi.Void> Function(ffi.Size nmemb, ffi.Size size)>>;
typedef cs_realloc_t = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Pointer<ffi.Void> Function(
            ffi.Pointer<ffi.Void> ptr, ffi.Size size)>>;
typedef cs_free_t = ffi
    .Pointer<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void> ptr)>>;
typedef cs_vsnprintf_t = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Int Function(ffi.Pointer<ffi.Char> str, ffi.Size size,
            ffi.Pointer<ffi.Char> format, va_list ap)>>;
typedef va_list = ffi.Pointer<ffi.Char>;

/// Customize mnemonic for instructions with alternative name.
/// To reset existing customized instruction to its default mnemonic,
/// call cs_option(CS_OPT_MNEMONIC) again with the same @id and NULL value
/// for @mnemonic.
class cs_opt_mnem extends ffi.Struct {
  /// ID of instruction to be customized.
  @ffi.UnsignedInt()
  external int id;

  /// Customized instruction mnemonic.
  external ffi.Pointer<ffi.Char> mnemonic;
}

/// Runtime option for the disassembled engine
abstract class cs_opt_type {
  /// < No option specified
  static const int INVALID = 0;

  /// < Assembly output syntax
  static const int SYNTAX = 1;

  /// < Break down instruction structure into details
  static const int DETAIL = 2;

  /// < Change engine's mode at run-time
  static const int MODE = 3;

  /// < User-defined dynamic memory related functions
  static const int MEM = 4;

  /// < Skip data when disassembling. Then engine is in SKIPDATA mode.
  static const int SKIPDATA = 5;

  /// < Setup user-defined function for SKIPDATA option
  static const int SKIPDATA_SETUP = 6;

  /// < Customize instruction mnemonic
  static const int MNEMONIC = 7;

  /// < print immediate operands in unsigned form
  static const int UNSIGNED = 8;
}

/// Runtime option value (associated with option type above)
abstract class cs_opt_value {
  /// < Turn OFF an option - default for CS_OPT_DETAIL, CS_OPT_SKIPDATA, CS_OPT_UNSIGNED.
  static const int OFF = 0;

  /// < Turn ON an option (CS_OPT_DETAIL, CS_OPT_SKIPDATA).
  static const int ON = 3;

  /// < Default asm syntax (CS_OPT_SYNTAX).
  static const int SYNTAX_DEFAULT = 0;

  /// < X86 Intel asm syntax - default on X86 (CS_OPT_SYNTAX).
  static const int SYNTAX_INTEL = 1;

  /// < X86 ATT asm syntax (CS_OPT_SYNTAX).
  static const int SYNTAX_ATT = 2;

  /// < Prints register name with only number (CS_OPT_SYNTAX)
  static const int SYNTAX_NOREGNAME = 3;

  /// < X86 Intel Masm syntax (CS_OPT_SYNTAX).
  static const int SYNTAX_MASM = 4;
}

/// Common instruction operand types - to be consistent across all architectures.
abstract class cs_op_type {
  /// < uninitialized/invalid operand.
  static const int INVALID = 0;

  /// < Register operand.
  static const int REG = 1;

  /// < Immediate operand.
  static const int IMM = 2;

  /// < Memory operand.
  static const int MEM = 3;

  /// < Floating-Point operand.
  static const int FP = 4;
}

/// Common instruction operand access types - to be consistent across all architectures.
/// It is possible to combine access types, for example: CS_AC_READ | CS_AC_WRITE
abstract class cs_ac_type {
  /// < Uninitialized/invalid access type.
  static const int INVALID = 0;

  /// < Operand read from memory or register.
  static const int READ = 1;

  /// < Operand write to memory or register.
  static const int WRITE = 2;
}

/// Common instruction groups - to be consistent across all architectures.
abstract class cs_group_type {
  /// < uninitialized/invalid group.
  static const int INVALID = 0;

  /// < all jump instructions (conditional+direct+indirect jumps)
  static const int JUMP = 1;

  /// < all call instructions
  static const int CALL = 2;

  /// < all return instructions
  static const int RET = 3;

  /// < all interrupt instructions (int+syscall)
  static const int INT = 4;

  /// < all interrupt return instructions
  static const int IRET = 5;

  /// < all privileged instructions
  static const int PRIVILEGE = 6;

  /// < all relative branching instructions
  static const int BRANCH_RELATIVE = 7;
}

/// User-customized setup for SKIPDATA option
class cs_opt_skipdata extends ffi.Struct {
  /// Capstone considers data to skip as special "instructions".
  /// User can specify the string for this instruction's "mnemonic" here.
  /// By default (if @mnemonic is NULL), Capstone use ".byte".
  external ffi.Pointer<ffi.Char> mnemonic;

  /// User-defined callback function to be called when Capstone hits data.
  /// If the returned value from this callback is positive (>0), Capstone
  /// will skip exactly that number of bytes & continue. Otherwise, if
  /// the callback returns 0, Capstone stops disassembling and returns
  /// immediately from cs_disasm()
  /// NOTE: if this callback pointer is NULL, Capstone would skip a number
  /// of bytes depending on architectures, as following:
  /// Arm:     2 bytes (Thumb mode) or 4 bytes.
  /// Arm64:   4 bytes.
  /// Mips:    4 bytes.
  /// M680x:   1 byte.
  /// PowerPC: 4 bytes.
  /// Sparc:   4 bytes.
  /// SystemZ: 2 bytes.
  /// X86:     1 bytes.
  /// XCore:   2 bytes.
  /// EVM:     1 bytes.
  external cs_skipdata_cb_t callback;

  /// User-defined data to be passed to @callback function pointer.
  external ffi.Pointer<ffi.Void> user_data;
}

/// User-defined callback function for SKIPDATA option.
/// See tests/test_skipdata.c for sample code demonstrating this API.
///
/// @code: the input buffer containing code to be disassembled.
/// This is the same buffer passed to cs_disasm().
/// @code_size: size (in bytes) of the above @code buffer.
/// @offset: the position of the currently-examining byte in the input
/// buffer @code mentioned above.
/// @user_data: user-data passed to cs_option() via @user_data field in
/// cs_opt_skipdata struct below.
///
/// @return: return number of bytes to skip, or 0 to immediately stop disassembling.
typedef cs_skipdata_cb_t = ffi.Pointer<
    ffi.NativeFunction<
        ffi.Size Function(ffi.Pointer<ffi.Uint8> code, ffi.Size code_size,
            ffi.Size offset, ffi.Pointer<ffi.Void> user_data)>>;

/// ARM shift type
abstract class arm_shifter {
  static const int ARM_SFT_INVALID = 0;

  /// < shift with immediate const
  static const int ARM_SFT_ASR = 1;

  /// < shift with immediate const
  static const int ARM_SFT_LSL = 2;

  /// < shift with immediate const
  static const int ARM_SFT_LSR = 3;

  /// < shift with immediate const
  static const int ARM_SFT_ROR = 4;

  /// < shift with immediate const
  static const int ARM_SFT_RRX = 5;

  /// < shift with register
  static const int ARM_SFT_ASR_REG = 6;

  /// < shift with register
  static const int ARM_SFT_LSL_REG = 7;

  /// < shift with register
  static const int ARM_SFT_LSR_REG = 8;

  /// < shift with register
  static const int ARM_SFT_ROR_REG = 9;

  /// < shift with register
  static const int ARM_SFT_RRX_REG = 10;
}

/// ARM condition code
abstract class arm_cc {
  static const int ARM_CC_INVALID = 0;

  /// < Equal                      Equal
  static const int ARM_CC_EQ = 1;

  /// < Not equal                  Not equal, or unordered
  static const int ARM_CC_NE = 2;

  /// < Carry set                  >, ==, or unordered
  static const int ARM_CC_HS = 3;

  /// < Carry clear                Less than
  static const int ARM_CC_LO = 4;

  /// < Minus, negative            Less than
  static const int ARM_CC_MI = 5;

  /// < Plus, positive or zero     >, ==, or unordered
  static const int ARM_CC_PL = 6;

  /// < Overflow                   Unordered
  static const int ARM_CC_VS = 7;

  /// < No overflow                Not unordered
  static const int ARM_CC_VC = 8;

  /// < Unsigned higher            Greater than, or unordered
  static const int ARM_CC_HI = 9;

  /// < Unsigned lower or same     Less than or equal
  static const int ARM_CC_LS = 10;

  /// < Greater than or equal      Greater than or equal
  static const int ARM_CC_GE = 11;

  /// < Less than                  Less than, or unordered
  static const int ARM_CC_LT = 12;

  /// < Greater than               Greater than
  static const int ARM_CC_GT = 13;

  /// < Less than or equal         <, ==, or unordered
  static const int ARM_CC_LE = 14;

  /// < Always (unconditional)     Always (unconditional)
  static const int ARM_CC_AL = 15;
}

abstract class arm_sysreg {
  /// Special registers for MSR
  static const int ARM_SYSREG_INVALID = 0;
  static const int ARM_SYSREG_SPSR_C = 1;
  static const int ARM_SYSREG_SPSR_X = 2;
  static const int ARM_SYSREG_SPSR_S = 4;
  static const int ARM_SYSREG_SPSR_F = 8;
  static const int ARM_SYSREG_CPSR_C = 16;
  static const int ARM_SYSREG_CPSR_X = 32;
  static const int ARM_SYSREG_CPSR_S = 64;
  static const int ARM_SYSREG_CPSR_F = 128;
  static const int ARM_SYSREG_APSR = 256;
  static const int ARM_SYSREG_APSR_G = 257;
  static const int ARM_SYSREG_APSR_NZCVQ = 258;
  static const int ARM_SYSREG_APSR_NZCVQG = 259;
  static const int ARM_SYSREG_IAPSR = 260;
  static const int ARM_SYSREG_IAPSR_G = 261;
  static const int ARM_SYSREG_IAPSR_NZCVQG = 262;
  static const int ARM_SYSREG_IAPSR_NZCVQ = 263;
  static const int ARM_SYSREG_EAPSR = 264;
  static const int ARM_SYSREG_EAPSR_G = 265;
  static const int ARM_SYSREG_EAPSR_NZCVQG = 266;
  static const int ARM_SYSREG_EAPSR_NZCVQ = 267;
  static const int ARM_SYSREG_XPSR = 268;
  static const int ARM_SYSREG_XPSR_G = 269;
  static const int ARM_SYSREG_XPSR_NZCVQG = 270;
  static const int ARM_SYSREG_XPSR_NZCVQ = 271;
  static const int ARM_SYSREG_IPSR = 272;
  static const int ARM_SYSREG_EPSR = 273;
  static const int ARM_SYSREG_IEPSR = 274;
  static const int ARM_SYSREG_MSP = 275;
  static const int ARM_SYSREG_PSP = 276;
  static const int ARM_SYSREG_PRIMASK = 277;
  static const int ARM_SYSREG_BASEPRI = 278;
  static const int ARM_SYSREG_BASEPRI_MAX = 279;
  static const int ARM_SYSREG_FAULTMASK = 280;
  static const int ARM_SYSREG_CONTROL = 281;
  static const int ARM_SYSREG_R8_USR = 282;
  static const int ARM_SYSREG_R9_USR = 283;
  static const int ARM_SYSREG_R10_USR = 284;
  static const int ARM_SYSREG_R11_USR = 285;
  static const int ARM_SYSREG_R12_USR = 286;
  static const int ARM_SYSREG_SP_USR = 287;
  static const int ARM_SYSREG_LR_USR = 288;
  static const int ARM_SYSREG_R8_FIQ = 289;
  static const int ARM_SYSREG_R9_FIQ = 290;
  static const int ARM_SYSREG_R10_FIQ = 291;
  static const int ARM_SYSREG_R11_FIQ = 292;
  static const int ARM_SYSREG_R12_FIQ = 293;
  static const int ARM_SYSREG_SP_FIQ = 294;
  static const int ARM_SYSREG_LR_FIQ = 295;
  static const int ARM_SYSREG_LR_IRQ = 296;
  static const int ARM_SYSREG_SP_IRQ = 297;
  static const int ARM_SYSREG_LR_SVC = 298;
  static const int ARM_SYSREG_SP_SVC = 299;
  static const int ARM_SYSREG_LR_ABT = 300;
  static const int ARM_SYSREG_SP_ABT = 301;
  static const int ARM_SYSREG_LR_UND = 302;
  static const int ARM_SYSREG_SP_UND = 303;
  static const int ARM_SYSREG_LR_MON = 304;
  static const int ARM_SYSREG_SP_MON = 305;
  static const int ARM_SYSREG_ELR_HYP = 306;
  static const int ARM_SYSREG_SP_HYP = 307;
  static const int ARM_SYSREG_SPSR_FIQ = 308;
  static const int ARM_SYSREG_SPSR_IRQ = 309;
  static const int ARM_SYSREG_SPSR_SVC = 310;
  static const int ARM_SYSREG_SPSR_ABT = 311;
  static const int ARM_SYSREG_SPSR_UND = 312;
  static const int ARM_SYSREG_SPSR_MON = 313;
  static const int ARM_SYSREG_SPSR_HYP = 314;
}

/// The memory barrier constants map directly to the 4-bit encoding of
/// the option field for Memory Barrier operations.
abstract class arm_mem_barrier {
  static const int ARM_MB_INVALID = 0;
  static const int ARM_MB_RESERVED_0 = 1;
  static const int ARM_MB_OSHLD = 2;
  static const int ARM_MB_OSHST = 3;
  static const int ARM_MB_OSH = 4;
  static const int ARM_MB_RESERVED_4 = 5;
  static const int ARM_MB_NSHLD = 6;
  static const int ARM_MB_NSHST = 7;
  static const int ARM_MB_NSH = 8;
  static const int ARM_MB_RESERVED_8 = 9;
  static const int ARM_MB_ISHLD = 10;
  static const int ARM_MB_ISHST = 11;
  static const int ARM_MB_ISH = 12;
  static const int ARM_MB_RESERVED_12 = 13;
  static const int ARM_MB_LD = 14;
  static const int ARM_MB_ST = 15;
  static const int ARM_MB_SY = 16;
}

/// Operand type for instruction's operands
abstract class arm_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int ARM_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int ARM_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int ARM_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int ARM_OP_MEM = 3;

  /// < = CS_OP_FP (Floating-Point operand).
  static const int ARM_OP_FP = 4;

  /// < C-Immediate (coprocessor registers)
  static const int ARM_OP_CIMM = 64;

  /// < P-Immediate (coprocessor registers)
  static const int ARM_OP_PIMM = 65;

  /// < operand for SETEND instruction
  static const int ARM_OP_SETEND = 66;

  /// < MSR/MRS special register operand
  static const int ARM_OP_SYSREG = 67;
}

/// Operand type for SETEND instruction
abstract class arm_setend_type {
  /// < Uninitialized.
  static const int ARM_SETEND_INVALID = 0;

  /// < BE operand.
  static const int ARM_SETEND_BE = 1;

  /// < LE operand
  static const int ARM_SETEND_LE = 2;
}

abstract class arm_cpsmode_type {
  static const int ARM_CPSMODE_INVALID = 0;
  static const int ARM_CPSMODE_IE = 2;
  static const int ARM_CPSMODE_ID = 3;
}

/// Operand type for SETEND instruction
abstract class arm_cpsflag_type {
  static const int ARM_CPSFLAG_INVALID = 0;
  static const int ARM_CPSFLAG_F = 1;
  static const int ARM_CPSFLAG_I = 2;
  static const int ARM_CPSFLAG_A = 4;

  /// < no flag
  static const int ARM_CPSFLAG_NONE = 16;
}

/// Data type for elements of vector instructions.
abstract class arm_vectordata_type {
  static const int ARM_VECTORDATA_INVALID = 0;
  static const int ARM_VECTORDATA_I8 = 1;
  static const int ARM_VECTORDATA_I16 = 2;
  static const int ARM_VECTORDATA_I32 = 3;
  static const int ARM_VECTORDATA_I64 = 4;
  static const int ARM_VECTORDATA_S8 = 5;
  static const int ARM_VECTORDATA_S16 = 6;
  static const int ARM_VECTORDATA_S32 = 7;
  static const int ARM_VECTORDATA_S64 = 8;
  static const int ARM_VECTORDATA_U8 = 9;
  static const int ARM_VECTORDATA_U16 = 10;
  static const int ARM_VECTORDATA_U32 = 11;
  static const int ARM_VECTORDATA_U64 = 12;
  static const int ARM_VECTORDATA_P8 = 13;
  static const int ARM_VECTORDATA_F32 = 14;
  static const int ARM_VECTORDATA_F64 = 15;
  static const int ARM_VECTORDATA_F16F64 = 16;
  static const int ARM_VECTORDATA_F64F16 = 17;
  static const int ARM_VECTORDATA_F32F16 = 18;
  static const int ARM_VECTORDATA_F16F32 = 19;
  static const int ARM_VECTORDATA_F64F32 = 20;
  static const int ARM_VECTORDATA_F32F64 = 21;
  static const int ARM_VECTORDATA_S32F32 = 22;
  static const int ARM_VECTORDATA_U32F32 = 23;
  static const int ARM_VECTORDATA_F32S32 = 24;
  static const int ARM_VECTORDATA_F32U32 = 25;
  static const int ARM_VECTORDATA_F64S16 = 26;
  static const int ARM_VECTORDATA_F32S16 = 27;
  static const int ARM_VECTORDATA_F64S32 = 28;
  static const int ARM_VECTORDATA_S16F64 = 29;
  static const int ARM_VECTORDATA_S16F32 = 30;
  static const int ARM_VECTORDATA_S32F64 = 31;
  static const int ARM_VECTORDATA_U16F64 = 32;
  static const int ARM_VECTORDATA_U16F32 = 33;
  static const int ARM_VECTORDATA_U32F64 = 34;
  static const int ARM_VECTORDATA_F64U16 = 35;
  static const int ARM_VECTORDATA_F32U16 = 36;
  static const int ARM_VECTORDATA_F64U32 = 37;
}

/// ARM registers
abstract class arm_reg {
  static const int ARM_REG_INVALID = 0;
  static const int ARM_REG_APSR = 1;
  static const int ARM_REG_APSR_NZCV = 2;
  static const int ARM_REG_CPSR = 3;
  static const int ARM_REG_FPEXC = 4;
  static const int ARM_REG_FPINST = 5;
  static const int ARM_REG_FPSCR = 6;
  static const int ARM_REG_FPSCR_NZCV = 7;
  static const int ARM_REG_FPSID = 8;
  static const int ARM_REG_ITSTATE = 9;
  static const int ARM_REG_LR = 10;
  static const int ARM_REG_PC = 11;
  static const int ARM_REG_SP = 12;
  static const int ARM_REG_SPSR = 13;
  static const int ARM_REG_D0 = 14;
  static const int ARM_REG_D1 = 15;
  static const int ARM_REG_D2 = 16;
  static const int ARM_REG_D3 = 17;
  static const int ARM_REG_D4 = 18;
  static const int ARM_REG_D5 = 19;
  static const int ARM_REG_D6 = 20;
  static const int ARM_REG_D7 = 21;
  static const int ARM_REG_D8 = 22;
  static const int ARM_REG_D9 = 23;
  static const int ARM_REG_D10 = 24;
  static const int ARM_REG_D11 = 25;
  static const int ARM_REG_D12 = 26;
  static const int ARM_REG_D13 = 27;
  static const int ARM_REG_D14 = 28;
  static const int ARM_REG_D15 = 29;
  static const int ARM_REG_D16 = 30;
  static const int ARM_REG_D17 = 31;
  static const int ARM_REG_D18 = 32;
  static const int ARM_REG_D19 = 33;
  static const int ARM_REG_D20 = 34;
  static const int ARM_REG_D21 = 35;
  static const int ARM_REG_D22 = 36;
  static const int ARM_REG_D23 = 37;
  static const int ARM_REG_D24 = 38;
  static const int ARM_REG_D25 = 39;
  static const int ARM_REG_D26 = 40;
  static const int ARM_REG_D27 = 41;
  static const int ARM_REG_D28 = 42;
  static const int ARM_REG_D29 = 43;
  static const int ARM_REG_D30 = 44;
  static const int ARM_REG_D31 = 45;
  static const int ARM_REG_FPINST2 = 46;
  static const int ARM_REG_MVFR0 = 47;
  static const int ARM_REG_MVFR1 = 48;
  static const int ARM_REG_MVFR2 = 49;
  static const int ARM_REG_Q0 = 50;
  static const int ARM_REG_Q1 = 51;
  static const int ARM_REG_Q2 = 52;
  static const int ARM_REG_Q3 = 53;
  static const int ARM_REG_Q4 = 54;
  static const int ARM_REG_Q5 = 55;
  static const int ARM_REG_Q6 = 56;
  static const int ARM_REG_Q7 = 57;
  static const int ARM_REG_Q8 = 58;
  static const int ARM_REG_Q9 = 59;
  static const int ARM_REG_Q10 = 60;
  static const int ARM_REG_Q11 = 61;
  static const int ARM_REG_Q12 = 62;
  static const int ARM_REG_Q13 = 63;
  static const int ARM_REG_Q14 = 64;
  static const int ARM_REG_Q15 = 65;
  static const int ARM_REG_R0 = 66;
  static const int ARM_REG_R1 = 67;
  static const int ARM_REG_R2 = 68;
  static const int ARM_REG_R3 = 69;
  static const int ARM_REG_R4 = 70;
  static const int ARM_REG_R5 = 71;
  static const int ARM_REG_R6 = 72;
  static const int ARM_REG_R7 = 73;
  static const int ARM_REG_R8 = 74;
  static const int ARM_REG_R9 = 75;
  static const int ARM_REG_R10 = 76;
  static const int ARM_REG_R11 = 77;
  static const int ARM_REG_R12 = 78;
  static const int ARM_REG_S0 = 79;
  static const int ARM_REG_S1 = 80;
  static const int ARM_REG_S2 = 81;
  static const int ARM_REG_S3 = 82;
  static const int ARM_REG_S4 = 83;
  static const int ARM_REG_S5 = 84;
  static const int ARM_REG_S6 = 85;
  static const int ARM_REG_S7 = 86;
  static const int ARM_REG_S8 = 87;
  static const int ARM_REG_S9 = 88;
  static const int ARM_REG_S10 = 89;
  static const int ARM_REG_S11 = 90;
  static const int ARM_REG_S12 = 91;
  static const int ARM_REG_S13 = 92;
  static const int ARM_REG_S14 = 93;
  static const int ARM_REG_S15 = 94;
  static const int ARM_REG_S16 = 95;
  static const int ARM_REG_S17 = 96;
  static const int ARM_REG_S18 = 97;
  static const int ARM_REG_S19 = 98;
  static const int ARM_REG_S20 = 99;
  static const int ARM_REG_S21 = 100;
  static const int ARM_REG_S22 = 101;
  static const int ARM_REG_S23 = 102;
  static const int ARM_REG_S24 = 103;
  static const int ARM_REG_S25 = 104;
  static const int ARM_REG_S26 = 105;
  static const int ARM_REG_S27 = 106;
  static const int ARM_REG_S28 = 107;
  static const int ARM_REG_S29 = 108;
  static const int ARM_REG_S30 = 109;
  static const int ARM_REG_S31 = 110;
  static const int ARM_REG_ENDING = 111;
  static const int ARM_REG_R13 = 12;
  static const int ARM_REG_R14 = 10;
  static const int ARM_REG_R15 = 11;
  static const int ARM_REG_SB = 75;
  static const int ARM_REG_SL = 76;
  static const int ARM_REG_FP = 77;
  static const int ARM_REG_IP = 78;
}

/// Instruction's operand referring to memory
/// This is associated with ARM_OP_MEM operand type above
class arm_op_mem extends ffi.Struct {
  /// < base register
  @ffi.Int32()
  external int base;

  /// < index register
  @ffi.Int32()
  external int index;

  /// < scale for index register (can be 1, or -1)
  @ffi.Int()
  external int scale;

  /// < displacement/offset value
  @ffi.Int()
  external int disp;

  /// left-shift on index register, or 0 if irrelevant
  /// NOTE: this value can also be fetched via operand.shift.value
  @ffi.Int()
  external int lshift;
}

/// Instruction operand
class cs_arm_op extends ffi.Struct {
  /// < Vector Index for some vector operands (or -1 if irrelevant)
  @ffi.Int()
  external int vector_index;

  external UnnamedStruct1 shift;

  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion1 unnamed;

  /// in some instructions, an operand can be subtracted or added to
  /// the base register,
  /// if TRUE, this operand is subtracted. otherwise, it is added.
  @ffi.Bool()
  external bool subtracted;

  /// How is this operand accessed? (READ, WRITE or READ|WRITE)
  /// This field is combined of cs_ac_type.
  /// NOTE: this field is irrelevant if engine is compiled in DIET mode.
  @ffi.Uint8()
  external int access;

  /// Neon lane index for NEON instructions (or -1 if irrelevant)
  @ffi.Int8()
  external int neon_lane;
}

class UnnamedStruct1 extends ffi.Struct {
  @ffi.Int32()
  external int type;

  @ffi.UnsignedInt()
  external int value;
}

class UnnamedUnion1 extends ffi.Union {
  /// < register value for REG/SYSREG operand
  @ffi.Int()
  external int reg;

  /// < immediate value for C-IMM, P-IMM or IMM operand
  @ffi.Int32()
  external int imm;

  /// < floating point value for FP operand
  @ffi.Double()
  external double fp;

  /// < base/index/scale/disp value for MEM operand
  external arm_op_mem mem;

  /// < SETEND instruction's operand type
  @ffi.Int32()
  external int setend;
}

/// Instruction structure
class cs_arm extends ffi.Struct {
  /// < User-mode registers to be loaded (for LDM/STM instructions)
  @ffi.Bool()
  external bool usermode;

  /// < Scalar size for vector instructions
  @ffi.Int()
  external int vector_size;

  /// < Data type for elements of vector instructions
  @ffi.Int32()
  external int vector_data;

  /// < CPS mode for CPS instruction
  @ffi.Int32()
  external int cps_mode;

  /// < CPS mode for CPS instruction
  @ffi.Int32()
  external int cps_flag;

  /// < conditional code for this insn
  @ffi.Int32()
  external int cc;

  /// < does this insn update flags?
  @ffi.Bool()
  external bool update_flags;

  /// < does this insn write-back?
  @ffi.Bool()
  external bool writeback;

  /// < Option for some memory barrier instructions
  @ffi.Int32()
  external int mem_barrier;

  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([36])
  external ffi.Array<cs_arm_op> operands;
}

/// ARM instruction
abstract class arm_insn {
  static const int ARM_INS_INVALID = 0;
  static const int ARM_INS_ADC = 1;
  static const int ARM_INS_ADD = 2;
  static const int ARM_INS_ADR = 3;
  static const int ARM_INS_AESD = 4;
  static const int ARM_INS_AESE = 5;
  static const int ARM_INS_AESIMC = 6;
  static const int ARM_INS_AESMC = 7;
  static const int ARM_INS_AND = 8;
  static const int ARM_INS_BFC = 9;
  static const int ARM_INS_BFI = 10;
  static const int ARM_INS_BIC = 11;
  static const int ARM_INS_BKPT = 12;
  static const int ARM_INS_BL = 13;
  static const int ARM_INS_BLX = 14;
  static const int ARM_INS_BX = 15;
  static const int ARM_INS_BXJ = 16;
  static const int ARM_INS_B = 17;
  static const int ARM_INS_CDP = 18;
  static const int ARM_INS_CDP2 = 19;
  static const int ARM_INS_CLREX = 20;
  static const int ARM_INS_CLZ = 21;
  static const int ARM_INS_CMN = 22;
  static const int ARM_INS_CMP = 23;
  static const int ARM_INS_CPS = 24;
  static const int ARM_INS_CRC32B = 25;
  static const int ARM_INS_CRC32CB = 26;
  static const int ARM_INS_CRC32CH = 27;
  static const int ARM_INS_CRC32CW = 28;
  static const int ARM_INS_CRC32H = 29;
  static const int ARM_INS_CRC32W = 30;
  static const int ARM_INS_DBG = 31;
  static const int ARM_INS_DMB = 32;
  static const int ARM_INS_DSB = 33;
  static const int ARM_INS_EOR = 34;
  static const int ARM_INS_ERET = 35;
  static const int ARM_INS_VMOV = 36;
  static const int ARM_INS_FLDMDBX = 37;
  static const int ARM_INS_FLDMIAX = 38;
  static const int ARM_INS_VMRS = 39;
  static const int ARM_INS_FSTMDBX = 40;
  static const int ARM_INS_FSTMIAX = 41;
  static const int ARM_INS_HINT = 42;
  static const int ARM_INS_HLT = 43;
  static const int ARM_INS_HVC = 44;
  static const int ARM_INS_ISB = 45;
  static const int ARM_INS_LDA = 46;
  static const int ARM_INS_LDAB = 47;
  static const int ARM_INS_LDAEX = 48;
  static const int ARM_INS_LDAEXB = 49;
  static const int ARM_INS_LDAEXD = 50;
  static const int ARM_INS_LDAEXH = 51;
  static const int ARM_INS_LDAH = 52;
  static const int ARM_INS_LDC2L = 53;
  static const int ARM_INS_LDC2 = 54;
  static const int ARM_INS_LDCL = 55;
  static const int ARM_INS_LDC = 56;
  static const int ARM_INS_LDMDA = 57;
  static const int ARM_INS_LDMDB = 58;
  static const int ARM_INS_LDM = 59;
  static const int ARM_INS_LDMIB = 60;
  static const int ARM_INS_LDRBT = 61;
  static const int ARM_INS_LDRB = 62;
  static const int ARM_INS_LDRD = 63;
  static const int ARM_INS_LDREX = 64;
  static const int ARM_INS_LDREXB = 65;
  static const int ARM_INS_LDREXD = 66;
  static const int ARM_INS_LDREXH = 67;
  static const int ARM_INS_LDRH = 68;
  static const int ARM_INS_LDRHT = 69;
  static const int ARM_INS_LDRSB = 70;
  static const int ARM_INS_LDRSBT = 71;
  static const int ARM_INS_LDRSH = 72;
  static const int ARM_INS_LDRSHT = 73;
  static const int ARM_INS_LDRT = 74;
  static const int ARM_INS_LDR = 75;
  static const int ARM_INS_MCR = 76;
  static const int ARM_INS_MCR2 = 77;
  static const int ARM_INS_MCRR = 78;
  static const int ARM_INS_MCRR2 = 79;
  static const int ARM_INS_MLA = 80;
  static const int ARM_INS_MLS = 81;
  static const int ARM_INS_MOV = 82;
  static const int ARM_INS_MOVT = 83;
  static const int ARM_INS_MOVW = 84;
  static const int ARM_INS_MRC = 85;
  static const int ARM_INS_MRC2 = 86;
  static const int ARM_INS_MRRC = 87;
  static const int ARM_INS_MRRC2 = 88;
  static const int ARM_INS_MRS = 89;
  static const int ARM_INS_MSR = 90;
  static const int ARM_INS_MUL = 91;
  static const int ARM_INS_MVN = 92;
  static const int ARM_INS_ORR = 93;
  static const int ARM_INS_PKHBT = 94;
  static const int ARM_INS_PKHTB = 95;
  static const int ARM_INS_PLDW = 96;
  static const int ARM_INS_PLD = 97;
  static const int ARM_INS_PLI = 98;
  static const int ARM_INS_QADD = 99;
  static const int ARM_INS_QADD16 = 100;
  static const int ARM_INS_QADD8 = 101;
  static const int ARM_INS_QASX = 102;
  static const int ARM_INS_QDADD = 103;
  static const int ARM_INS_QDSUB = 104;
  static const int ARM_INS_QSAX = 105;
  static const int ARM_INS_QSUB = 106;
  static const int ARM_INS_QSUB16 = 107;
  static const int ARM_INS_QSUB8 = 108;
  static const int ARM_INS_RBIT = 109;
  static const int ARM_INS_REV = 110;
  static const int ARM_INS_REV16 = 111;
  static const int ARM_INS_REVSH = 112;
  static const int ARM_INS_RFEDA = 113;
  static const int ARM_INS_RFEDB = 114;
  static const int ARM_INS_RFEIA = 115;
  static const int ARM_INS_RFEIB = 116;
  static const int ARM_INS_RSB = 117;
  static const int ARM_INS_RSC = 118;
  static const int ARM_INS_SADD16 = 119;
  static const int ARM_INS_SADD8 = 120;
  static const int ARM_INS_SASX = 121;
  static const int ARM_INS_SBC = 122;
  static const int ARM_INS_SBFX = 123;
  static const int ARM_INS_SDIV = 124;
  static const int ARM_INS_SEL = 125;
  static const int ARM_INS_SETEND = 126;
  static const int ARM_INS_SHA1C = 127;
  static const int ARM_INS_SHA1H = 128;
  static const int ARM_INS_SHA1M = 129;
  static const int ARM_INS_SHA1P = 130;
  static const int ARM_INS_SHA1SU0 = 131;
  static const int ARM_INS_SHA1SU1 = 132;
  static const int ARM_INS_SHA256H = 133;
  static const int ARM_INS_SHA256H2 = 134;
  static const int ARM_INS_SHA256SU0 = 135;
  static const int ARM_INS_SHA256SU1 = 136;
  static const int ARM_INS_SHADD16 = 137;
  static const int ARM_INS_SHADD8 = 138;
  static const int ARM_INS_SHASX = 139;
  static const int ARM_INS_SHSAX = 140;
  static const int ARM_INS_SHSUB16 = 141;
  static const int ARM_INS_SHSUB8 = 142;
  static const int ARM_INS_SMC = 143;
  static const int ARM_INS_SMLABB = 144;
  static const int ARM_INS_SMLABT = 145;
  static const int ARM_INS_SMLAD = 146;
  static const int ARM_INS_SMLADX = 147;
  static const int ARM_INS_SMLAL = 148;
  static const int ARM_INS_SMLALBB = 149;
  static const int ARM_INS_SMLALBT = 150;
  static const int ARM_INS_SMLALD = 151;
  static const int ARM_INS_SMLALDX = 152;
  static const int ARM_INS_SMLALTB = 153;
  static const int ARM_INS_SMLALTT = 154;
  static const int ARM_INS_SMLATB = 155;
  static const int ARM_INS_SMLATT = 156;
  static const int ARM_INS_SMLAWB = 157;
  static const int ARM_INS_SMLAWT = 158;
  static const int ARM_INS_SMLSD = 159;
  static const int ARM_INS_SMLSDX = 160;
  static const int ARM_INS_SMLSLD = 161;
  static const int ARM_INS_SMLSLDX = 162;
  static const int ARM_INS_SMMLA = 163;
  static const int ARM_INS_SMMLAR = 164;
  static const int ARM_INS_SMMLS = 165;
  static const int ARM_INS_SMMLSR = 166;
  static const int ARM_INS_SMMUL = 167;
  static const int ARM_INS_SMMULR = 168;
  static const int ARM_INS_SMUAD = 169;
  static const int ARM_INS_SMUADX = 170;
  static const int ARM_INS_SMULBB = 171;
  static const int ARM_INS_SMULBT = 172;
  static const int ARM_INS_SMULL = 173;
  static const int ARM_INS_SMULTB = 174;
  static const int ARM_INS_SMULTT = 175;
  static const int ARM_INS_SMULWB = 176;
  static const int ARM_INS_SMULWT = 177;
  static const int ARM_INS_SMUSD = 178;
  static const int ARM_INS_SMUSDX = 179;
  static const int ARM_INS_SRSDA = 180;
  static const int ARM_INS_SRSDB = 181;
  static const int ARM_INS_SRSIA = 182;
  static const int ARM_INS_SRSIB = 183;
  static const int ARM_INS_SSAT = 184;
  static const int ARM_INS_SSAT16 = 185;
  static const int ARM_INS_SSAX = 186;
  static const int ARM_INS_SSUB16 = 187;
  static const int ARM_INS_SSUB8 = 188;
  static const int ARM_INS_STC2L = 189;
  static const int ARM_INS_STC2 = 190;
  static const int ARM_INS_STCL = 191;
  static const int ARM_INS_STC = 192;
  static const int ARM_INS_STL = 193;
  static const int ARM_INS_STLB = 194;
  static const int ARM_INS_STLEX = 195;
  static const int ARM_INS_STLEXB = 196;
  static const int ARM_INS_STLEXD = 197;
  static const int ARM_INS_STLEXH = 198;
  static const int ARM_INS_STLH = 199;
  static const int ARM_INS_STMDA = 200;
  static const int ARM_INS_STMDB = 201;
  static const int ARM_INS_STM = 202;
  static const int ARM_INS_STMIB = 203;
  static const int ARM_INS_STRBT = 204;
  static const int ARM_INS_STRB = 205;
  static const int ARM_INS_STRD = 206;
  static const int ARM_INS_STREX = 207;
  static const int ARM_INS_STREXB = 208;
  static const int ARM_INS_STREXD = 209;
  static const int ARM_INS_STREXH = 210;
  static const int ARM_INS_STRH = 211;
  static const int ARM_INS_STRHT = 212;
  static const int ARM_INS_STRT = 213;
  static const int ARM_INS_STR = 214;
  static const int ARM_INS_SUB = 215;
  static const int ARM_INS_SVC = 216;
  static const int ARM_INS_SWP = 217;
  static const int ARM_INS_SWPB = 218;
  static const int ARM_INS_SXTAB = 219;
  static const int ARM_INS_SXTAB16 = 220;
  static const int ARM_INS_SXTAH = 221;
  static const int ARM_INS_SXTB = 222;
  static const int ARM_INS_SXTB16 = 223;
  static const int ARM_INS_SXTH = 224;
  static const int ARM_INS_TEQ = 225;
  static const int ARM_INS_TRAP = 226;
  static const int ARM_INS_TST = 227;
  static const int ARM_INS_UADD16 = 228;
  static const int ARM_INS_UADD8 = 229;
  static const int ARM_INS_UASX = 230;
  static const int ARM_INS_UBFX = 231;
  static const int ARM_INS_UDF = 232;
  static const int ARM_INS_UDIV = 233;
  static const int ARM_INS_UHADD16 = 234;
  static const int ARM_INS_UHADD8 = 235;
  static const int ARM_INS_UHASX = 236;
  static const int ARM_INS_UHSAX = 237;
  static const int ARM_INS_UHSUB16 = 238;
  static const int ARM_INS_UHSUB8 = 239;
  static const int ARM_INS_UMAAL = 240;
  static const int ARM_INS_UMLAL = 241;
  static const int ARM_INS_UMULL = 242;
  static const int ARM_INS_UQADD16 = 243;
  static const int ARM_INS_UQADD8 = 244;
  static const int ARM_INS_UQASX = 245;
  static const int ARM_INS_UQSAX = 246;
  static const int ARM_INS_UQSUB16 = 247;
  static const int ARM_INS_UQSUB8 = 248;
  static const int ARM_INS_USAD8 = 249;
  static const int ARM_INS_USADA8 = 250;
  static const int ARM_INS_USAT = 251;
  static const int ARM_INS_USAT16 = 252;
  static const int ARM_INS_USAX = 253;
  static const int ARM_INS_USUB16 = 254;
  static const int ARM_INS_USUB8 = 255;
  static const int ARM_INS_UXTAB = 256;
  static const int ARM_INS_UXTAB16 = 257;
  static const int ARM_INS_UXTAH = 258;
  static const int ARM_INS_UXTB = 259;
  static const int ARM_INS_UXTB16 = 260;
  static const int ARM_INS_UXTH = 261;
  static const int ARM_INS_VABAL = 262;
  static const int ARM_INS_VABA = 263;
  static const int ARM_INS_VABDL = 264;
  static const int ARM_INS_VABD = 265;
  static const int ARM_INS_VABS = 266;
  static const int ARM_INS_VACGE = 267;
  static const int ARM_INS_VACGT = 268;
  static const int ARM_INS_VADD = 269;
  static const int ARM_INS_VADDHN = 270;
  static const int ARM_INS_VADDL = 271;
  static const int ARM_INS_VADDW = 272;
  static const int ARM_INS_VAND = 273;
  static const int ARM_INS_VBIC = 274;
  static const int ARM_INS_VBIF = 275;
  static const int ARM_INS_VBIT = 276;
  static const int ARM_INS_VBSL = 277;
  static const int ARM_INS_VCEQ = 278;
  static const int ARM_INS_VCGE = 279;
  static const int ARM_INS_VCGT = 280;
  static const int ARM_INS_VCLE = 281;
  static const int ARM_INS_VCLS = 282;
  static const int ARM_INS_VCLT = 283;
  static const int ARM_INS_VCLZ = 284;
  static const int ARM_INS_VCMP = 285;
  static const int ARM_INS_VCMPE = 286;
  static const int ARM_INS_VCNT = 287;
  static const int ARM_INS_VCVTA = 288;
  static const int ARM_INS_VCVTB = 289;
  static const int ARM_INS_VCVT = 290;
  static const int ARM_INS_VCVTM = 291;
  static const int ARM_INS_VCVTN = 292;
  static const int ARM_INS_VCVTP = 293;
  static const int ARM_INS_VCVTT = 294;
  static const int ARM_INS_VDIV = 295;
  static const int ARM_INS_VDUP = 296;
  static const int ARM_INS_VEOR = 297;
  static const int ARM_INS_VEXT = 298;
  static const int ARM_INS_VFMA = 299;
  static const int ARM_INS_VFMS = 300;
  static const int ARM_INS_VFNMA = 301;
  static const int ARM_INS_VFNMS = 302;
  static const int ARM_INS_VHADD = 303;
  static const int ARM_INS_VHSUB = 304;
  static const int ARM_INS_VLD1 = 305;
  static const int ARM_INS_VLD2 = 306;
  static const int ARM_INS_VLD3 = 307;
  static const int ARM_INS_VLD4 = 308;
  static const int ARM_INS_VLDMDB = 309;
  static const int ARM_INS_VLDMIA = 310;
  static const int ARM_INS_VLDR = 311;
  static const int ARM_INS_VMAXNM = 312;
  static const int ARM_INS_VMAX = 313;
  static const int ARM_INS_VMINNM = 314;
  static const int ARM_INS_VMIN = 315;
  static const int ARM_INS_VMLA = 316;
  static const int ARM_INS_VMLAL = 317;
  static const int ARM_INS_VMLS = 318;
  static const int ARM_INS_VMLSL = 319;
  static const int ARM_INS_VMOVL = 320;
  static const int ARM_INS_VMOVN = 321;
  static const int ARM_INS_VMSR = 322;
  static const int ARM_INS_VMUL = 323;
  static const int ARM_INS_VMULL = 324;
  static const int ARM_INS_VMVN = 325;
  static const int ARM_INS_VNEG = 326;
  static const int ARM_INS_VNMLA = 327;
  static const int ARM_INS_VNMLS = 328;
  static const int ARM_INS_VNMUL = 329;
  static const int ARM_INS_VORN = 330;
  static const int ARM_INS_VORR = 331;
  static const int ARM_INS_VPADAL = 332;
  static const int ARM_INS_VPADDL = 333;
  static const int ARM_INS_VPADD = 334;
  static const int ARM_INS_VPMAX = 335;
  static const int ARM_INS_VPMIN = 336;
  static const int ARM_INS_VQABS = 337;
  static const int ARM_INS_VQADD = 338;
  static const int ARM_INS_VQDMLAL = 339;
  static const int ARM_INS_VQDMLSL = 340;
  static const int ARM_INS_VQDMULH = 341;
  static const int ARM_INS_VQDMULL = 342;
  static const int ARM_INS_VQMOVUN = 343;
  static const int ARM_INS_VQMOVN = 344;
  static const int ARM_INS_VQNEG = 345;
  static const int ARM_INS_VQRDMULH = 346;
  static const int ARM_INS_VQRSHL = 347;
  static const int ARM_INS_VQRSHRN = 348;
  static const int ARM_INS_VQRSHRUN = 349;
  static const int ARM_INS_VQSHL = 350;
  static const int ARM_INS_VQSHLU = 351;
  static const int ARM_INS_VQSHRN = 352;
  static const int ARM_INS_VQSHRUN = 353;
  static const int ARM_INS_VQSUB = 354;
  static const int ARM_INS_VRADDHN = 355;
  static const int ARM_INS_VRECPE = 356;
  static const int ARM_INS_VRECPS = 357;
  static const int ARM_INS_VREV16 = 358;
  static const int ARM_INS_VREV32 = 359;
  static const int ARM_INS_VREV64 = 360;
  static const int ARM_INS_VRHADD = 361;
  static const int ARM_INS_VRINTA = 362;
  static const int ARM_INS_VRINTM = 363;
  static const int ARM_INS_VRINTN = 364;
  static const int ARM_INS_VRINTP = 365;
  static const int ARM_INS_VRINTR = 366;
  static const int ARM_INS_VRINTX = 367;
  static const int ARM_INS_VRINTZ = 368;
  static const int ARM_INS_VRSHL = 369;
  static const int ARM_INS_VRSHRN = 370;
  static const int ARM_INS_VRSHR = 371;
  static const int ARM_INS_VRSQRTE = 372;
  static const int ARM_INS_VRSQRTS = 373;
  static const int ARM_INS_VRSRA = 374;
  static const int ARM_INS_VRSUBHN = 375;
  static const int ARM_INS_VSELEQ = 376;
  static const int ARM_INS_VSELGE = 377;
  static const int ARM_INS_VSELGT = 378;
  static const int ARM_INS_VSELVS = 379;
  static const int ARM_INS_VSHLL = 380;
  static const int ARM_INS_VSHL = 381;
  static const int ARM_INS_VSHRN = 382;
  static const int ARM_INS_VSHR = 383;
  static const int ARM_INS_VSLI = 384;
  static const int ARM_INS_VSQRT = 385;
  static const int ARM_INS_VSRA = 386;
  static const int ARM_INS_VSRI = 387;
  static const int ARM_INS_VST1 = 388;
  static const int ARM_INS_VST2 = 389;
  static const int ARM_INS_VST3 = 390;
  static const int ARM_INS_VST4 = 391;
  static const int ARM_INS_VSTMDB = 392;
  static const int ARM_INS_VSTMIA = 393;
  static const int ARM_INS_VSTR = 394;
  static const int ARM_INS_VSUB = 395;
  static const int ARM_INS_VSUBHN = 396;
  static const int ARM_INS_VSUBL = 397;
  static const int ARM_INS_VSUBW = 398;
  static const int ARM_INS_VSWP = 399;
  static const int ARM_INS_VTBL = 400;
  static const int ARM_INS_VTBX = 401;
  static const int ARM_INS_VCVTR = 402;
  static const int ARM_INS_VTRN = 403;
  static const int ARM_INS_VTST = 404;
  static const int ARM_INS_VUZP = 405;
  static const int ARM_INS_VZIP = 406;
  static const int ARM_INS_ADDW = 407;
  static const int ARM_INS_ASR = 408;
  static const int ARM_INS_DCPS1 = 409;
  static const int ARM_INS_DCPS2 = 410;
  static const int ARM_INS_DCPS3 = 411;
  static const int ARM_INS_IT = 412;
  static const int ARM_INS_LSL = 413;
  static const int ARM_INS_LSR = 414;
  static const int ARM_INS_ORN = 415;
  static const int ARM_INS_ROR = 416;
  static const int ARM_INS_RRX = 417;
  static const int ARM_INS_SUBW = 418;
  static const int ARM_INS_TBB = 419;
  static const int ARM_INS_TBH = 420;
  static const int ARM_INS_CBNZ = 421;
  static const int ARM_INS_CBZ = 422;
  static const int ARM_INS_POP = 423;
  static const int ARM_INS_PUSH = 424;
  static const int ARM_INS_NOP = 425;
  static const int ARM_INS_YIELD = 426;
  static const int ARM_INS_WFE = 427;
  static const int ARM_INS_WFI = 428;
  static const int ARM_INS_SEV = 429;
  static const int ARM_INS_SEVL = 430;
  static const int ARM_INS_VPUSH = 431;
  static const int ARM_INS_VPOP = 432;
  static const int ARM_INS_ENDING = 433;
}

/// Group of ARM instructions
abstract class arm_insn_group {
  /// < = CS_GRP_INVALID
  static const int ARM_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int ARM_GRP_JUMP = 1;

  /// < = CS_GRP_CALL
  static const int ARM_GRP_CALL = 2;

  /// < = CS_GRP_INT
  static const int ARM_GRP_INT = 4;

  /// < = CS_GRP_PRIVILEGE
  static const int ARM_GRP_PRIVILEGE = 6;

  /// < = CS_GRP_BRANCH_RELATIVE
  static const int ARM_GRP_BRANCH_RELATIVE = 7;
  static const int ARM_GRP_CRYPTO = 128;
  static const int ARM_GRP_DATABARRIER = 129;
  static const int ARM_GRP_DIVIDE = 130;
  static const int ARM_GRP_FPARMV8 = 131;
  static const int ARM_GRP_MULTPRO = 132;
  static const int ARM_GRP_NEON = 133;
  static const int ARM_GRP_T2EXTRACTPACK = 134;
  static const int ARM_GRP_THUMB2DSP = 135;
  static const int ARM_GRP_TRUSTZONE = 136;
  static const int ARM_GRP_V4T = 137;
  static const int ARM_GRP_V5T = 138;
  static const int ARM_GRP_V5TE = 139;
  static const int ARM_GRP_V6 = 140;
  static const int ARM_GRP_V6T2 = 141;
  static const int ARM_GRP_V7 = 142;
  static const int ARM_GRP_V8 = 143;
  static const int ARM_GRP_VFP2 = 144;
  static const int ARM_GRP_VFP3 = 145;
  static const int ARM_GRP_VFP4 = 146;
  static const int ARM_GRP_ARM = 147;
  static const int ARM_GRP_MCLASS = 148;
  static const int ARM_GRP_NOTMCLASS = 149;
  static const int ARM_GRP_THUMB = 150;
  static const int ARM_GRP_THUMB1ONLY = 151;
  static const int ARM_GRP_THUMB2 = 152;
  static const int ARM_GRP_PREV8 = 153;
  static const int ARM_GRP_FPVMLX = 154;
  static const int ARM_GRP_MULOPS = 155;
  static const int ARM_GRP_CRC = 156;
  static const int ARM_GRP_DPVFP = 157;
  static const int ARM_GRP_V6M = 158;
  static const int ARM_GRP_VIRTUALIZATION = 159;
  static const int ARM_GRP_ENDING = 160;
}

/// ARM64 shift type
abstract class arm64_shifter {
  static const int ARM64_SFT_INVALID = 0;
  static const int ARM64_SFT_LSL = 1;
  static const int ARM64_SFT_MSL = 2;
  static const int ARM64_SFT_LSR = 3;
  static const int ARM64_SFT_ASR = 4;
  static const int ARM64_SFT_ROR = 5;
}

/// ARM64 extender type
abstract class arm64_extender {
  static const int ARM64_EXT_INVALID = 0;
  static const int ARM64_EXT_UXTB = 1;
  static const int ARM64_EXT_UXTH = 2;
  static const int ARM64_EXT_UXTW = 3;
  static const int ARM64_EXT_UXTX = 4;
  static const int ARM64_EXT_SXTB = 5;
  static const int ARM64_EXT_SXTH = 6;
  static const int ARM64_EXT_SXTW = 7;
  static const int ARM64_EXT_SXTX = 8;
}

/// ARM64 condition code
abstract class arm64_cc {
  static const int ARM64_CC_INVALID = 0;

  /// < Equal
  static const int ARM64_CC_EQ = 1;

  /// < Not equal:                 Not equal, or unordered
  static const int ARM64_CC_NE = 2;

  /// < Unsigned higher or same:   >, ==, or unordered
  static const int ARM64_CC_HS = 3;

  /// < Unsigned lower or same:    Less than
  static const int ARM64_CC_LO = 4;

  /// < Minus, negative:           Less than
  static const int ARM64_CC_MI = 5;

  /// < Plus, positive or zero:    >, ==, or unordered
  static const int ARM64_CC_PL = 6;

  /// < Overflow:                  Unordered
  static const int ARM64_CC_VS = 7;

  /// < No overflow:               Ordered
  static const int ARM64_CC_VC = 8;

  /// < Unsigned higher:           Greater than, or unordered
  static const int ARM64_CC_HI = 9;

  /// < Unsigned lower or same:    Less than or equal
  static const int ARM64_CC_LS = 10;

  /// < Greater than or equal:     Greater than or equal
  static const int ARM64_CC_GE = 11;

  /// < Less than:                 Less than, or unordered
  static const int ARM64_CC_LT = 12;

  /// < Signed greater than:       Greater than
  static const int ARM64_CC_GT = 13;

  /// < Signed less than or equal: <, ==, or unordered
  static const int ARM64_CC_LE = 14;

  /// < Always (unconditional):    Always (unconditional)
  static const int ARM64_CC_AL = 15;

  /// < Always (unconditional):   Always (unconditional)
  static const int ARM64_CC_NV = 16;
}

/// System registers
abstract class arm64_sysreg {
  static const int ARM64_SYSREG_INVALID = 0;
  static const int ARM64_SYSREG_MDCCSR_EL0 = 38920;
  static const int ARM64_SYSREG_DBGDTRRX_EL0 = 38952;
  static const int ARM64_SYSREG_MDRAR_EL1 = 32896;
  static const int ARM64_SYSREG_OSLSR_EL1 = 32908;
  static const int ARM64_SYSREG_DBGAUTHSTATUS_EL1 = 33782;
  static const int ARM64_SYSREG_PMCEID0_EL0 = 56550;
  static const int ARM64_SYSREG_PMCEID1_EL0 = 56551;
  static const int ARM64_SYSREG_MIDR_EL1 = 49152;
  static const int ARM64_SYSREG_CCSIDR_EL1 = 51200;
  static const int ARM64_SYSREG_CLIDR_EL1 = 51201;
  static const int ARM64_SYSREG_CTR_EL0 = 55297;
  static const int ARM64_SYSREG_MPIDR_EL1 = 49157;
  static const int ARM64_SYSREG_REVIDR_EL1 = 49158;
  static const int ARM64_SYSREG_AIDR_EL1 = 51207;
  static const int ARM64_SYSREG_DCZID_EL0 = 55303;
  static const int ARM64_SYSREG_ID_PFR0_EL1 = 49160;
  static const int ARM64_SYSREG_ID_PFR1_EL1 = 49161;
  static const int ARM64_SYSREG_ID_DFR0_EL1 = 49162;
  static const int ARM64_SYSREG_ID_AFR0_EL1 = 49163;
  static const int ARM64_SYSREG_ID_MMFR0_EL1 = 49164;
  static const int ARM64_SYSREG_ID_MMFR1_EL1 = 49165;
  static const int ARM64_SYSREG_ID_MMFR2_EL1 = 49166;
  static const int ARM64_SYSREG_ID_MMFR3_EL1 = 49167;
  static const int ARM64_SYSREG_ID_ISAR0_EL1 = 49168;
  static const int ARM64_SYSREG_ID_ISAR1_EL1 = 49169;
  static const int ARM64_SYSREG_ID_ISAR2_EL1 = 49170;
  static const int ARM64_SYSREG_ID_ISAR3_EL1 = 49171;
  static const int ARM64_SYSREG_ID_ISAR4_EL1 = 49172;
  static const int ARM64_SYSREG_ID_ISAR5_EL1 = 49173;
  static const int ARM64_SYSREG_ID_A64PFR0_EL1 = 49184;
  static const int ARM64_SYSREG_ID_A64PFR1_EL1 = 49185;
  static const int ARM64_SYSREG_ID_A64DFR0_EL1 = 49192;
  static const int ARM64_SYSREG_ID_A64DFR1_EL1 = 49193;
  static const int ARM64_SYSREG_ID_A64AFR0_EL1 = 49196;
  static const int ARM64_SYSREG_ID_A64AFR1_EL1 = 49197;
  static const int ARM64_SYSREG_ID_A64ISAR0_EL1 = 49200;
  static const int ARM64_SYSREG_ID_A64ISAR1_EL1 = 49201;
  static const int ARM64_SYSREG_ID_A64MMFR0_EL1 = 49208;
  static const int ARM64_SYSREG_ID_A64MMFR1_EL1 = 49209;
  static const int ARM64_SYSREG_MVFR0_EL1 = 49176;
  static const int ARM64_SYSREG_MVFR1_EL1 = 49177;
  static const int ARM64_SYSREG_MVFR2_EL1 = 49178;
  static const int ARM64_SYSREG_RVBAR_EL1 = 50689;
  static const int ARM64_SYSREG_RVBAR_EL2 = 58881;
  static const int ARM64_SYSREG_RVBAR_EL3 = 62977;
  static const int ARM64_SYSREG_ISR_EL1 = 50696;
  static const int ARM64_SYSREG_CNTPCT_EL0 = 57089;
  static const int ARM64_SYSREG_CNTVCT_EL0 = 57090;
  static const int ARM64_SYSREG_TRCSTATR = 34840;
  static const int ARM64_SYSREG_TRCIDR8 = 34822;
  static const int ARM64_SYSREG_TRCIDR9 = 34830;
  static const int ARM64_SYSREG_TRCIDR10 = 34838;
  static const int ARM64_SYSREG_TRCIDR11 = 34846;
  static const int ARM64_SYSREG_TRCIDR12 = 34854;
  static const int ARM64_SYSREG_TRCIDR13 = 34862;
  static const int ARM64_SYSREG_TRCIDR0 = 34887;
  static const int ARM64_SYSREG_TRCIDR1 = 34895;
  static const int ARM64_SYSREG_TRCIDR2 = 34903;
  static const int ARM64_SYSREG_TRCIDR3 = 34911;
  static const int ARM64_SYSREG_TRCIDR4 = 34919;
  static const int ARM64_SYSREG_TRCIDR5 = 34927;
  static const int ARM64_SYSREG_TRCIDR6 = 34935;
  static const int ARM64_SYSREG_TRCIDR7 = 34943;
  static const int ARM64_SYSREG_TRCOSLSR = 34956;
  static const int ARM64_SYSREG_TRCPDSR = 34988;
  static const int ARM64_SYSREG_TRCDEVAFF0 = 35798;
  static const int ARM64_SYSREG_TRCDEVAFF1 = 35806;
  static const int ARM64_SYSREG_TRCLSR = 35822;
  static const int ARM64_SYSREG_TRCAUTHSTATUS = 35830;
  static const int ARM64_SYSREG_TRCDEVARCH = 35838;
  static const int ARM64_SYSREG_TRCDEVID = 35735;
  static const int ARM64_SYSREG_TRCDEVTYPE = 35743;
  static const int ARM64_SYSREG_TRCPIDR4 = 35751;
  static const int ARM64_SYSREG_TRCPIDR5 = 35759;
  static const int ARM64_SYSREG_TRCPIDR6 = 35767;
  static const int ARM64_SYSREG_TRCPIDR7 = 35775;
  static const int ARM64_SYSREG_TRCPIDR0 = 35783;
  static const int ARM64_SYSREG_TRCPIDR1 = 35791;
  static const int ARM64_SYSREG_TRCPIDR2 = 35799;
  static const int ARM64_SYSREG_TRCPIDR3 = 35807;
  static const int ARM64_SYSREG_TRCCIDR0 = 35815;
  static const int ARM64_SYSREG_TRCCIDR1 = 35823;
  static const int ARM64_SYSREG_TRCCIDR2 = 35831;
  static const int ARM64_SYSREG_TRCCIDR3 = 35839;
  static const int ARM64_SYSREG_ICC_IAR1_EL1 = 50784;
  static const int ARM64_SYSREG_ICC_IAR0_EL1 = 50752;
  static const int ARM64_SYSREG_ICC_HPPIR1_EL1 = 50786;
  static const int ARM64_SYSREG_ICC_HPPIR0_EL1 = 50754;
  static const int ARM64_SYSREG_ICC_RPR_EL1 = 50779;
  static const int ARM64_SYSREG_ICH_VTR_EL2 = 58969;
  static const int ARM64_SYSREG_ICH_EISR_EL2 = 58971;
  static const int ARM64_SYSREG_ICH_ELSR_EL2 = 58973;
}

abstract class arm64_msr_reg {
  static const int ARM64_SYSREG_DBGDTRTX_EL0 = 38952;
  static const int ARM64_SYSREG_OSLAR_EL1 = 32900;
  static const int ARM64_SYSREG_PMSWINC_EL0 = 56548;
  static const int ARM64_SYSREG_TRCOSLAR = 34948;
  static const int ARM64_SYSREG_TRCLAR = 35814;
  static const int ARM64_SYSREG_ICC_EOIR1_EL1 = 50785;
  static const int ARM64_SYSREG_ICC_EOIR0_EL1 = 50753;
  static const int ARM64_SYSREG_ICC_DIR_EL1 = 50777;
  static const int ARM64_SYSREG_ICC_SGI1R_EL1 = 50781;
  static const int ARM64_SYSREG_ICC_ASGI1R_EL1 = 50782;
  static const int ARM64_SYSREG_ICC_SGI0R_EL1 = 50783;
}

/// System PState Field (MSR instruction)
abstract class arm64_pstate {
  static const int ARM64_PSTATE_INVALID = 0;
  static const int ARM64_PSTATE_SPSEL = 5;
  static const int ARM64_PSTATE_DAIFSET = 30;
  static const int ARM64_PSTATE_DAIFCLR = 31;
}

/// Vector arrangement specifier (for FloatingPoint/Advanced SIMD insn)
abstract class arm64_vas {
  static const int ARM64_VAS_INVALID = 0;
  static const int ARM64_VAS_8B = 1;
  static const int ARM64_VAS_16B = 2;
  static const int ARM64_VAS_4H = 3;
  static const int ARM64_VAS_8H = 4;
  static const int ARM64_VAS_2S = 5;
  static const int ARM64_VAS_4S = 6;
  static const int ARM64_VAS_1D = 7;
  static const int ARM64_VAS_2D = 8;
  static const int ARM64_VAS_1Q = 9;
}

/// Vector element size specifier
abstract class arm64_vess {
  static const int ARM64_VESS_INVALID = 0;
  static const int ARM64_VESS_B = 1;
  static const int ARM64_VESS_H = 2;
  static const int ARM64_VESS_S = 3;
  static const int ARM64_VESS_D = 4;
}

/// Memory barrier operands
abstract class arm64_barrier_op {
  static const int ARM64_BARRIER_INVALID = 0;
  static const int ARM64_BARRIER_OSHLD = 1;
  static const int ARM64_BARRIER_OSHST = 2;
  static const int ARM64_BARRIER_OSH = 3;
  static const int ARM64_BARRIER_NSHLD = 5;
  static const int ARM64_BARRIER_NSHST = 6;
  static const int ARM64_BARRIER_NSH = 7;
  static const int ARM64_BARRIER_ISHLD = 9;
  static const int ARM64_BARRIER_ISHST = 10;
  static const int ARM64_BARRIER_ISH = 11;
  static const int ARM64_BARRIER_LD = 13;
  static const int ARM64_BARRIER_ST = 14;
  static const int ARM64_BARRIER_SY = 15;
}

/// Operand type for instruction's operands
abstract class arm64_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int ARM64_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int ARM64_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int ARM64_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int ARM64_OP_MEM = 3;

  /// < = CS_OP_FP (Floating-Point operand).
  static const int ARM64_OP_FP = 4;

  /// < C-Immediate
  static const int ARM64_OP_CIMM = 64;

  /// < MRS register operand.
  static const int ARM64_OP_REG_MRS = 65;

  /// < MSR register operand.
  static const int ARM64_OP_REG_MSR = 66;

  /// < PState operand.
  static const int ARM64_OP_PSTATE = 67;

  /// < SYS operand for IC/DC/AT/TLBI instructions.
  static const int ARM64_OP_SYS = 68;

  /// < Prefetch operand (PRFM).
  static const int ARM64_OP_PREFETCH = 69;

  /// < Memory barrier operand (ISB/DMB/DSB instructions).
  static const int ARM64_OP_BARRIER = 70;
}

/// TLBI operations
abstract class arm64_tlbi_op {
  static const int ARM64_TLBI_INVALID = 0;
  static const int ARM64_TLBI_VMALLE1IS = 1;
  static const int ARM64_TLBI_VAE1IS = 2;
  static const int ARM64_TLBI_ASIDE1IS = 3;
  static const int ARM64_TLBI_VAAE1IS = 4;
  static const int ARM64_TLBI_VALE1IS = 5;
  static const int ARM64_TLBI_VAALE1IS = 6;
  static const int ARM64_TLBI_ALLE2IS = 7;
  static const int ARM64_TLBI_VAE2IS = 8;
  static const int ARM64_TLBI_ALLE1IS = 9;
  static const int ARM64_TLBI_VALE2IS = 10;
  static const int ARM64_TLBI_VMALLS12E1IS = 11;
  static const int ARM64_TLBI_ALLE3IS = 12;
  static const int ARM64_TLBI_VAE3IS = 13;
  static const int ARM64_TLBI_VALE3IS = 14;
  static const int ARM64_TLBI_IPAS2E1IS = 15;
  static const int ARM64_TLBI_IPAS2LE1IS = 16;
  static const int ARM64_TLBI_IPAS2E1 = 17;
  static const int ARM64_TLBI_IPAS2LE1 = 18;
  static const int ARM64_TLBI_VMALLE1 = 19;
  static const int ARM64_TLBI_VAE1 = 20;
  static const int ARM64_TLBI_ASIDE1 = 21;
  static const int ARM64_TLBI_VAAE1 = 22;
  static const int ARM64_TLBI_VALE1 = 23;
  static const int ARM64_TLBI_VAALE1 = 24;
  static const int ARM64_TLBI_ALLE2 = 25;
  static const int ARM64_TLBI_VAE2 = 26;
  static const int ARM64_TLBI_ALLE1 = 27;
  static const int ARM64_TLBI_VALE2 = 28;
  static const int ARM64_TLBI_VMALLS12E1 = 29;
  static const int ARM64_TLBI_ALLE3 = 30;
  static const int ARM64_TLBI_VAE3 = 31;
  static const int ARM64_TLBI_VALE3 = 32;
}

/// AT operations
abstract class arm64_at_op {
  static const int ARM64_AT_S1E1R = 0;
  static const int ARM64_AT_S1E1W = 1;
  static const int ARM64_AT_S1E0R = 2;
  static const int ARM64_AT_S1E0W = 3;
  static const int ARM64_AT_S1E2R = 4;
  static const int ARM64_AT_S1E2W = 5;
  static const int ARM64_AT_S12E1R = 6;
  static const int ARM64_AT_S12E1W = 7;
  static const int ARM64_AT_S12E0R = 8;
  static const int ARM64_AT_S12E0W = 9;
  static const int ARM64_AT_S1E3R = 10;
  static const int ARM64_AT_S1E3W = 11;
}

/// DC operations
abstract class arm64_dc_op {
  static const int ARM64_DC_INVALID = 0;
  static const int ARM64_DC_ZVA = 1;
  static const int ARM64_DC_IVAC = 2;
  static const int ARM64_DC_ISW = 3;
  static const int ARM64_DC_CVAC = 4;
  static const int ARM64_DC_CSW = 5;
  static const int ARM64_DC_CVAU = 6;
  static const int ARM64_DC_CIVAC = 7;
  static const int ARM64_DC_CISW = 8;
}

/// IC operations
abstract class arm64_ic_op {
  static const int ARM64_IC_INVALID = 0;
  static const int ARM64_IC_IALLUIS = 1;
  static const int ARM64_IC_IALLU = 2;
  static const int ARM64_IC_IVAU = 3;
}

/// Prefetch operations (PRFM)
abstract class arm64_prefetch_op {
  static const int ARM64_PRFM_INVALID = 0;
  static const int ARM64_PRFM_PLDL1KEEP = 1;
  static const int ARM64_PRFM_PLDL1STRM = 2;
  static const int ARM64_PRFM_PLDL2KEEP = 3;
  static const int ARM64_PRFM_PLDL2STRM = 4;
  static const int ARM64_PRFM_PLDL3KEEP = 5;
  static const int ARM64_PRFM_PLDL3STRM = 6;
  static const int ARM64_PRFM_PLIL1KEEP = 9;
  static const int ARM64_PRFM_PLIL1STRM = 10;
  static const int ARM64_PRFM_PLIL2KEEP = 11;
  static const int ARM64_PRFM_PLIL2STRM = 12;
  static const int ARM64_PRFM_PLIL3KEEP = 13;
  static const int ARM64_PRFM_PLIL3STRM = 14;
  static const int ARM64_PRFM_PSTL1KEEP = 17;
  static const int ARM64_PRFM_PSTL1STRM = 18;
  static const int ARM64_PRFM_PSTL2KEEP = 19;
  static const int ARM64_PRFM_PSTL2STRM = 20;
  static const int ARM64_PRFM_PSTL3KEEP = 21;
  static const int ARM64_PRFM_PSTL3STRM = 22;
}

/// ARM64 registers
abstract class arm64_reg {
  static const int ARM64_REG_INVALID = 0;
  static const int ARM64_REG_X29 = 1;
  static const int ARM64_REG_X30 = 2;
  static const int ARM64_REG_NZCV = 3;
  static const int ARM64_REG_SP = 4;
  static const int ARM64_REG_WSP = 5;
  static const int ARM64_REG_WZR = 6;
  static const int ARM64_REG_XZR = 7;
  static const int ARM64_REG_B0 = 8;
  static const int ARM64_REG_B1 = 9;
  static const int ARM64_REG_B2 = 10;
  static const int ARM64_REG_B3 = 11;
  static const int ARM64_REG_B4 = 12;
  static const int ARM64_REG_B5 = 13;
  static const int ARM64_REG_B6 = 14;
  static const int ARM64_REG_B7 = 15;
  static const int ARM64_REG_B8 = 16;
  static const int ARM64_REG_B9 = 17;
  static const int ARM64_REG_B10 = 18;
  static const int ARM64_REG_B11 = 19;
  static const int ARM64_REG_B12 = 20;
  static const int ARM64_REG_B13 = 21;
  static const int ARM64_REG_B14 = 22;
  static const int ARM64_REG_B15 = 23;
  static const int ARM64_REG_B16 = 24;
  static const int ARM64_REG_B17 = 25;
  static const int ARM64_REG_B18 = 26;
  static const int ARM64_REG_B19 = 27;
  static const int ARM64_REG_B20 = 28;
  static const int ARM64_REG_B21 = 29;
  static const int ARM64_REG_B22 = 30;
  static const int ARM64_REG_B23 = 31;
  static const int ARM64_REG_B24 = 32;
  static const int ARM64_REG_B25 = 33;
  static const int ARM64_REG_B26 = 34;
  static const int ARM64_REG_B27 = 35;
  static const int ARM64_REG_B28 = 36;
  static const int ARM64_REG_B29 = 37;
  static const int ARM64_REG_B30 = 38;
  static const int ARM64_REG_B31 = 39;
  static const int ARM64_REG_D0 = 40;
  static const int ARM64_REG_D1 = 41;
  static const int ARM64_REG_D2 = 42;
  static const int ARM64_REG_D3 = 43;
  static const int ARM64_REG_D4 = 44;
  static const int ARM64_REG_D5 = 45;
  static const int ARM64_REG_D6 = 46;
  static const int ARM64_REG_D7 = 47;
  static const int ARM64_REG_D8 = 48;
  static const int ARM64_REG_D9 = 49;
  static const int ARM64_REG_D10 = 50;
  static const int ARM64_REG_D11 = 51;
  static const int ARM64_REG_D12 = 52;
  static const int ARM64_REG_D13 = 53;
  static const int ARM64_REG_D14 = 54;
  static const int ARM64_REG_D15 = 55;
  static const int ARM64_REG_D16 = 56;
  static const int ARM64_REG_D17 = 57;
  static const int ARM64_REG_D18 = 58;
  static const int ARM64_REG_D19 = 59;
  static const int ARM64_REG_D20 = 60;
  static const int ARM64_REG_D21 = 61;
  static const int ARM64_REG_D22 = 62;
  static const int ARM64_REG_D23 = 63;
  static const int ARM64_REG_D24 = 64;
  static const int ARM64_REG_D25 = 65;
  static const int ARM64_REG_D26 = 66;
  static const int ARM64_REG_D27 = 67;
  static const int ARM64_REG_D28 = 68;
  static const int ARM64_REG_D29 = 69;
  static const int ARM64_REG_D30 = 70;
  static const int ARM64_REG_D31 = 71;
  static const int ARM64_REG_H0 = 72;
  static const int ARM64_REG_H1 = 73;
  static const int ARM64_REG_H2 = 74;
  static const int ARM64_REG_H3 = 75;
  static const int ARM64_REG_H4 = 76;
  static const int ARM64_REG_H5 = 77;
  static const int ARM64_REG_H6 = 78;
  static const int ARM64_REG_H7 = 79;
  static const int ARM64_REG_H8 = 80;
  static const int ARM64_REG_H9 = 81;
  static const int ARM64_REG_H10 = 82;
  static const int ARM64_REG_H11 = 83;
  static const int ARM64_REG_H12 = 84;
  static const int ARM64_REG_H13 = 85;
  static const int ARM64_REG_H14 = 86;
  static const int ARM64_REG_H15 = 87;
  static const int ARM64_REG_H16 = 88;
  static const int ARM64_REG_H17 = 89;
  static const int ARM64_REG_H18 = 90;
  static const int ARM64_REG_H19 = 91;
  static const int ARM64_REG_H20 = 92;
  static const int ARM64_REG_H21 = 93;
  static const int ARM64_REG_H22 = 94;
  static const int ARM64_REG_H23 = 95;
  static const int ARM64_REG_H24 = 96;
  static const int ARM64_REG_H25 = 97;
  static const int ARM64_REG_H26 = 98;
  static const int ARM64_REG_H27 = 99;
  static const int ARM64_REG_H28 = 100;
  static const int ARM64_REG_H29 = 101;
  static const int ARM64_REG_H30 = 102;
  static const int ARM64_REG_H31 = 103;
  static const int ARM64_REG_Q0 = 104;
  static const int ARM64_REG_Q1 = 105;
  static const int ARM64_REG_Q2 = 106;
  static const int ARM64_REG_Q3 = 107;
  static const int ARM64_REG_Q4 = 108;
  static const int ARM64_REG_Q5 = 109;
  static const int ARM64_REG_Q6 = 110;
  static const int ARM64_REG_Q7 = 111;
  static const int ARM64_REG_Q8 = 112;
  static const int ARM64_REG_Q9 = 113;
  static const int ARM64_REG_Q10 = 114;
  static const int ARM64_REG_Q11 = 115;
  static const int ARM64_REG_Q12 = 116;
  static const int ARM64_REG_Q13 = 117;
  static const int ARM64_REG_Q14 = 118;
  static const int ARM64_REG_Q15 = 119;
  static const int ARM64_REG_Q16 = 120;
  static const int ARM64_REG_Q17 = 121;
  static const int ARM64_REG_Q18 = 122;
  static const int ARM64_REG_Q19 = 123;
  static const int ARM64_REG_Q20 = 124;
  static const int ARM64_REG_Q21 = 125;
  static const int ARM64_REG_Q22 = 126;
  static const int ARM64_REG_Q23 = 127;
  static const int ARM64_REG_Q24 = 128;
  static const int ARM64_REG_Q25 = 129;
  static const int ARM64_REG_Q26 = 130;
  static const int ARM64_REG_Q27 = 131;
  static const int ARM64_REG_Q28 = 132;
  static const int ARM64_REG_Q29 = 133;
  static const int ARM64_REG_Q30 = 134;
  static const int ARM64_REG_Q31 = 135;
  static const int ARM64_REG_S0 = 136;
  static const int ARM64_REG_S1 = 137;
  static const int ARM64_REG_S2 = 138;
  static const int ARM64_REG_S3 = 139;
  static const int ARM64_REG_S4 = 140;
  static const int ARM64_REG_S5 = 141;
  static const int ARM64_REG_S6 = 142;
  static const int ARM64_REG_S7 = 143;
  static const int ARM64_REG_S8 = 144;
  static const int ARM64_REG_S9 = 145;
  static const int ARM64_REG_S10 = 146;
  static const int ARM64_REG_S11 = 147;
  static const int ARM64_REG_S12 = 148;
  static const int ARM64_REG_S13 = 149;
  static const int ARM64_REG_S14 = 150;
  static const int ARM64_REG_S15 = 151;
  static const int ARM64_REG_S16 = 152;
  static const int ARM64_REG_S17 = 153;
  static const int ARM64_REG_S18 = 154;
  static const int ARM64_REG_S19 = 155;
  static const int ARM64_REG_S20 = 156;
  static const int ARM64_REG_S21 = 157;
  static const int ARM64_REG_S22 = 158;
  static const int ARM64_REG_S23 = 159;
  static const int ARM64_REG_S24 = 160;
  static const int ARM64_REG_S25 = 161;
  static const int ARM64_REG_S26 = 162;
  static const int ARM64_REG_S27 = 163;
  static const int ARM64_REG_S28 = 164;
  static const int ARM64_REG_S29 = 165;
  static const int ARM64_REG_S30 = 166;
  static const int ARM64_REG_S31 = 167;
  static const int ARM64_REG_W0 = 168;
  static const int ARM64_REG_W1 = 169;
  static const int ARM64_REG_W2 = 170;
  static const int ARM64_REG_W3 = 171;
  static const int ARM64_REG_W4 = 172;
  static const int ARM64_REG_W5 = 173;
  static const int ARM64_REG_W6 = 174;
  static const int ARM64_REG_W7 = 175;
  static const int ARM64_REG_W8 = 176;
  static const int ARM64_REG_W9 = 177;
  static const int ARM64_REG_W10 = 178;
  static const int ARM64_REG_W11 = 179;
  static const int ARM64_REG_W12 = 180;
  static const int ARM64_REG_W13 = 181;
  static const int ARM64_REG_W14 = 182;
  static const int ARM64_REG_W15 = 183;
  static const int ARM64_REG_W16 = 184;
  static const int ARM64_REG_W17 = 185;
  static const int ARM64_REG_W18 = 186;
  static const int ARM64_REG_W19 = 187;
  static const int ARM64_REG_W20 = 188;
  static const int ARM64_REG_W21 = 189;
  static const int ARM64_REG_W22 = 190;
  static const int ARM64_REG_W23 = 191;
  static const int ARM64_REG_W24 = 192;
  static const int ARM64_REG_W25 = 193;
  static const int ARM64_REG_W26 = 194;
  static const int ARM64_REG_W27 = 195;
  static const int ARM64_REG_W28 = 196;
  static const int ARM64_REG_W29 = 197;
  static const int ARM64_REG_W30 = 198;
  static const int ARM64_REG_X0 = 199;
  static const int ARM64_REG_X1 = 200;
  static const int ARM64_REG_X2 = 201;
  static const int ARM64_REG_X3 = 202;
  static const int ARM64_REG_X4 = 203;
  static const int ARM64_REG_X5 = 204;
  static const int ARM64_REG_X6 = 205;
  static const int ARM64_REG_X7 = 206;
  static const int ARM64_REG_X8 = 207;
  static const int ARM64_REG_X9 = 208;
  static const int ARM64_REG_X10 = 209;
  static const int ARM64_REG_X11 = 210;
  static const int ARM64_REG_X12 = 211;
  static const int ARM64_REG_X13 = 212;
  static const int ARM64_REG_X14 = 213;
  static const int ARM64_REG_X15 = 214;
  static const int ARM64_REG_X16 = 215;
  static const int ARM64_REG_X17 = 216;
  static const int ARM64_REG_X18 = 217;
  static const int ARM64_REG_X19 = 218;
  static const int ARM64_REG_X20 = 219;
  static const int ARM64_REG_X21 = 220;
  static const int ARM64_REG_X22 = 221;
  static const int ARM64_REG_X23 = 222;
  static const int ARM64_REG_X24 = 223;
  static const int ARM64_REG_X25 = 224;
  static const int ARM64_REG_X26 = 225;
  static const int ARM64_REG_X27 = 226;
  static const int ARM64_REG_X28 = 227;
  static const int ARM64_REG_V0 = 228;
  static const int ARM64_REG_V1 = 229;
  static const int ARM64_REG_V2 = 230;
  static const int ARM64_REG_V3 = 231;
  static const int ARM64_REG_V4 = 232;
  static const int ARM64_REG_V5 = 233;
  static const int ARM64_REG_V6 = 234;
  static const int ARM64_REG_V7 = 235;
  static const int ARM64_REG_V8 = 236;
  static const int ARM64_REG_V9 = 237;
  static const int ARM64_REG_V10 = 238;
  static const int ARM64_REG_V11 = 239;
  static const int ARM64_REG_V12 = 240;
  static const int ARM64_REG_V13 = 241;
  static const int ARM64_REG_V14 = 242;
  static const int ARM64_REG_V15 = 243;
  static const int ARM64_REG_V16 = 244;
  static const int ARM64_REG_V17 = 245;
  static const int ARM64_REG_V18 = 246;
  static const int ARM64_REG_V19 = 247;
  static const int ARM64_REG_V20 = 248;
  static const int ARM64_REG_V21 = 249;
  static const int ARM64_REG_V22 = 250;
  static const int ARM64_REG_V23 = 251;
  static const int ARM64_REG_V24 = 252;
  static const int ARM64_REG_V25 = 253;
  static const int ARM64_REG_V26 = 254;
  static const int ARM64_REG_V27 = 255;
  static const int ARM64_REG_V28 = 256;
  static const int ARM64_REG_V29 = 257;
  static const int ARM64_REG_V30 = 258;
  static const int ARM64_REG_V31 = 259;
  static const int ARM64_REG_ENDING = 260;
  static const int ARM64_REG_IP0 = 215;
  static const int ARM64_REG_IP1 = 216;
  static const int ARM64_REG_FP = 1;
  static const int ARM64_REG_LR = 2;
}

/// Instruction's operand referring to memory
/// This is associated with ARM64_OP_MEM operand type above
class arm64_op_mem extends ffi.Struct {
  /// < base register
  @ffi.Int32()
  external int base;

  /// < index register
  @ffi.Int32()
  external int index;

  /// < displacement/offset value
  @ffi.Int32()
  external int disp;
}

/// Instruction operand
class cs_arm64_op extends ffi.Struct {
  /// < Vector Index for some vector operands (or -1 if irrelevant)
  @ffi.Int()
  external int vector_index;

  /// < Vector Arrangement Specifier
  @ffi.Int32()
  external int vas;

  /// < Vector Element Size Specifier
  @ffi.Int32()
  external int vess;

  external UnnamedStruct2 shift;

  /// < extender type of this operand
  @ffi.Int32()
  external int ext;

  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion2 unnamed;

  /// How is this operand accessed? (READ, WRITE or READ|WRITE)
  /// This field is combined of cs_ac_type.
  /// NOTE: this field is irrelevant if engine is compiled in DIET mode.
  @ffi.Uint8()
  external int access;
}

class UnnamedStruct2 extends ffi.Struct {
  /// < shifter type of this operand
  @ffi.Int32()
  external int type;

  /// < shifter value of this operand
  @ffi.UnsignedInt()
  external int value;
}

class UnnamedUnion2 extends ffi.Union {
  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < immediate value, or index for C-IMM or IMM operand
  @ffi.Int64()
  external int imm;

  /// < floating point value for FP operand
  @ffi.Double()
  external double fp;

  /// < base/index/scale/disp value for MEM operand
  external arm64_op_mem mem;

  /// < PState field of MSR instruction.
  @ffi.Int32()
  external int pstate;

  /// < IC/DC/AT/TLBI operation (see arm64_ic_op, arm64_dc_op, arm64_at_op, arm64_tlbi_op)
  @ffi.UnsignedInt()
  external int sys;

  /// < PRFM operation.
  @ffi.Int32()
  external int prefetch;

  /// < Memory barrier operation (ISB/DMB/DSB instructions).
  @ffi.Int32()
  external int barrier;
}

/// Instruction structure
class cs_arm64 extends ffi.Struct {
  /// < conditional code for this insn
  @ffi.Int32()
  external int cc;

  /// < does this insn update flags?
  @ffi.Bool()
  external bool update_flags;

  /// < does this insn request writeback? 'True' means 'yes'
  @ffi.Bool()
  external bool writeback;

  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([8])
  external ffi.Array<cs_arm64_op> operands;
}

/// ARM64 instruction
abstract class arm64_insn {
  static const int ARM64_INS_INVALID = 0;
  static const int ARM64_INS_ABS = 1;
  static const int ARM64_INS_ADC = 2;
  static const int ARM64_INS_ADDHN = 3;
  static const int ARM64_INS_ADDHN2 = 4;
  static const int ARM64_INS_ADDP = 5;
  static const int ARM64_INS_ADD = 6;
  static const int ARM64_INS_ADDV = 7;
  static const int ARM64_INS_ADR = 8;
  static const int ARM64_INS_ADRP = 9;
  static const int ARM64_INS_AESD = 10;
  static const int ARM64_INS_AESE = 11;
  static const int ARM64_INS_AESIMC = 12;
  static const int ARM64_INS_AESMC = 13;
  static const int ARM64_INS_AND = 14;
  static const int ARM64_INS_ASR = 15;
  static const int ARM64_INS_B = 16;
  static const int ARM64_INS_BFM = 17;
  static const int ARM64_INS_BIC = 18;
  static const int ARM64_INS_BIF = 19;
  static const int ARM64_INS_BIT = 20;
  static const int ARM64_INS_BL = 21;
  static const int ARM64_INS_BLR = 22;
  static const int ARM64_INS_BR = 23;
  static const int ARM64_INS_BRK = 24;
  static const int ARM64_INS_BSL = 25;
  static const int ARM64_INS_CBNZ = 26;
  static const int ARM64_INS_CBZ = 27;
  static const int ARM64_INS_CCMN = 28;
  static const int ARM64_INS_CCMP = 29;
  static const int ARM64_INS_CLREX = 30;
  static const int ARM64_INS_CLS = 31;
  static const int ARM64_INS_CLZ = 32;
  static const int ARM64_INS_CMEQ = 33;
  static const int ARM64_INS_CMGE = 34;
  static const int ARM64_INS_CMGT = 35;
  static const int ARM64_INS_CMHI = 36;
  static const int ARM64_INS_CMHS = 37;
  static const int ARM64_INS_CMLE = 38;
  static const int ARM64_INS_CMLT = 39;
  static const int ARM64_INS_CMTST = 40;
  static const int ARM64_INS_CNT = 41;
  static const int ARM64_INS_MOV = 42;
  static const int ARM64_INS_CRC32B = 43;
  static const int ARM64_INS_CRC32CB = 44;
  static const int ARM64_INS_CRC32CH = 45;
  static const int ARM64_INS_CRC32CW = 46;
  static const int ARM64_INS_CRC32CX = 47;
  static const int ARM64_INS_CRC32H = 48;
  static const int ARM64_INS_CRC32W = 49;
  static const int ARM64_INS_CRC32X = 50;
  static const int ARM64_INS_CSEL = 51;
  static const int ARM64_INS_CSINC = 52;
  static const int ARM64_INS_CSINV = 53;
  static const int ARM64_INS_CSNEG = 54;
  static const int ARM64_INS_DCPS1 = 55;
  static const int ARM64_INS_DCPS2 = 56;
  static const int ARM64_INS_DCPS3 = 57;
  static const int ARM64_INS_DMB = 58;
  static const int ARM64_INS_DRPS = 59;
  static const int ARM64_INS_DSB = 60;
  static const int ARM64_INS_DUP = 61;
  static const int ARM64_INS_EON = 62;
  static const int ARM64_INS_EOR = 63;
  static const int ARM64_INS_ERET = 64;
  static const int ARM64_INS_EXTR = 65;
  static const int ARM64_INS_EXT = 66;
  static const int ARM64_INS_FABD = 67;
  static const int ARM64_INS_FABS = 68;
  static const int ARM64_INS_FACGE = 69;
  static const int ARM64_INS_FACGT = 70;
  static const int ARM64_INS_FADD = 71;
  static const int ARM64_INS_FADDP = 72;
  static const int ARM64_INS_FCCMP = 73;
  static const int ARM64_INS_FCCMPE = 74;
  static const int ARM64_INS_FCMEQ = 75;
  static const int ARM64_INS_FCMGE = 76;
  static const int ARM64_INS_FCMGT = 77;
  static const int ARM64_INS_FCMLE = 78;
  static const int ARM64_INS_FCMLT = 79;
  static const int ARM64_INS_FCMP = 80;
  static const int ARM64_INS_FCMPE = 81;
  static const int ARM64_INS_FCSEL = 82;
  static const int ARM64_INS_FCVTAS = 83;
  static const int ARM64_INS_FCVTAU = 84;
  static const int ARM64_INS_FCVT = 85;
  static const int ARM64_INS_FCVTL = 86;
  static const int ARM64_INS_FCVTL2 = 87;
  static const int ARM64_INS_FCVTMS = 88;
  static const int ARM64_INS_FCVTMU = 89;
  static const int ARM64_INS_FCVTNS = 90;
  static const int ARM64_INS_FCVTNU = 91;
  static const int ARM64_INS_FCVTN = 92;
  static const int ARM64_INS_FCVTN2 = 93;
  static const int ARM64_INS_FCVTPS = 94;
  static const int ARM64_INS_FCVTPU = 95;
  static const int ARM64_INS_FCVTXN = 96;
  static const int ARM64_INS_FCVTXN2 = 97;
  static const int ARM64_INS_FCVTZS = 98;
  static const int ARM64_INS_FCVTZU = 99;
  static const int ARM64_INS_FDIV = 100;
  static const int ARM64_INS_FMADD = 101;
  static const int ARM64_INS_FMAX = 102;
  static const int ARM64_INS_FMAXNM = 103;
  static const int ARM64_INS_FMAXNMP = 104;
  static const int ARM64_INS_FMAXNMV = 105;
  static const int ARM64_INS_FMAXP = 106;
  static const int ARM64_INS_FMAXV = 107;
  static const int ARM64_INS_FMIN = 108;
  static const int ARM64_INS_FMINNM = 109;
  static const int ARM64_INS_FMINNMP = 110;
  static const int ARM64_INS_FMINNMV = 111;
  static const int ARM64_INS_FMINP = 112;
  static const int ARM64_INS_FMINV = 113;
  static const int ARM64_INS_FMLA = 114;
  static const int ARM64_INS_FMLS = 115;
  static const int ARM64_INS_FMOV = 116;
  static const int ARM64_INS_FMSUB = 117;
  static const int ARM64_INS_FMUL = 118;
  static const int ARM64_INS_FMULX = 119;
  static const int ARM64_INS_FNEG = 120;
  static const int ARM64_INS_FNMADD = 121;
  static const int ARM64_INS_FNMSUB = 122;
  static const int ARM64_INS_FNMUL = 123;
  static const int ARM64_INS_FRECPE = 124;
  static const int ARM64_INS_FRECPS = 125;
  static const int ARM64_INS_FRECPX = 126;
  static const int ARM64_INS_FRINTA = 127;
  static const int ARM64_INS_FRINTI = 128;
  static const int ARM64_INS_FRINTM = 129;
  static const int ARM64_INS_FRINTN = 130;
  static const int ARM64_INS_FRINTP = 131;
  static const int ARM64_INS_FRINTX = 132;
  static const int ARM64_INS_FRINTZ = 133;
  static const int ARM64_INS_FRSQRTE = 134;
  static const int ARM64_INS_FRSQRTS = 135;
  static const int ARM64_INS_FSQRT = 136;
  static const int ARM64_INS_FSUB = 137;
  static const int ARM64_INS_HINT = 138;
  static const int ARM64_INS_HLT = 139;
  static const int ARM64_INS_HVC = 140;
  static const int ARM64_INS_INS = 141;
  static const int ARM64_INS_ISB = 142;
  static const int ARM64_INS_LD1 = 143;
  static const int ARM64_INS_LD1R = 144;
  static const int ARM64_INS_LD2R = 145;
  static const int ARM64_INS_LD2 = 146;
  static const int ARM64_INS_LD3R = 147;
  static const int ARM64_INS_LD3 = 148;
  static const int ARM64_INS_LD4 = 149;
  static const int ARM64_INS_LD4R = 150;
  static const int ARM64_INS_LDARB = 151;
  static const int ARM64_INS_LDARH = 152;
  static const int ARM64_INS_LDAR = 153;
  static const int ARM64_INS_LDAXP = 154;
  static const int ARM64_INS_LDAXRB = 155;
  static const int ARM64_INS_LDAXRH = 156;
  static const int ARM64_INS_LDAXR = 157;
  static const int ARM64_INS_LDNP = 158;
  static const int ARM64_INS_LDP = 159;
  static const int ARM64_INS_LDPSW = 160;
  static const int ARM64_INS_LDRB = 161;
  static const int ARM64_INS_LDR = 162;
  static const int ARM64_INS_LDRH = 163;
  static const int ARM64_INS_LDRSB = 164;
  static const int ARM64_INS_LDRSH = 165;
  static const int ARM64_INS_LDRSW = 166;
  static const int ARM64_INS_LDTRB = 167;
  static const int ARM64_INS_LDTRH = 168;
  static const int ARM64_INS_LDTRSB = 169;
  static const int ARM64_INS_LDTRSH = 170;
  static const int ARM64_INS_LDTRSW = 171;
  static const int ARM64_INS_LDTR = 172;
  static const int ARM64_INS_LDURB = 173;
  static const int ARM64_INS_LDUR = 174;
  static const int ARM64_INS_LDURH = 175;
  static const int ARM64_INS_LDURSB = 176;
  static const int ARM64_INS_LDURSH = 177;
  static const int ARM64_INS_LDURSW = 178;
  static const int ARM64_INS_LDXP = 179;
  static const int ARM64_INS_LDXRB = 180;
  static const int ARM64_INS_LDXRH = 181;
  static const int ARM64_INS_LDXR = 182;
  static const int ARM64_INS_LSL = 183;
  static const int ARM64_INS_LSR = 184;
  static const int ARM64_INS_MADD = 185;
  static const int ARM64_INS_MLA = 186;
  static const int ARM64_INS_MLS = 187;
  static const int ARM64_INS_MOVI = 188;
  static const int ARM64_INS_MOVK = 189;
  static const int ARM64_INS_MOVN = 190;
  static const int ARM64_INS_MOVZ = 191;
  static const int ARM64_INS_MRS = 192;
  static const int ARM64_INS_MSR = 193;
  static const int ARM64_INS_MSUB = 194;
  static const int ARM64_INS_MUL = 195;
  static const int ARM64_INS_MVNI = 196;
  static const int ARM64_INS_NEG = 197;
  static const int ARM64_INS_NOT = 198;
  static const int ARM64_INS_ORN = 199;
  static const int ARM64_INS_ORR = 200;
  static const int ARM64_INS_PMULL2 = 201;
  static const int ARM64_INS_PMULL = 202;
  static const int ARM64_INS_PMUL = 203;
  static const int ARM64_INS_PRFM = 204;
  static const int ARM64_INS_PRFUM = 205;
  static const int ARM64_INS_RADDHN = 206;
  static const int ARM64_INS_RADDHN2 = 207;
  static const int ARM64_INS_RBIT = 208;
  static const int ARM64_INS_RET = 209;
  static const int ARM64_INS_REV16 = 210;
  static const int ARM64_INS_REV32 = 211;
  static const int ARM64_INS_REV64 = 212;
  static const int ARM64_INS_REV = 213;
  static const int ARM64_INS_ROR = 214;
  static const int ARM64_INS_RSHRN2 = 215;
  static const int ARM64_INS_RSHRN = 216;
  static const int ARM64_INS_RSUBHN = 217;
  static const int ARM64_INS_RSUBHN2 = 218;
  static const int ARM64_INS_SABAL2 = 219;
  static const int ARM64_INS_SABAL = 220;
  static const int ARM64_INS_SABA = 221;
  static const int ARM64_INS_SABDL2 = 222;
  static const int ARM64_INS_SABDL = 223;
  static const int ARM64_INS_SABD = 224;
  static const int ARM64_INS_SADALP = 225;
  static const int ARM64_INS_SADDLP = 226;
  static const int ARM64_INS_SADDLV = 227;
  static const int ARM64_INS_SADDL2 = 228;
  static const int ARM64_INS_SADDL = 229;
  static const int ARM64_INS_SADDW2 = 230;
  static const int ARM64_INS_SADDW = 231;
  static const int ARM64_INS_SBC = 232;
  static const int ARM64_INS_SBFM = 233;
  static const int ARM64_INS_SCVTF = 234;
  static const int ARM64_INS_SDIV = 235;
  static const int ARM64_INS_SHA1C = 236;
  static const int ARM64_INS_SHA1H = 237;
  static const int ARM64_INS_SHA1M = 238;
  static const int ARM64_INS_SHA1P = 239;
  static const int ARM64_INS_SHA1SU0 = 240;
  static const int ARM64_INS_SHA1SU1 = 241;
  static const int ARM64_INS_SHA256H2 = 242;
  static const int ARM64_INS_SHA256H = 243;
  static const int ARM64_INS_SHA256SU0 = 244;
  static const int ARM64_INS_SHA256SU1 = 245;
  static const int ARM64_INS_SHADD = 246;
  static const int ARM64_INS_SHLL2 = 247;
  static const int ARM64_INS_SHLL = 248;
  static const int ARM64_INS_SHL = 249;
  static const int ARM64_INS_SHRN2 = 250;
  static const int ARM64_INS_SHRN = 251;
  static const int ARM64_INS_SHSUB = 252;
  static const int ARM64_INS_SLI = 253;
  static const int ARM64_INS_SMADDL = 254;
  static const int ARM64_INS_SMAXP = 255;
  static const int ARM64_INS_SMAXV = 256;
  static const int ARM64_INS_SMAX = 257;
  static const int ARM64_INS_SMC = 258;
  static const int ARM64_INS_SMINP = 259;
  static const int ARM64_INS_SMINV = 260;
  static const int ARM64_INS_SMIN = 261;
  static const int ARM64_INS_SMLAL2 = 262;
  static const int ARM64_INS_SMLAL = 263;
  static const int ARM64_INS_SMLSL2 = 264;
  static const int ARM64_INS_SMLSL = 265;
  static const int ARM64_INS_SMOV = 266;
  static const int ARM64_INS_SMSUBL = 267;
  static const int ARM64_INS_SMULH = 268;
  static const int ARM64_INS_SMULL2 = 269;
  static const int ARM64_INS_SMULL = 270;
  static const int ARM64_INS_SQABS = 271;
  static const int ARM64_INS_SQADD = 272;
  static const int ARM64_INS_SQDMLAL = 273;
  static const int ARM64_INS_SQDMLAL2 = 274;
  static const int ARM64_INS_SQDMLSL = 275;
  static const int ARM64_INS_SQDMLSL2 = 276;
  static const int ARM64_INS_SQDMULH = 277;
  static const int ARM64_INS_SQDMULL = 278;
  static const int ARM64_INS_SQDMULL2 = 279;
  static const int ARM64_INS_SQNEG = 280;
  static const int ARM64_INS_SQRDMULH = 281;
  static const int ARM64_INS_SQRSHL = 282;
  static const int ARM64_INS_SQRSHRN = 283;
  static const int ARM64_INS_SQRSHRN2 = 284;
  static const int ARM64_INS_SQRSHRUN = 285;
  static const int ARM64_INS_SQRSHRUN2 = 286;
  static const int ARM64_INS_SQSHLU = 287;
  static const int ARM64_INS_SQSHL = 288;
  static const int ARM64_INS_SQSHRN = 289;
  static const int ARM64_INS_SQSHRN2 = 290;
  static const int ARM64_INS_SQSHRUN = 291;
  static const int ARM64_INS_SQSHRUN2 = 292;
  static const int ARM64_INS_SQSUB = 293;
  static const int ARM64_INS_SQXTN2 = 294;
  static const int ARM64_INS_SQXTN = 295;
  static const int ARM64_INS_SQXTUN2 = 296;
  static const int ARM64_INS_SQXTUN = 297;
  static const int ARM64_INS_SRHADD = 298;
  static const int ARM64_INS_SRI = 299;
  static const int ARM64_INS_SRSHL = 300;
  static const int ARM64_INS_SRSHR = 301;
  static const int ARM64_INS_SRSRA = 302;
  static const int ARM64_INS_SSHLL2 = 303;
  static const int ARM64_INS_SSHLL = 304;
  static const int ARM64_INS_SSHL = 305;
  static const int ARM64_INS_SSHR = 306;
  static const int ARM64_INS_SSRA = 307;
  static const int ARM64_INS_SSUBL2 = 308;
  static const int ARM64_INS_SSUBL = 309;
  static const int ARM64_INS_SSUBW2 = 310;
  static const int ARM64_INS_SSUBW = 311;
  static const int ARM64_INS_ST1 = 312;
  static const int ARM64_INS_ST2 = 313;
  static const int ARM64_INS_ST3 = 314;
  static const int ARM64_INS_ST4 = 315;
  static const int ARM64_INS_STLRB = 316;
  static const int ARM64_INS_STLRH = 317;
  static const int ARM64_INS_STLR = 318;
  static const int ARM64_INS_STLXP = 319;
  static const int ARM64_INS_STLXRB = 320;
  static const int ARM64_INS_STLXRH = 321;
  static const int ARM64_INS_STLXR = 322;
  static const int ARM64_INS_STNP = 323;
  static const int ARM64_INS_STP = 324;
  static const int ARM64_INS_STRB = 325;
  static const int ARM64_INS_STR = 326;
  static const int ARM64_INS_STRH = 327;
  static const int ARM64_INS_STTRB = 328;
  static const int ARM64_INS_STTRH = 329;
  static const int ARM64_INS_STTR = 330;
  static const int ARM64_INS_STURB = 331;
  static const int ARM64_INS_STUR = 332;
  static const int ARM64_INS_STURH = 333;
  static const int ARM64_INS_STXP = 334;
  static const int ARM64_INS_STXRB = 335;
  static const int ARM64_INS_STXRH = 336;
  static const int ARM64_INS_STXR = 337;
  static const int ARM64_INS_SUBHN = 338;
  static const int ARM64_INS_SUBHN2 = 339;
  static const int ARM64_INS_SUB = 340;
  static const int ARM64_INS_SUQADD = 341;
  static const int ARM64_INS_SVC = 342;
  static const int ARM64_INS_SYSL = 343;
  static const int ARM64_INS_SYS = 344;
  static const int ARM64_INS_TBL = 345;
  static const int ARM64_INS_TBNZ = 346;
  static const int ARM64_INS_TBX = 347;
  static const int ARM64_INS_TBZ = 348;
  static const int ARM64_INS_TRN1 = 349;
  static const int ARM64_INS_TRN2 = 350;
  static const int ARM64_INS_UABAL2 = 351;
  static const int ARM64_INS_UABAL = 352;
  static const int ARM64_INS_UABA = 353;
  static const int ARM64_INS_UABDL2 = 354;
  static const int ARM64_INS_UABDL = 355;
  static const int ARM64_INS_UABD = 356;
  static const int ARM64_INS_UADALP = 357;
  static const int ARM64_INS_UADDLP = 358;
  static const int ARM64_INS_UADDLV = 359;
  static const int ARM64_INS_UADDL2 = 360;
  static const int ARM64_INS_UADDL = 361;
  static const int ARM64_INS_UADDW2 = 362;
  static const int ARM64_INS_UADDW = 363;
  static const int ARM64_INS_UBFM = 364;
  static const int ARM64_INS_UCVTF = 365;
  static const int ARM64_INS_UDIV = 366;
  static const int ARM64_INS_UHADD = 367;
  static const int ARM64_INS_UHSUB = 368;
  static const int ARM64_INS_UMADDL = 369;
  static const int ARM64_INS_UMAXP = 370;
  static const int ARM64_INS_UMAXV = 371;
  static const int ARM64_INS_UMAX = 372;
  static const int ARM64_INS_UMINP = 373;
  static const int ARM64_INS_UMINV = 374;
  static const int ARM64_INS_UMIN = 375;
  static const int ARM64_INS_UMLAL2 = 376;
  static const int ARM64_INS_UMLAL = 377;
  static const int ARM64_INS_UMLSL2 = 378;
  static const int ARM64_INS_UMLSL = 379;
  static const int ARM64_INS_UMOV = 380;
  static const int ARM64_INS_UMSUBL = 381;
  static const int ARM64_INS_UMULH = 382;
  static const int ARM64_INS_UMULL2 = 383;
  static const int ARM64_INS_UMULL = 384;
  static const int ARM64_INS_UQADD = 385;
  static const int ARM64_INS_UQRSHL = 386;
  static const int ARM64_INS_UQRSHRN = 387;
  static const int ARM64_INS_UQRSHRN2 = 388;
  static const int ARM64_INS_UQSHL = 389;
  static const int ARM64_INS_UQSHRN = 390;
  static const int ARM64_INS_UQSHRN2 = 391;
  static const int ARM64_INS_UQSUB = 392;
  static const int ARM64_INS_UQXTN2 = 393;
  static const int ARM64_INS_UQXTN = 394;
  static const int ARM64_INS_URECPE = 395;
  static const int ARM64_INS_URHADD = 396;
  static const int ARM64_INS_URSHL = 397;
  static const int ARM64_INS_URSHR = 398;
  static const int ARM64_INS_URSQRTE = 399;
  static const int ARM64_INS_URSRA = 400;
  static const int ARM64_INS_USHLL2 = 401;
  static const int ARM64_INS_USHLL = 402;
  static const int ARM64_INS_USHL = 403;
  static const int ARM64_INS_USHR = 404;
  static const int ARM64_INS_USQADD = 405;
  static const int ARM64_INS_USRA = 406;
  static const int ARM64_INS_USUBL2 = 407;
  static const int ARM64_INS_USUBL = 408;
  static const int ARM64_INS_USUBW2 = 409;
  static const int ARM64_INS_USUBW = 410;
  static const int ARM64_INS_UZP1 = 411;
  static const int ARM64_INS_UZP2 = 412;
  static const int ARM64_INS_XTN2 = 413;
  static const int ARM64_INS_XTN = 414;
  static const int ARM64_INS_ZIP1 = 415;
  static const int ARM64_INS_ZIP2 = 416;
  static const int ARM64_INS_MNEG = 417;
  static const int ARM64_INS_UMNEGL = 418;
  static const int ARM64_INS_SMNEGL = 419;
  static const int ARM64_INS_NOP = 420;
  static const int ARM64_INS_YIELD = 421;
  static const int ARM64_INS_WFE = 422;
  static const int ARM64_INS_WFI = 423;
  static const int ARM64_INS_SEV = 424;
  static const int ARM64_INS_SEVL = 425;
  static const int ARM64_INS_NGC = 426;
  static const int ARM64_INS_SBFIZ = 427;
  static const int ARM64_INS_UBFIZ = 428;
  static const int ARM64_INS_SBFX = 429;
  static const int ARM64_INS_UBFX = 430;
  static const int ARM64_INS_BFI = 431;
  static const int ARM64_INS_BFXIL = 432;
  static const int ARM64_INS_CMN = 433;
  static const int ARM64_INS_MVN = 434;
  static const int ARM64_INS_TST = 435;
  static const int ARM64_INS_CSET = 436;
  static const int ARM64_INS_CINC = 437;
  static const int ARM64_INS_CSETM = 438;
  static const int ARM64_INS_CINV = 439;
  static const int ARM64_INS_CNEG = 440;
  static const int ARM64_INS_SXTB = 441;
  static const int ARM64_INS_SXTH = 442;
  static const int ARM64_INS_SXTW = 443;
  static const int ARM64_INS_CMP = 444;
  static const int ARM64_INS_UXTB = 445;
  static const int ARM64_INS_UXTH = 446;
  static const int ARM64_INS_UXTW = 447;
  static const int ARM64_INS_IC = 448;
  static const int ARM64_INS_DC = 449;
  static const int ARM64_INS_AT = 450;
  static const int ARM64_INS_TLBI = 451;
  static const int ARM64_INS_NEGS = 452;
  static const int ARM64_INS_NGCS = 453;
  static const int ARM64_INS_ENDING = 454;
}

/// Group of ARM64 instructions
abstract class arm64_insn_group {
  /// < = CS_GRP_INVALID
  static const int ARM64_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int ARM64_GRP_JUMP = 1;
  static const int ARM64_GRP_CALL = 2;
  static const int ARM64_GRP_RET = 3;
  static const int ARM64_GRP_INT = 4;

  /// < = CS_GRP_PRIVILEGE
  static const int ARM64_GRP_PRIVILEGE = 6;

  /// < = CS_GRP_BRANCH_RELATIVE
  static const int ARM64_GRP_BRANCH_RELATIVE = 7;
  static const int ARM64_GRP_CRYPTO = 128;
  static const int ARM64_GRP_FPARMV8 = 129;
  static const int ARM64_GRP_NEON = 130;
  static const int ARM64_GRP_CRC = 131;
  static const int ARM64_GRP_ENDING = 132;
}

/// M68K registers and special registers
abstract class m68k_reg {
  static const int M68K_REG_INVALID = 0;
  static const int M68K_REG_D0 = 1;
  static const int M68K_REG_D1 = 2;
  static const int M68K_REG_D2 = 3;
  static const int M68K_REG_D3 = 4;
  static const int M68K_REG_D4 = 5;
  static const int M68K_REG_D5 = 6;
  static const int M68K_REG_D6 = 7;
  static const int M68K_REG_D7 = 8;
  static const int M68K_REG_A0 = 9;
  static const int M68K_REG_A1 = 10;
  static const int M68K_REG_A2 = 11;
  static const int M68K_REG_A3 = 12;
  static const int M68K_REG_A4 = 13;
  static const int M68K_REG_A5 = 14;
  static const int M68K_REG_A6 = 15;
  static const int M68K_REG_A7 = 16;
  static const int M68K_REG_FP0 = 17;
  static const int M68K_REG_FP1 = 18;
  static const int M68K_REG_FP2 = 19;
  static const int M68K_REG_FP3 = 20;
  static const int M68K_REG_FP4 = 21;
  static const int M68K_REG_FP5 = 22;
  static const int M68K_REG_FP6 = 23;
  static const int M68K_REG_FP7 = 24;
  static const int M68K_REG_PC = 25;
  static const int M68K_REG_SR = 26;
  static const int M68K_REG_CCR = 27;
  static const int M68K_REG_SFC = 28;
  static const int M68K_REG_DFC = 29;
  static const int M68K_REG_USP = 30;
  static const int M68K_REG_VBR = 31;
  static const int M68K_REG_CACR = 32;
  static const int M68K_REG_CAAR = 33;
  static const int M68K_REG_MSP = 34;
  static const int M68K_REG_ISP = 35;
  static const int M68K_REG_TC = 36;
  static const int M68K_REG_ITT0 = 37;
  static const int M68K_REG_ITT1 = 38;
  static const int M68K_REG_DTT0 = 39;
  static const int M68K_REG_DTT1 = 40;
  static const int M68K_REG_MMUSR = 41;
  static const int M68K_REG_URP = 42;
  static const int M68K_REG_SRP = 43;
  static const int M68K_REG_FPCR = 44;
  static const int M68K_REG_FPSR = 45;
  static const int M68K_REG_FPIAR = 46;
  static const int M68K_REG_ENDING = 47;
}

/// M68K Addressing Modes
abstract class m68k_address_mode {
  /// < No address mode.
  static const int M68K_AM_NONE = 0;

  /// < Register Direct - Data
  static const int M68K_AM_REG_DIRECT_DATA = 1;

  /// < Register Direct - Address
  static const int M68K_AM_REG_DIRECT_ADDR = 2;

  /// < Register Indirect - Address
  static const int M68K_AM_REGI_ADDR = 3;

  /// < Register Indirect - Address with Postincrement
  static const int M68K_AM_REGI_ADDR_POST_INC = 4;

  /// < Register Indirect - Address with Predecrement
  static const int M68K_AM_REGI_ADDR_PRE_DEC = 5;

  /// < Register Indirect - Address with Displacement
  static const int M68K_AM_REGI_ADDR_DISP = 6;

  /// < Address Register Indirect With Index- 8-bit displacement
  static const int M68K_AM_AREGI_INDEX_8_BIT_DISP = 7;

  /// < Address Register Indirect With Index- Base displacement
  static const int M68K_AM_AREGI_INDEX_BASE_DISP = 8;

  /// < Memory indirect - Postindex
  static const int M68K_AM_MEMI_POST_INDEX = 9;

  /// < Memory indirect - Preindex
  static const int M68K_AM_MEMI_PRE_INDEX = 10;

  /// < Program Counter Indirect - with Displacement
  static const int M68K_AM_PCI_DISP = 11;

  /// < Program Counter Indirect with Index - with 8-Bit Displacement
  static const int M68K_AM_PCI_INDEX_8_BIT_DISP = 12;

  /// < Program Counter Indirect with Index - with Base Displacement
  static const int M68K_AM_PCI_INDEX_BASE_DISP = 13;

  /// < Program Counter Memory Indirect - Postindexed
  static const int M68K_AM_PC_MEMI_POST_INDEX = 14;

  /// < Program Counter Memory Indirect - Preindexed
  static const int M68K_AM_PC_MEMI_PRE_INDEX = 15;

  /// < Absolute Data Addressing  - Short
  static const int M68K_AM_ABSOLUTE_DATA_SHORT = 16;

  /// < Absolute Data Addressing  - Long
  static const int M68K_AM_ABSOLUTE_DATA_LONG = 17;

  /// < Immediate value
  static const int M68K_AM_IMMEDIATE = 18;

  /// < Address as displacement from (PC+2) used by branches
  static const int M68K_AM_BRANCH_DISPLACEMENT = 19;
}

/// Operand type for instruction's operands
abstract class m68k_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int M68K_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int M68K_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int M68K_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int M68K_OP_MEM = 3;

  /// < single precision Floating-Point operand
  static const int M68K_OP_FP_SINGLE = 4;

  /// < double precision Floating-Point operand
  static const int M68K_OP_FP_DOUBLE = 5;

  /// < Register bits move
  static const int M68K_OP_REG_BITS = 6;

  /// < Register pair in the same op (upper 4 bits for first reg, lower for second)
  static const int M68K_OP_REG_PAIR = 7;

  /// < Branch displacement
  static const int M68K_OP_BR_DISP = 8;
}

/// Instruction's operand referring to memory
/// This is associated with M68K_OP_MEM operand type above
class m68k_op_mem extends ffi.Struct {
  /// < base register (or M68K_REG_INVALID if irrelevant)
  @ffi.Int32()
  external int base_reg;

  /// < index register (or M68K_REG_INVALID if irrelevant)
  @ffi.Int32()
  external int index_reg;

  /// < indirect base register (or M68K_REG_INVALID if irrelevant)
  @ffi.Int32()
  external int in_base_reg;

  /// < indirect displacement
  @ffi.Uint32()
  external int in_disp;

  /// < other displacement
  @ffi.Uint32()
  external int out_disp;

  /// < displacement value
  @ffi.Int16()
  external int disp;

  /// < scale for index register
  @ffi.Uint8()
  external int scale;

  /// < set to true if the two values below should be used
  @ffi.Uint8()
  external int bitfield;

  /// < used for bf* instructions
  @ffi.Uint8()
  external int width;

  /// < used for bf* instructions
  @ffi.Uint8()
  external int offset;

  /// < 0 = w, 1 = l
  @ffi.Uint8()
  external int index_size;
}

/// Operand type for instruction's operands
abstract class m68k_op_br_disp_size {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int M68K_OP_BR_DISP_SIZE_INVALID = 0;

  /// < signed 8-bit displacement
  static const int M68K_OP_BR_DISP_SIZE_BYTE = 1;

  /// < signed 16-bit displacement
  static const int M68K_OP_BR_DISP_SIZE_WORD = 2;

  /// < signed 32-bit displacement
  static const int M68K_OP_BR_DISP_SIZE_LONG = 4;
}

class m68k_op_br_disp extends ffi.Struct {
  /// < displacement value
  @ffi.Int32()
  external int disp;

  /// < Size from m68k_op_br_disp_size type above
  @ffi.Uint8()
  external int disp_size;
}

/// Register pair in one operand.
class cs_m68k_op_reg_pair extends ffi.Struct {
  @ffi.Int32()
  external int reg_0;

  @ffi.Int32()
  external int reg_1;
}

/// Instruction operand
class cs_m68k_op extends ffi.Struct {
  external UnnamedUnion3 unnamed;

  /// < data when operand is targeting memory
  external m68k_op_mem mem;

  /// < data when operand is a branch displacement
  external m68k_op_br_disp br_disp;

  /// < register bits for movem etc. (always in d0-d7, a0-a7, fp0 - fp7 order)
  @ffi.Uint32()
  external int register_bits;

  @ffi.Int32()
  external int type;

  /// < M68K addressing mode for this op
  @ffi.Int32()
  external int address_mode;
}

class UnnamedUnion3 extends ffi.Union {
  /// < immediate value for IMM operand
  @ffi.Uint64()
  external int imm;

  /// < double imm
  @ffi.Double()
  external double dimm;

  /// < float imm
  @ffi.Float()
  external double simm;

  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < register pair in one operand
  external cs_m68k_op_reg_pair reg_pair;
}

/// Operation size of the CPU instructions
abstract class m68k_cpu_size {
  /// < unsized or unspecified
  static const int M68K_CPU_SIZE_NONE = 0;

  /// < 1 byte in size
  static const int M68K_CPU_SIZE_BYTE = 1;

  /// < 2 bytes in size
  static const int M68K_CPU_SIZE_WORD = 2;

  /// < 4 bytes in size
  static const int M68K_CPU_SIZE_LONG = 4;
}

/// Operation size of the FPU instructions (Notice that FPU instruction can also use CPU sizes if needed)
abstract class m68k_fpu_size {
  /// < unsized like fsave/frestore
  static const int M68K_FPU_SIZE_NONE = 0;

  /// < 4 byte in size (single float)
  static const int M68K_FPU_SIZE_SINGLE = 4;

  /// < 8 byte in size (double)
  static const int M68K_FPU_SIZE_DOUBLE = 8;

  /// < 12 byte in size (extended real format)
  static const int M68K_FPU_SIZE_EXTENDED = 12;
}

/// Type of size that is being used for the current instruction
abstract class m68k_size_type {
  static const int M68K_SIZE_TYPE_INVALID = 0;
  static const int M68K_SIZE_TYPE_CPU = 1;
  static const int M68K_SIZE_TYPE_FPU = 2;
}

/// Operation size of the current instruction (NOT the actually size of instruction)
class m68k_op_size extends ffi.Struct {
  @ffi.Int32()
  external int type;

  external UnnamedUnion4 unnamed;
}

class UnnamedUnion4 extends ffi.Union {
  @ffi.Int32()
  external int cpu_size;

  @ffi.Int32()
  external int fpu_size;
}

/// The M68K instruction and it's operands
class cs_m68k extends ffi.Struct {
  @ffi.Array.multi([4])
  external ffi.Array<cs_m68k_op> operands;

  /// < size of data operand works on in bytes (.b, .w, .l, etc)
  external m68k_op_size op_size;

  /// < number of operands for the instruction
  @ffi.Uint8()
  external int op_count;
}

/// M68K instruction
abstract class m68k_insn {
  static const int M68K_INS_INVALID = 0;
  static const int M68K_INS_ABCD = 1;
  static const int M68K_INS_ADD = 2;
  static const int M68K_INS_ADDA = 3;
  static const int M68K_INS_ADDI = 4;
  static const int M68K_INS_ADDQ = 5;
  static const int M68K_INS_ADDX = 6;
  static const int M68K_INS_AND = 7;
  static const int M68K_INS_ANDI = 8;
  static const int M68K_INS_ASL = 9;
  static const int M68K_INS_ASR = 10;
  static const int M68K_INS_BHS = 11;
  static const int M68K_INS_BLO = 12;
  static const int M68K_INS_BHI = 13;
  static const int M68K_INS_BLS = 14;
  static const int M68K_INS_BCC = 15;
  static const int M68K_INS_BCS = 16;
  static const int M68K_INS_BNE = 17;
  static const int M68K_INS_BEQ = 18;
  static const int M68K_INS_BVC = 19;
  static const int M68K_INS_BVS = 20;
  static const int M68K_INS_BPL = 21;
  static const int M68K_INS_BMI = 22;
  static const int M68K_INS_BGE = 23;
  static const int M68K_INS_BLT = 24;
  static const int M68K_INS_BGT = 25;
  static const int M68K_INS_BLE = 26;
  static const int M68K_INS_BRA = 27;
  static const int M68K_INS_BSR = 28;
  static const int M68K_INS_BCHG = 29;
  static const int M68K_INS_BCLR = 30;
  static const int M68K_INS_BSET = 31;
  static const int M68K_INS_BTST = 32;
  static const int M68K_INS_BFCHG = 33;
  static const int M68K_INS_BFCLR = 34;
  static const int M68K_INS_BFEXTS = 35;
  static const int M68K_INS_BFEXTU = 36;
  static const int M68K_INS_BFFFO = 37;
  static const int M68K_INS_BFINS = 38;
  static const int M68K_INS_BFSET = 39;
  static const int M68K_INS_BFTST = 40;
  static const int M68K_INS_BKPT = 41;
  static const int M68K_INS_CALLM = 42;
  static const int M68K_INS_CAS = 43;
  static const int M68K_INS_CAS2 = 44;
  static const int M68K_INS_CHK = 45;
  static const int M68K_INS_CHK2 = 46;
  static const int M68K_INS_CLR = 47;
  static const int M68K_INS_CMP = 48;
  static const int M68K_INS_CMPA = 49;
  static const int M68K_INS_CMPI = 50;
  static const int M68K_INS_CMPM = 51;
  static const int M68K_INS_CMP2 = 52;
  static const int M68K_INS_CINVL = 53;
  static const int M68K_INS_CINVP = 54;
  static const int M68K_INS_CINVA = 55;
  static const int M68K_INS_CPUSHL = 56;
  static const int M68K_INS_CPUSHP = 57;
  static const int M68K_INS_CPUSHA = 58;
  static const int M68K_INS_DBT = 59;
  static const int M68K_INS_DBF = 60;
  static const int M68K_INS_DBHI = 61;
  static const int M68K_INS_DBLS = 62;
  static const int M68K_INS_DBCC = 63;
  static const int M68K_INS_DBCS = 64;
  static const int M68K_INS_DBNE = 65;
  static const int M68K_INS_DBEQ = 66;
  static const int M68K_INS_DBVC = 67;
  static const int M68K_INS_DBVS = 68;
  static const int M68K_INS_DBPL = 69;
  static const int M68K_INS_DBMI = 70;
  static const int M68K_INS_DBGE = 71;
  static const int M68K_INS_DBLT = 72;
  static const int M68K_INS_DBGT = 73;
  static const int M68K_INS_DBLE = 74;
  static const int M68K_INS_DBRA = 75;
  static const int M68K_INS_DIVS = 76;
  static const int M68K_INS_DIVSL = 77;
  static const int M68K_INS_DIVU = 78;
  static const int M68K_INS_DIVUL = 79;
  static const int M68K_INS_EOR = 80;
  static const int M68K_INS_EORI = 81;
  static const int M68K_INS_EXG = 82;
  static const int M68K_INS_EXT = 83;
  static const int M68K_INS_EXTB = 84;
  static const int M68K_INS_FABS = 85;
  static const int M68K_INS_FSABS = 86;
  static const int M68K_INS_FDABS = 87;
  static const int M68K_INS_FACOS = 88;
  static const int M68K_INS_FADD = 89;
  static const int M68K_INS_FSADD = 90;
  static const int M68K_INS_FDADD = 91;
  static const int M68K_INS_FASIN = 92;
  static const int M68K_INS_FATAN = 93;
  static const int M68K_INS_FATANH = 94;
  static const int M68K_INS_FBF = 95;
  static const int M68K_INS_FBEQ = 96;
  static const int M68K_INS_FBOGT = 97;
  static const int M68K_INS_FBOGE = 98;
  static const int M68K_INS_FBOLT = 99;
  static const int M68K_INS_FBOLE = 100;
  static const int M68K_INS_FBOGL = 101;
  static const int M68K_INS_FBOR = 102;
  static const int M68K_INS_FBUN = 103;
  static const int M68K_INS_FBUEQ = 104;
  static const int M68K_INS_FBUGT = 105;
  static const int M68K_INS_FBUGE = 106;
  static const int M68K_INS_FBULT = 107;
  static const int M68K_INS_FBULE = 108;
  static const int M68K_INS_FBNE = 109;
  static const int M68K_INS_FBT = 110;
  static const int M68K_INS_FBSF = 111;
  static const int M68K_INS_FBSEQ = 112;
  static const int M68K_INS_FBGT = 113;
  static const int M68K_INS_FBGE = 114;
  static const int M68K_INS_FBLT = 115;
  static const int M68K_INS_FBLE = 116;
  static const int M68K_INS_FBGL = 117;
  static const int M68K_INS_FBGLE = 118;
  static const int M68K_INS_FBNGLE = 119;
  static const int M68K_INS_FBNGL = 120;
  static const int M68K_INS_FBNLE = 121;
  static const int M68K_INS_FBNLT = 122;
  static const int M68K_INS_FBNGE = 123;
  static const int M68K_INS_FBNGT = 124;
  static const int M68K_INS_FBSNE = 125;
  static const int M68K_INS_FBST = 126;
  static const int M68K_INS_FCMP = 127;
  static const int M68K_INS_FCOS = 128;
  static const int M68K_INS_FCOSH = 129;
  static const int M68K_INS_FDBF = 130;
  static const int M68K_INS_FDBEQ = 131;
  static const int M68K_INS_FDBOGT = 132;
  static const int M68K_INS_FDBOGE = 133;
  static const int M68K_INS_FDBOLT = 134;
  static const int M68K_INS_FDBOLE = 135;
  static const int M68K_INS_FDBOGL = 136;
  static const int M68K_INS_FDBOR = 137;
  static const int M68K_INS_FDBUN = 138;
  static const int M68K_INS_FDBUEQ = 139;
  static const int M68K_INS_FDBUGT = 140;
  static const int M68K_INS_FDBUGE = 141;
  static const int M68K_INS_FDBULT = 142;
  static const int M68K_INS_FDBULE = 143;
  static const int M68K_INS_FDBNE = 144;
  static const int M68K_INS_FDBT = 145;
  static const int M68K_INS_FDBSF = 146;
  static const int M68K_INS_FDBSEQ = 147;
  static const int M68K_INS_FDBGT = 148;
  static const int M68K_INS_FDBGE = 149;
  static const int M68K_INS_FDBLT = 150;
  static const int M68K_INS_FDBLE = 151;
  static const int M68K_INS_FDBGL = 152;
  static const int M68K_INS_FDBGLE = 153;
  static const int M68K_INS_FDBNGLE = 154;
  static const int M68K_INS_FDBNGL = 155;
  static const int M68K_INS_FDBNLE = 156;
  static const int M68K_INS_FDBNLT = 157;
  static const int M68K_INS_FDBNGE = 158;
  static const int M68K_INS_FDBNGT = 159;
  static const int M68K_INS_FDBSNE = 160;
  static const int M68K_INS_FDBST = 161;
  static const int M68K_INS_FDIV = 162;
  static const int M68K_INS_FSDIV = 163;
  static const int M68K_INS_FDDIV = 164;
  static const int M68K_INS_FETOX = 165;
  static const int M68K_INS_FETOXM1 = 166;
  static const int M68K_INS_FGETEXP = 167;
  static const int M68K_INS_FGETMAN = 168;
  static const int M68K_INS_FINT = 169;
  static const int M68K_INS_FINTRZ = 170;
  static const int M68K_INS_FLOG10 = 171;
  static const int M68K_INS_FLOG2 = 172;
  static const int M68K_INS_FLOGN = 173;
  static const int M68K_INS_FLOGNP1 = 174;
  static const int M68K_INS_FMOD = 175;
  static const int M68K_INS_FMOVE = 176;
  static const int M68K_INS_FSMOVE = 177;
  static const int M68K_INS_FDMOVE = 178;
  static const int M68K_INS_FMOVECR = 179;
  static const int M68K_INS_FMOVEM = 180;
  static const int M68K_INS_FMUL = 181;
  static const int M68K_INS_FSMUL = 182;
  static const int M68K_INS_FDMUL = 183;
  static const int M68K_INS_FNEG = 184;
  static const int M68K_INS_FSNEG = 185;
  static const int M68K_INS_FDNEG = 186;
  static const int M68K_INS_FNOP = 187;
  static const int M68K_INS_FREM = 188;
  static const int M68K_INS_FRESTORE = 189;
  static const int M68K_INS_FSAVE = 190;
  static const int M68K_INS_FSCALE = 191;
  static const int M68K_INS_FSGLDIV = 192;
  static const int M68K_INS_FSGLMUL = 193;
  static const int M68K_INS_FSIN = 194;
  static const int M68K_INS_FSINCOS = 195;
  static const int M68K_INS_FSINH = 196;
  static const int M68K_INS_FSQRT = 197;
  static const int M68K_INS_FSSQRT = 198;
  static const int M68K_INS_FDSQRT = 199;
  static const int M68K_INS_FSF = 200;
  static const int M68K_INS_FSBEQ = 201;
  static const int M68K_INS_FSOGT = 202;
  static const int M68K_INS_FSOGE = 203;
  static const int M68K_INS_FSOLT = 204;
  static const int M68K_INS_FSOLE = 205;
  static const int M68K_INS_FSOGL = 206;
  static const int M68K_INS_FSOR = 207;
  static const int M68K_INS_FSUN = 208;
  static const int M68K_INS_FSUEQ = 209;
  static const int M68K_INS_FSUGT = 210;
  static const int M68K_INS_FSUGE = 211;
  static const int M68K_INS_FSULT = 212;
  static const int M68K_INS_FSULE = 213;
  static const int M68K_INS_FSNE = 214;
  static const int M68K_INS_FST = 215;
  static const int M68K_INS_FSSF = 216;
  static const int M68K_INS_FSSEQ = 217;
  static const int M68K_INS_FSGT = 218;
  static const int M68K_INS_FSGE = 219;
  static const int M68K_INS_FSLT = 220;
  static const int M68K_INS_FSLE = 221;
  static const int M68K_INS_FSGL = 222;
  static const int M68K_INS_FSGLE = 223;
  static const int M68K_INS_FSNGLE = 224;
  static const int M68K_INS_FSNGL = 225;
  static const int M68K_INS_FSNLE = 226;
  static const int M68K_INS_FSNLT = 227;
  static const int M68K_INS_FSNGE = 228;
  static const int M68K_INS_FSNGT = 229;
  static const int M68K_INS_FSSNE = 230;
  static const int M68K_INS_FSST = 231;
  static const int M68K_INS_FSUB = 232;
  static const int M68K_INS_FSSUB = 233;
  static const int M68K_INS_FDSUB = 234;
  static const int M68K_INS_FTAN = 235;
  static const int M68K_INS_FTANH = 236;
  static const int M68K_INS_FTENTOX = 237;
  static const int M68K_INS_FTRAPF = 238;
  static const int M68K_INS_FTRAPEQ = 239;
  static const int M68K_INS_FTRAPOGT = 240;
  static const int M68K_INS_FTRAPOGE = 241;
  static const int M68K_INS_FTRAPOLT = 242;
  static const int M68K_INS_FTRAPOLE = 243;
  static const int M68K_INS_FTRAPOGL = 244;
  static const int M68K_INS_FTRAPOR = 245;
  static const int M68K_INS_FTRAPUN = 246;
  static const int M68K_INS_FTRAPUEQ = 247;
  static const int M68K_INS_FTRAPUGT = 248;
  static const int M68K_INS_FTRAPUGE = 249;
  static const int M68K_INS_FTRAPULT = 250;
  static const int M68K_INS_FTRAPULE = 251;
  static const int M68K_INS_FTRAPNE = 252;
  static const int M68K_INS_FTRAPT = 253;
  static const int M68K_INS_FTRAPSF = 254;
  static const int M68K_INS_FTRAPSEQ = 255;
  static const int M68K_INS_FTRAPGT = 256;
  static const int M68K_INS_FTRAPGE = 257;
  static const int M68K_INS_FTRAPLT = 258;
  static const int M68K_INS_FTRAPLE = 259;
  static const int M68K_INS_FTRAPGL = 260;
  static const int M68K_INS_FTRAPGLE = 261;
  static const int M68K_INS_FTRAPNGLE = 262;
  static const int M68K_INS_FTRAPNGL = 263;
  static const int M68K_INS_FTRAPNLE = 264;
  static const int M68K_INS_FTRAPNLT = 265;
  static const int M68K_INS_FTRAPNGE = 266;
  static const int M68K_INS_FTRAPNGT = 267;
  static const int M68K_INS_FTRAPSNE = 268;
  static const int M68K_INS_FTRAPST = 269;
  static const int M68K_INS_FTST = 270;
  static const int M68K_INS_FTWOTOX = 271;
  static const int M68K_INS_HALT = 272;
  static const int M68K_INS_ILLEGAL = 273;
  static const int M68K_INS_JMP = 274;
  static const int M68K_INS_JSR = 275;
  static const int M68K_INS_LEA = 276;
  static const int M68K_INS_LINK = 277;
  static const int M68K_INS_LPSTOP = 278;
  static const int M68K_INS_LSL = 279;
  static const int M68K_INS_LSR = 280;
  static const int M68K_INS_MOVE = 281;
  static const int M68K_INS_MOVEA = 282;
  static const int M68K_INS_MOVEC = 283;
  static const int M68K_INS_MOVEM = 284;
  static const int M68K_INS_MOVEP = 285;
  static const int M68K_INS_MOVEQ = 286;
  static const int M68K_INS_MOVES = 287;
  static const int M68K_INS_MOVE16 = 288;
  static const int M68K_INS_MULS = 289;
  static const int M68K_INS_MULU = 290;
  static const int M68K_INS_NBCD = 291;
  static const int M68K_INS_NEG = 292;
  static const int M68K_INS_NEGX = 293;
  static const int M68K_INS_NOP = 294;
  static const int M68K_INS_NOT = 295;
  static const int M68K_INS_OR = 296;
  static const int M68K_INS_ORI = 297;
  static const int M68K_INS_PACK = 298;
  static const int M68K_INS_PEA = 299;
  static const int M68K_INS_PFLUSH = 300;
  static const int M68K_INS_PFLUSHA = 301;
  static const int M68K_INS_PFLUSHAN = 302;
  static const int M68K_INS_PFLUSHN = 303;
  static const int M68K_INS_PLOADR = 304;
  static const int M68K_INS_PLOADW = 305;
  static const int M68K_INS_PLPAR = 306;
  static const int M68K_INS_PLPAW = 307;
  static const int M68K_INS_PMOVE = 308;
  static const int M68K_INS_PMOVEFD = 309;
  static const int M68K_INS_PTESTR = 310;
  static const int M68K_INS_PTESTW = 311;
  static const int M68K_INS_PULSE = 312;
  static const int M68K_INS_REMS = 313;
  static const int M68K_INS_REMU = 314;
  static const int M68K_INS_RESET = 315;
  static const int M68K_INS_ROL = 316;
  static const int M68K_INS_ROR = 317;
  static const int M68K_INS_ROXL = 318;
  static const int M68K_INS_ROXR = 319;
  static const int M68K_INS_RTD = 320;
  static const int M68K_INS_RTE = 321;
  static const int M68K_INS_RTM = 322;
  static const int M68K_INS_RTR = 323;
  static const int M68K_INS_RTS = 324;
  static const int M68K_INS_SBCD = 325;
  static const int M68K_INS_ST = 326;
  static const int M68K_INS_SF = 327;
  static const int M68K_INS_SHI = 328;
  static const int M68K_INS_SLS = 329;
  static const int M68K_INS_SCC = 330;
  static const int M68K_INS_SHS = 331;
  static const int M68K_INS_SCS = 332;
  static const int M68K_INS_SLO = 333;
  static const int M68K_INS_SNE = 334;
  static const int M68K_INS_SEQ = 335;
  static const int M68K_INS_SVC = 336;
  static const int M68K_INS_SVS = 337;
  static const int M68K_INS_SPL = 338;
  static const int M68K_INS_SMI = 339;
  static const int M68K_INS_SGE = 340;
  static const int M68K_INS_SLT = 341;
  static const int M68K_INS_SGT = 342;
  static const int M68K_INS_SLE = 343;
  static const int M68K_INS_STOP = 344;
  static const int M68K_INS_SUB = 345;
  static const int M68K_INS_SUBA = 346;
  static const int M68K_INS_SUBI = 347;
  static const int M68K_INS_SUBQ = 348;
  static const int M68K_INS_SUBX = 349;
  static const int M68K_INS_SWAP = 350;
  static const int M68K_INS_TAS = 351;
  static const int M68K_INS_TRAP = 352;
  static const int M68K_INS_TRAPV = 353;
  static const int M68K_INS_TRAPT = 354;
  static const int M68K_INS_TRAPF = 355;
  static const int M68K_INS_TRAPHI = 356;
  static const int M68K_INS_TRAPLS = 357;
  static const int M68K_INS_TRAPCC = 358;
  static const int M68K_INS_TRAPHS = 359;
  static const int M68K_INS_TRAPCS = 360;
  static const int M68K_INS_TRAPLO = 361;
  static const int M68K_INS_TRAPNE = 362;
  static const int M68K_INS_TRAPEQ = 363;
  static const int M68K_INS_TRAPVC = 364;
  static const int M68K_INS_TRAPVS = 365;
  static const int M68K_INS_TRAPPL = 366;
  static const int M68K_INS_TRAPMI = 367;
  static const int M68K_INS_TRAPGE = 368;
  static const int M68K_INS_TRAPLT = 369;
  static const int M68K_INS_TRAPGT = 370;
  static const int M68K_INS_TRAPLE = 371;
  static const int M68K_INS_TST = 372;
  static const int M68K_INS_UNLK = 373;
  static const int M68K_INS_UNPK = 374;
  static const int M68K_INS_ENDING = 375;
}

/// Group of M68K instructions
abstract class m68k_group_type {
  /// < CS_GRUP_INVALID
  static const int M68K_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int M68K_GRP_JUMP = 1;

  /// < = CS_GRP_RET
  static const int M68K_GRP_RET = 3;

  /// < = CS_GRP_IRET
  static const int M68K_GRP_IRET = 5;

  /// < = CS_GRP_BRANCH_RELATIVE
  static const int M68K_GRP_BRANCH_RELATIVE = 7;
  static const int M68K_GRP_ENDING = 8;
}

/// Operand type for instruction's operands
abstract class mips_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int MIPS_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int MIPS_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int MIPS_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int MIPS_OP_MEM = 3;
}

/// MIPS registers
abstract class mips_reg {
  static const int MIPS_REG_INVALID = 0;
  static const int MIPS_REG_PC = 1;
  static const int MIPS_REG_0 = 2;
  static const int MIPS_REG_1 = 3;
  static const int MIPS_REG_2 = 4;
  static const int MIPS_REG_3 = 5;
  static const int MIPS_REG_4 = 6;
  static const int MIPS_REG_5 = 7;
  static const int MIPS_REG_6 = 8;
  static const int MIPS_REG_7 = 9;
  static const int MIPS_REG_8 = 10;
  static const int MIPS_REG_9 = 11;
  static const int MIPS_REG_10 = 12;
  static const int MIPS_REG_11 = 13;
  static const int MIPS_REG_12 = 14;
  static const int MIPS_REG_13 = 15;
  static const int MIPS_REG_14 = 16;
  static const int MIPS_REG_15 = 17;
  static const int MIPS_REG_16 = 18;
  static const int MIPS_REG_17 = 19;
  static const int MIPS_REG_18 = 20;
  static const int MIPS_REG_19 = 21;
  static const int MIPS_REG_20 = 22;
  static const int MIPS_REG_21 = 23;
  static const int MIPS_REG_22 = 24;
  static const int MIPS_REG_23 = 25;
  static const int MIPS_REG_24 = 26;
  static const int MIPS_REG_25 = 27;
  static const int MIPS_REG_26 = 28;
  static const int MIPS_REG_27 = 29;
  static const int MIPS_REG_28 = 30;
  static const int MIPS_REG_29 = 31;
  static const int MIPS_REG_30 = 32;
  static const int MIPS_REG_31 = 33;
  static const int MIPS_REG_DSPCCOND = 34;
  static const int MIPS_REG_DSPCARRY = 35;
  static const int MIPS_REG_DSPEFI = 36;
  static const int MIPS_REG_DSPOUTFLAG = 37;
  static const int MIPS_REG_DSPOUTFLAG16_19 = 38;
  static const int MIPS_REG_DSPOUTFLAG20 = 39;
  static const int MIPS_REG_DSPOUTFLAG21 = 40;
  static const int MIPS_REG_DSPOUTFLAG22 = 41;
  static const int MIPS_REG_DSPOUTFLAG23 = 42;
  static const int MIPS_REG_DSPPOS = 43;
  static const int MIPS_REG_DSPSCOUNT = 44;
  static const int MIPS_REG_AC0 = 45;
  static const int MIPS_REG_AC1 = 46;
  static const int MIPS_REG_AC2 = 47;
  static const int MIPS_REG_AC3 = 48;
  static const int MIPS_REG_CC0 = 49;
  static const int MIPS_REG_CC1 = 50;
  static const int MIPS_REG_CC2 = 51;
  static const int MIPS_REG_CC3 = 52;
  static const int MIPS_REG_CC4 = 53;
  static const int MIPS_REG_CC5 = 54;
  static const int MIPS_REG_CC6 = 55;
  static const int MIPS_REG_CC7 = 56;
  static const int MIPS_REG_F0 = 57;
  static const int MIPS_REG_F1 = 58;
  static const int MIPS_REG_F2 = 59;
  static const int MIPS_REG_F3 = 60;
  static const int MIPS_REG_F4 = 61;
  static const int MIPS_REG_F5 = 62;
  static const int MIPS_REG_F6 = 63;
  static const int MIPS_REG_F7 = 64;
  static const int MIPS_REG_F8 = 65;
  static const int MIPS_REG_F9 = 66;
  static const int MIPS_REG_F10 = 67;
  static const int MIPS_REG_F11 = 68;
  static const int MIPS_REG_F12 = 69;
  static const int MIPS_REG_F13 = 70;
  static const int MIPS_REG_F14 = 71;
  static const int MIPS_REG_F15 = 72;
  static const int MIPS_REG_F16 = 73;
  static const int MIPS_REG_F17 = 74;
  static const int MIPS_REG_F18 = 75;
  static const int MIPS_REG_F19 = 76;
  static const int MIPS_REG_F20 = 77;
  static const int MIPS_REG_F21 = 78;
  static const int MIPS_REG_F22 = 79;
  static const int MIPS_REG_F23 = 80;
  static const int MIPS_REG_F24 = 81;
  static const int MIPS_REG_F25 = 82;
  static const int MIPS_REG_F26 = 83;
  static const int MIPS_REG_F27 = 84;
  static const int MIPS_REG_F28 = 85;
  static const int MIPS_REG_F29 = 86;
  static const int MIPS_REG_F30 = 87;
  static const int MIPS_REG_F31 = 88;
  static const int MIPS_REG_FCC0 = 89;
  static const int MIPS_REG_FCC1 = 90;
  static const int MIPS_REG_FCC2 = 91;
  static const int MIPS_REG_FCC3 = 92;
  static const int MIPS_REG_FCC4 = 93;
  static const int MIPS_REG_FCC5 = 94;
  static const int MIPS_REG_FCC6 = 95;
  static const int MIPS_REG_FCC7 = 96;
  static const int MIPS_REG_W0 = 97;
  static const int MIPS_REG_W1 = 98;
  static const int MIPS_REG_W2 = 99;
  static const int MIPS_REG_W3 = 100;
  static const int MIPS_REG_W4 = 101;
  static const int MIPS_REG_W5 = 102;
  static const int MIPS_REG_W6 = 103;
  static const int MIPS_REG_W7 = 104;
  static const int MIPS_REG_W8 = 105;
  static const int MIPS_REG_W9 = 106;
  static const int MIPS_REG_W10 = 107;
  static const int MIPS_REG_W11 = 108;
  static const int MIPS_REG_W12 = 109;
  static const int MIPS_REG_W13 = 110;
  static const int MIPS_REG_W14 = 111;
  static const int MIPS_REG_W15 = 112;
  static const int MIPS_REG_W16 = 113;
  static const int MIPS_REG_W17 = 114;
  static const int MIPS_REG_W18 = 115;
  static const int MIPS_REG_W19 = 116;
  static const int MIPS_REG_W20 = 117;
  static const int MIPS_REG_W21 = 118;
  static const int MIPS_REG_W22 = 119;
  static const int MIPS_REG_W23 = 120;
  static const int MIPS_REG_W24 = 121;
  static const int MIPS_REG_W25 = 122;
  static const int MIPS_REG_W26 = 123;
  static const int MIPS_REG_W27 = 124;
  static const int MIPS_REG_W28 = 125;
  static const int MIPS_REG_W29 = 126;
  static const int MIPS_REG_W30 = 127;
  static const int MIPS_REG_W31 = 128;
  static const int MIPS_REG_HI = 129;
  static const int MIPS_REG_LO = 130;
  static const int MIPS_REG_P0 = 131;
  static const int MIPS_REG_P1 = 132;
  static const int MIPS_REG_P2 = 133;
  static const int MIPS_REG_MPL0 = 134;
  static const int MIPS_REG_MPL1 = 135;
  static const int MIPS_REG_MPL2 = 136;
  static const int MIPS_REG_ENDING = 137;
  static const int MIPS_REG_ZERO = 2;
  static const int MIPS_REG_AT = 3;
  static const int MIPS_REG_V0 = 4;
  static const int MIPS_REG_V1 = 5;
  static const int MIPS_REG_A0 = 6;
  static const int MIPS_REG_A1 = 7;
  static const int MIPS_REG_A2 = 8;
  static const int MIPS_REG_A3 = 9;
  static const int MIPS_REG_T0 = 10;
  static const int MIPS_REG_T1 = 11;
  static const int MIPS_REG_T2 = 12;
  static const int MIPS_REG_T3 = 13;
  static const int MIPS_REG_T4 = 14;
  static const int MIPS_REG_T5 = 15;
  static const int MIPS_REG_T6 = 16;
  static const int MIPS_REG_T7 = 17;
  static const int MIPS_REG_S0 = 18;
  static const int MIPS_REG_S1 = 19;
  static const int MIPS_REG_S2 = 20;
  static const int MIPS_REG_S3 = 21;
  static const int MIPS_REG_S4 = 22;
  static const int MIPS_REG_S5 = 23;
  static const int MIPS_REG_S6 = 24;
  static const int MIPS_REG_S7 = 25;
  static const int MIPS_REG_T8 = 26;
  static const int MIPS_REG_T9 = 27;
  static const int MIPS_REG_K0 = 28;
  static const int MIPS_REG_K1 = 29;
  static const int MIPS_REG_GP = 30;
  static const int MIPS_REG_SP = 31;
  static const int MIPS_REG_FP = 32;
  static const int MIPS_REG_S8 = 32;
  static const int MIPS_REG_RA = 33;
  static const int MIPS_REG_HI0 = 45;
  static const int MIPS_REG_HI1 = 46;
  static const int MIPS_REG_HI2 = 47;
  static const int MIPS_REG_HI3 = 48;
  static const int MIPS_REG_LO0 = 45;
  static const int MIPS_REG_LO1 = 46;
  static const int MIPS_REG_LO2 = 47;
  static const int MIPS_REG_LO3 = 48;
}

/// Instruction's operand referring to memory
/// This is associated with MIPS_OP_MEM operand type above
class mips_op_mem extends ffi.Struct {
  /// < base register
  @ffi.Int32()
  external int base;

  /// < displacement/offset value
  @ffi.Int64()
  external int disp;
}

/// Instruction operand
class cs_mips_op extends ffi.Struct {
  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion5 unnamed;
}

class UnnamedUnion5 extends ffi.Union {
  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < immediate value for IMM operand
  @ffi.Int64()
  external int imm;

  /// < base/index/scale/disp value for MEM operand
  external mips_op_mem mem;
}

/// Instruction structure
class cs_mips extends ffi.Struct {
  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([10])
  external ffi.Array<cs_mips_op> operands;
}

/// MIPS instruction
abstract class mips_insn {
  static const int MIPS_INS_INVALID = 0;
  static const int MIPS_INS_ABSQ_S = 1;
  static const int MIPS_INS_ADD = 2;
  static const int MIPS_INS_ADDIUPC = 3;
  static const int MIPS_INS_ADDIUR1SP = 4;
  static const int MIPS_INS_ADDIUR2 = 5;
  static const int MIPS_INS_ADDIUS5 = 6;
  static const int MIPS_INS_ADDIUSP = 7;
  static const int MIPS_INS_ADDQH = 8;
  static const int MIPS_INS_ADDQH_R = 9;
  static const int MIPS_INS_ADDQ = 10;
  static const int MIPS_INS_ADDQ_S = 11;
  static const int MIPS_INS_ADDSC = 12;
  static const int MIPS_INS_ADDS_A = 13;
  static const int MIPS_INS_ADDS_S = 14;
  static const int MIPS_INS_ADDS_U = 15;
  static const int MIPS_INS_ADDU16 = 16;
  static const int MIPS_INS_ADDUH = 17;
  static const int MIPS_INS_ADDUH_R = 18;
  static const int MIPS_INS_ADDU = 19;
  static const int MIPS_INS_ADDU_S = 20;
  static const int MIPS_INS_ADDVI = 21;
  static const int MIPS_INS_ADDV = 22;
  static const int MIPS_INS_ADDWC = 23;
  static const int MIPS_INS_ADD_A = 24;
  static const int MIPS_INS_ADDI = 25;
  static const int MIPS_INS_ADDIU = 26;
  static const int MIPS_INS_ALIGN = 27;
  static const int MIPS_INS_ALUIPC = 28;
  static const int MIPS_INS_AND = 29;
  static const int MIPS_INS_AND16 = 30;
  static const int MIPS_INS_ANDI16 = 31;
  static const int MIPS_INS_ANDI = 32;
  static const int MIPS_INS_APPEND = 33;
  static const int MIPS_INS_ASUB_S = 34;
  static const int MIPS_INS_ASUB_U = 35;
  static const int MIPS_INS_AUI = 36;
  static const int MIPS_INS_AUIPC = 37;
  static const int MIPS_INS_AVER_S = 38;
  static const int MIPS_INS_AVER_U = 39;
  static const int MIPS_INS_AVE_S = 40;
  static const int MIPS_INS_AVE_U = 41;
  static const int MIPS_INS_B16 = 42;
  static const int MIPS_INS_BADDU = 43;
  static const int MIPS_INS_BAL = 44;
  static const int MIPS_INS_BALC = 45;
  static const int MIPS_INS_BALIGN = 46;
  static const int MIPS_INS_BBIT0 = 47;
  static const int MIPS_INS_BBIT032 = 48;
  static const int MIPS_INS_BBIT1 = 49;
  static const int MIPS_INS_BBIT132 = 50;
  static const int MIPS_INS_BC = 51;
  static const int MIPS_INS_BC0F = 52;
  static const int MIPS_INS_BC0FL = 53;
  static const int MIPS_INS_BC0T = 54;
  static const int MIPS_INS_BC0TL = 55;
  static const int MIPS_INS_BC1EQZ = 56;
  static const int MIPS_INS_BC1F = 57;
  static const int MIPS_INS_BC1FL = 58;
  static const int MIPS_INS_BC1NEZ = 59;
  static const int MIPS_INS_BC1T = 60;
  static const int MIPS_INS_BC1TL = 61;
  static const int MIPS_INS_BC2EQZ = 62;
  static const int MIPS_INS_BC2F = 63;
  static const int MIPS_INS_BC2FL = 64;
  static const int MIPS_INS_BC2NEZ = 65;
  static const int MIPS_INS_BC2T = 66;
  static const int MIPS_INS_BC2TL = 67;
  static const int MIPS_INS_BC3F = 68;
  static const int MIPS_INS_BC3FL = 69;
  static const int MIPS_INS_BC3T = 70;
  static const int MIPS_INS_BC3TL = 71;
  static const int MIPS_INS_BCLRI = 72;
  static const int MIPS_INS_BCLR = 73;
  static const int MIPS_INS_BEQ = 74;
  static const int MIPS_INS_BEQC = 75;
  static const int MIPS_INS_BEQL = 76;
  static const int MIPS_INS_BEQZ16 = 77;
  static const int MIPS_INS_BEQZALC = 78;
  static const int MIPS_INS_BEQZC = 79;
  static const int MIPS_INS_BGEC = 80;
  static const int MIPS_INS_BGEUC = 81;
  static const int MIPS_INS_BGEZ = 82;
  static const int MIPS_INS_BGEZAL = 83;
  static const int MIPS_INS_BGEZALC = 84;
  static const int MIPS_INS_BGEZALL = 85;
  static const int MIPS_INS_BGEZALS = 86;
  static const int MIPS_INS_BGEZC = 87;
  static const int MIPS_INS_BGEZL = 88;
  static const int MIPS_INS_BGTZ = 89;
  static const int MIPS_INS_BGTZALC = 90;
  static const int MIPS_INS_BGTZC = 91;
  static const int MIPS_INS_BGTZL = 92;
  static const int MIPS_INS_BINSLI = 93;
  static const int MIPS_INS_BINSL = 94;
  static const int MIPS_INS_BINSRI = 95;
  static const int MIPS_INS_BINSR = 96;
  static const int MIPS_INS_BITREV = 97;
  static const int MIPS_INS_BITSWAP = 98;
  static const int MIPS_INS_BLEZ = 99;
  static const int MIPS_INS_BLEZALC = 100;
  static const int MIPS_INS_BLEZC = 101;
  static const int MIPS_INS_BLEZL = 102;
  static const int MIPS_INS_BLTC = 103;
  static const int MIPS_INS_BLTUC = 104;
  static const int MIPS_INS_BLTZ = 105;
  static const int MIPS_INS_BLTZAL = 106;
  static const int MIPS_INS_BLTZALC = 107;
  static const int MIPS_INS_BLTZALL = 108;
  static const int MIPS_INS_BLTZALS = 109;
  static const int MIPS_INS_BLTZC = 110;
  static const int MIPS_INS_BLTZL = 111;
  static const int MIPS_INS_BMNZI = 112;
  static const int MIPS_INS_BMNZ = 113;
  static const int MIPS_INS_BMZI = 114;
  static const int MIPS_INS_BMZ = 115;
  static const int MIPS_INS_BNE = 116;
  static const int MIPS_INS_BNEC = 117;
  static const int MIPS_INS_BNEGI = 118;
  static const int MIPS_INS_BNEG = 119;
  static const int MIPS_INS_BNEL = 120;
  static const int MIPS_INS_BNEZ16 = 121;
  static const int MIPS_INS_BNEZALC = 122;
  static const int MIPS_INS_BNEZC = 123;
  static const int MIPS_INS_BNVC = 124;
  static const int MIPS_INS_BNZ = 125;
  static const int MIPS_INS_BOVC = 126;
  static const int MIPS_INS_BPOSGE32 = 127;
  static const int MIPS_INS_BREAK = 128;
  static const int MIPS_INS_BREAK16 = 129;
  static const int MIPS_INS_BSELI = 130;
  static const int MIPS_INS_BSEL = 131;
  static const int MIPS_INS_BSETI = 132;
  static const int MIPS_INS_BSET = 133;
  static const int MIPS_INS_BZ = 134;
  static const int MIPS_INS_BEQZ = 135;
  static const int MIPS_INS_B = 136;
  static const int MIPS_INS_BNEZ = 137;
  static const int MIPS_INS_BTEQZ = 138;
  static const int MIPS_INS_BTNEZ = 139;
  static const int MIPS_INS_CACHE = 140;
  static const int MIPS_INS_CEIL = 141;
  static const int MIPS_INS_CEQI = 142;
  static const int MIPS_INS_CEQ = 143;
  static const int MIPS_INS_CFC1 = 144;
  static const int MIPS_INS_CFCMSA = 145;
  static const int MIPS_INS_CINS = 146;
  static const int MIPS_INS_CINS32 = 147;
  static const int MIPS_INS_CLASS = 148;
  static const int MIPS_INS_CLEI_S = 149;
  static const int MIPS_INS_CLEI_U = 150;
  static const int MIPS_INS_CLE_S = 151;
  static const int MIPS_INS_CLE_U = 152;
  static const int MIPS_INS_CLO = 153;
  static const int MIPS_INS_CLTI_S = 154;
  static const int MIPS_INS_CLTI_U = 155;
  static const int MIPS_INS_CLT_S = 156;
  static const int MIPS_INS_CLT_U = 157;
  static const int MIPS_INS_CLZ = 158;
  static const int MIPS_INS_CMPGDU = 159;
  static const int MIPS_INS_CMPGU = 160;
  static const int MIPS_INS_CMPU = 161;
  static const int MIPS_INS_CMP = 162;
  static const int MIPS_INS_COPY_S = 163;
  static const int MIPS_INS_COPY_U = 164;
  static const int MIPS_INS_CTC1 = 165;
  static const int MIPS_INS_CTCMSA = 166;
  static const int MIPS_INS_CVT = 167;
  static const int MIPS_INS_C = 168;
  static const int MIPS_INS_CMPI = 169;
  static const int MIPS_INS_DADD = 170;
  static const int MIPS_INS_DADDI = 171;
  static const int MIPS_INS_DADDIU = 172;
  static const int MIPS_INS_DADDU = 173;
  static const int MIPS_INS_DAHI = 174;
  static const int MIPS_INS_DALIGN = 175;
  static const int MIPS_INS_DATI = 176;
  static const int MIPS_INS_DAUI = 177;
  static const int MIPS_INS_DBITSWAP = 178;
  static const int MIPS_INS_DCLO = 179;
  static const int MIPS_INS_DCLZ = 180;
  static const int MIPS_INS_DDIV = 181;
  static const int MIPS_INS_DDIVU = 182;
  static const int MIPS_INS_DERET = 183;
  static const int MIPS_INS_DEXT = 184;
  static const int MIPS_INS_DEXTM = 185;
  static const int MIPS_INS_DEXTU = 186;
  static const int MIPS_INS_DI = 187;
  static const int MIPS_INS_DINS = 188;
  static const int MIPS_INS_DINSM = 189;
  static const int MIPS_INS_DINSU = 190;
  static const int MIPS_INS_DIV = 191;
  static const int MIPS_INS_DIVU = 192;
  static const int MIPS_INS_DIV_S = 193;
  static const int MIPS_INS_DIV_U = 194;
  static const int MIPS_INS_DLSA = 195;
  static const int MIPS_INS_DMFC0 = 196;
  static const int MIPS_INS_DMFC1 = 197;
  static const int MIPS_INS_DMFC2 = 198;
  static const int MIPS_INS_DMOD = 199;
  static const int MIPS_INS_DMODU = 200;
  static const int MIPS_INS_DMTC0 = 201;
  static const int MIPS_INS_DMTC1 = 202;
  static const int MIPS_INS_DMTC2 = 203;
  static const int MIPS_INS_DMUH = 204;
  static const int MIPS_INS_DMUHU = 205;
  static const int MIPS_INS_DMUL = 206;
  static const int MIPS_INS_DMULT = 207;
  static const int MIPS_INS_DMULTU = 208;
  static const int MIPS_INS_DMULU = 209;
  static const int MIPS_INS_DOTP_S = 210;
  static const int MIPS_INS_DOTP_U = 211;
  static const int MIPS_INS_DPADD_S = 212;
  static const int MIPS_INS_DPADD_U = 213;
  static const int MIPS_INS_DPAQX_SA = 214;
  static const int MIPS_INS_DPAQX_S = 215;
  static const int MIPS_INS_DPAQ_SA = 216;
  static const int MIPS_INS_DPAQ_S = 217;
  static const int MIPS_INS_DPAU = 218;
  static const int MIPS_INS_DPAX = 219;
  static const int MIPS_INS_DPA = 220;
  static const int MIPS_INS_DPOP = 221;
  static const int MIPS_INS_DPSQX_SA = 222;
  static const int MIPS_INS_DPSQX_S = 223;
  static const int MIPS_INS_DPSQ_SA = 224;
  static const int MIPS_INS_DPSQ_S = 225;
  static const int MIPS_INS_DPSUB_S = 226;
  static const int MIPS_INS_DPSUB_U = 227;
  static const int MIPS_INS_DPSU = 228;
  static const int MIPS_INS_DPSX = 229;
  static const int MIPS_INS_DPS = 230;
  static const int MIPS_INS_DROTR = 231;
  static const int MIPS_INS_DROTR32 = 232;
  static const int MIPS_INS_DROTRV = 233;
  static const int MIPS_INS_DSBH = 234;
  static const int MIPS_INS_DSHD = 235;
  static const int MIPS_INS_DSLL = 236;
  static const int MIPS_INS_DSLL32 = 237;
  static const int MIPS_INS_DSLLV = 238;
  static const int MIPS_INS_DSRA = 239;
  static const int MIPS_INS_DSRA32 = 240;
  static const int MIPS_INS_DSRAV = 241;
  static const int MIPS_INS_DSRL = 242;
  static const int MIPS_INS_DSRL32 = 243;
  static const int MIPS_INS_DSRLV = 244;
  static const int MIPS_INS_DSUB = 245;
  static const int MIPS_INS_DSUBU = 246;
  static const int MIPS_INS_EHB = 247;
  static const int MIPS_INS_EI = 248;
  static const int MIPS_INS_ERET = 249;
  static const int MIPS_INS_EXT = 250;
  static const int MIPS_INS_EXTP = 251;
  static const int MIPS_INS_EXTPDP = 252;
  static const int MIPS_INS_EXTPDPV = 253;
  static const int MIPS_INS_EXTPV = 254;
  static const int MIPS_INS_EXTRV_RS = 255;
  static const int MIPS_INS_EXTRV_R = 256;
  static const int MIPS_INS_EXTRV_S = 257;
  static const int MIPS_INS_EXTRV = 258;
  static const int MIPS_INS_EXTR_RS = 259;
  static const int MIPS_INS_EXTR_R = 260;
  static const int MIPS_INS_EXTR_S = 261;
  static const int MIPS_INS_EXTR = 262;
  static const int MIPS_INS_EXTS = 263;
  static const int MIPS_INS_EXTS32 = 264;
  static const int MIPS_INS_ABS = 265;
  static const int MIPS_INS_FADD = 266;
  static const int MIPS_INS_FCAF = 267;
  static const int MIPS_INS_FCEQ = 268;
  static const int MIPS_INS_FCLASS = 269;
  static const int MIPS_INS_FCLE = 270;
  static const int MIPS_INS_FCLT = 271;
  static const int MIPS_INS_FCNE = 272;
  static const int MIPS_INS_FCOR = 273;
  static const int MIPS_INS_FCUEQ = 274;
  static const int MIPS_INS_FCULE = 275;
  static const int MIPS_INS_FCULT = 276;
  static const int MIPS_INS_FCUNE = 277;
  static const int MIPS_INS_FCUN = 278;
  static const int MIPS_INS_FDIV = 279;
  static const int MIPS_INS_FEXDO = 280;
  static const int MIPS_INS_FEXP2 = 281;
  static const int MIPS_INS_FEXUPL = 282;
  static const int MIPS_INS_FEXUPR = 283;
  static const int MIPS_INS_FFINT_S = 284;
  static const int MIPS_INS_FFINT_U = 285;
  static const int MIPS_INS_FFQL = 286;
  static const int MIPS_INS_FFQR = 287;
  static const int MIPS_INS_FILL = 288;
  static const int MIPS_INS_FLOG2 = 289;
  static const int MIPS_INS_FLOOR = 290;
  static const int MIPS_INS_FMADD = 291;
  static const int MIPS_INS_FMAX_A = 292;
  static const int MIPS_INS_FMAX = 293;
  static const int MIPS_INS_FMIN_A = 294;
  static const int MIPS_INS_FMIN = 295;
  static const int MIPS_INS_MOV = 296;
  static const int MIPS_INS_FMSUB = 297;
  static const int MIPS_INS_FMUL = 298;
  static const int MIPS_INS_MUL = 299;
  static const int MIPS_INS_NEG = 300;
  static const int MIPS_INS_FRCP = 301;
  static const int MIPS_INS_FRINT = 302;
  static const int MIPS_INS_FRSQRT = 303;
  static const int MIPS_INS_FSAF = 304;
  static const int MIPS_INS_FSEQ = 305;
  static const int MIPS_INS_FSLE = 306;
  static const int MIPS_INS_FSLT = 307;
  static const int MIPS_INS_FSNE = 308;
  static const int MIPS_INS_FSOR = 309;
  static const int MIPS_INS_FSQRT = 310;
  static const int MIPS_INS_SQRT = 311;
  static const int MIPS_INS_FSUB = 312;
  static const int MIPS_INS_SUB = 313;
  static const int MIPS_INS_FSUEQ = 314;
  static const int MIPS_INS_FSULE = 315;
  static const int MIPS_INS_FSULT = 316;
  static const int MIPS_INS_FSUNE = 317;
  static const int MIPS_INS_FSUN = 318;
  static const int MIPS_INS_FTINT_S = 319;
  static const int MIPS_INS_FTINT_U = 320;
  static const int MIPS_INS_FTQ = 321;
  static const int MIPS_INS_FTRUNC_S = 322;
  static const int MIPS_INS_FTRUNC_U = 323;
  static const int MIPS_INS_HADD_S = 324;
  static const int MIPS_INS_HADD_U = 325;
  static const int MIPS_INS_HSUB_S = 326;
  static const int MIPS_INS_HSUB_U = 327;
  static const int MIPS_INS_ILVEV = 328;
  static const int MIPS_INS_ILVL = 329;
  static const int MIPS_INS_ILVOD = 330;
  static const int MIPS_INS_ILVR = 331;
  static const int MIPS_INS_INS = 332;
  static const int MIPS_INS_INSERT = 333;
  static const int MIPS_INS_INSV = 334;
  static const int MIPS_INS_INSVE = 335;
  static const int MIPS_INS_J = 336;
  static const int MIPS_INS_JAL = 337;
  static const int MIPS_INS_JALR = 338;
  static const int MIPS_INS_JALRS16 = 339;
  static const int MIPS_INS_JALRS = 340;
  static const int MIPS_INS_JALS = 341;
  static const int MIPS_INS_JALX = 342;
  static const int MIPS_INS_JIALC = 343;
  static const int MIPS_INS_JIC = 344;
  static const int MIPS_INS_JR = 345;
  static const int MIPS_INS_JR16 = 346;
  static const int MIPS_INS_JRADDIUSP = 347;
  static const int MIPS_INS_JRC = 348;
  static const int MIPS_INS_JALRC = 349;
  static const int MIPS_INS_LB = 350;
  static const int MIPS_INS_LBU16 = 351;
  static const int MIPS_INS_LBUX = 352;
  static const int MIPS_INS_LBU = 353;
  static const int MIPS_INS_LD = 354;
  static const int MIPS_INS_LDC1 = 355;
  static const int MIPS_INS_LDC2 = 356;
  static const int MIPS_INS_LDC3 = 357;
  static const int MIPS_INS_LDI = 358;
  static const int MIPS_INS_LDL = 359;
  static const int MIPS_INS_LDPC = 360;
  static const int MIPS_INS_LDR = 361;
  static const int MIPS_INS_LDXC1 = 362;
  static const int MIPS_INS_LH = 363;
  static const int MIPS_INS_LHU16 = 364;
  static const int MIPS_INS_LHX = 365;
  static const int MIPS_INS_LHU = 366;
  static const int MIPS_INS_LI16 = 367;
  static const int MIPS_INS_LL = 368;
  static const int MIPS_INS_LLD = 369;
  static const int MIPS_INS_LSA = 370;
  static const int MIPS_INS_LUXC1 = 371;
  static const int MIPS_INS_LUI = 372;
  static const int MIPS_INS_LW = 373;
  static const int MIPS_INS_LW16 = 374;
  static const int MIPS_INS_LWC1 = 375;
  static const int MIPS_INS_LWC2 = 376;
  static const int MIPS_INS_LWC3 = 377;
  static const int MIPS_INS_LWL = 378;
  static const int MIPS_INS_LWM16 = 379;
  static const int MIPS_INS_LWM32 = 380;
  static const int MIPS_INS_LWPC = 381;
  static const int MIPS_INS_LWP = 382;
  static const int MIPS_INS_LWR = 383;
  static const int MIPS_INS_LWUPC = 384;
  static const int MIPS_INS_LWU = 385;
  static const int MIPS_INS_LWX = 386;
  static const int MIPS_INS_LWXC1 = 387;
  static const int MIPS_INS_LWXS = 388;
  static const int MIPS_INS_LI = 389;
  static const int MIPS_INS_MADD = 390;
  static const int MIPS_INS_MADDF = 391;
  static const int MIPS_INS_MADDR_Q = 392;
  static const int MIPS_INS_MADDU = 393;
  static const int MIPS_INS_MADDV = 394;
  static const int MIPS_INS_MADD_Q = 395;
  static const int MIPS_INS_MAQ_SA = 396;
  static const int MIPS_INS_MAQ_S = 397;
  static const int MIPS_INS_MAXA = 398;
  static const int MIPS_INS_MAXI_S = 399;
  static const int MIPS_INS_MAXI_U = 400;
  static const int MIPS_INS_MAX_A = 401;
  static const int MIPS_INS_MAX = 402;
  static const int MIPS_INS_MAX_S = 403;
  static const int MIPS_INS_MAX_U = 404;
  static const int MIPS_INS_MFC0 = 405;
  static const int MIPS_INS_MFC1 = 406;
  static const int MIPS_INS_MFC2 = 407;
  static const int MIPS_INS_MFHC1 = 408;
  static const int MIPS_INS_MFHI = 409;
  static const int MIPS_INS_MFLO = 410;
  static const int MIPS_INS_MINA = 411;
  static const int MIPS_INS_MINI_S = 412;
  static const int MIPS_INS_MINI_U = 413;
  static const int MIPS_INS_MIN_A = 414;
  static const int MIPS_INS_MIN = 415;
  static const int MIPS_INS_MIN_S = 416;
  static const int MIPS_INS_MIN_U = 417;
  static const int MIPS_INS_MOD = 418;
  static const int MIPS_INS_MODSUB = 419;
  static const int MIPS_INS_MODU = 420;
  static const int MIPS_INS_MOD_S = 421;
  static const int MIPS_INS_MOD_U = 422;
  static const int MIPS_INS_MOVE = 423;
  static const int MIPS_INS_MOVEP = 424;
  static const int MIPS_INS_MOVF = 425;
  static const int MIPS_INS_MOVN = 426;
  static const int MIPS_INS_MOVT = 427;
  static const int MIPS_INS_MOVZ = 428;
  static const int MIPS_INS_MSUB = 429;
  static const int MIPS_INS_MSUBF = 430;
  static const int MIPS_INS_MSUBR_Q = 431;
  static const int MIPS_INS_MSUBU = 432;
  static const int MIPS_INS_MSUBV = 433;
  static const int MIPS_INS_MSUB_Q = 434;
  static const int MIPS_INS_MTC0 = 435;
  static const int MIPS_INS_MTC1 = 436;
  static const int MIPS_INS_MTC2 = 437;
  static const int MIPS_INS_MTHC1 = 438;
  static const int MIPS_INS_MTHI = 439;
  static const int MIPS_INS_MTHLIP = 440;
  static const int MIPS_INS_MTLO = 441;
  static const int MIPS_INS_MTM0 = 442;
  static const int MIPS_INS_MTM1 = 443;
  static const int MIPS_INS_MTM2 = 444;
  static const int MIPS_INS_MTP0 = 445;
  static const int MIPS_INS_MTP1 = 446;
  static const int MIPS_INS_MTP2 = 447;
  static const int MIPS_INS_MUH = 448;
  static const int MIPS_INS_MUHU = 449;
  static const int MIPS_INS_MULEQ_S = 450;
  static const int MIPS_INS_MULEU_S = 451;
  static const int MIPS_INS_MULQ_RS = 452;
  static const int MIPS_INS_MULQ_S = 453;
  static const int MIPS_INS_MULR_Q = 454;
  static const int MIPS_INS_MULSAQ_S = 455;
  static const int MIPS_INS_MULSA = 456;
  static const int MIPS_INS_MULT = 457;
  static const int MIPS_INS_MULTU = 458;
  static const int MIPS_INS_MULU = 459;
  static const int MIPS_INS_MULV = 460;
  static const int MIPS_INS_MUL_Q = 461;
  static const int MIPS_INS_MUL_S = 462;
  static const int MIPS_INS_NLOC = 463;
  static const int MIPS_INS_NLZC = 464;
  static const int MIPS_INS_NMADD = 465;
  static const int MIPS_INS_NMSUB = 466;
  static const int MIPS_INS_NOR = 467;
  static const int MIPS_INS_NORI = 468;
  static const int MIPS_INS_NOT16 = 469;
  static const int MIPS_INS_NOT = 470;
  static const int MIPS_INS_OR = 471;
  static const int MIPS_INS_OR16 = 472;
  static const int MIPS_INS_ORI = 473;
  static const int MIPS_INS_PACKRL = 474;
  static const int MIPS_INS_PAUSE = 475;
  static const int MIPS_INS_PCKEV = 476;
  static const int MIPS_INS_PCKOD = 477;
  static const int MIPS_INS_PCNT = 478;
  static const int MIPS_INS_PICK = 479;
  static const int MIPS_INS_POP = 480;
  static const int MIPS_INS_PRECEQU = 481;
  static const int MIPS_INS_PRECEQ = 482;
  static const int MIPS_INS_PRECEU = 483;
  static const int MIPS_INS_PRECRQU_S = 484;
  static const int MIPS_INS_PRECRQ = 485;
  static const int MIPS_INS_PRECRQ_RS = 486;
  static const int MIPS_INS_PRECR = 487;
  static const int MIPS_INS_PRECR_SRA = 488;
  static const int MIPS_INS_PRECR_SRA_R = 489;
  static const int MIPS_INS_PREF = 490;
  static const int MIPS_INS_PREPEND = 491;
  static const int MIPS_INS_RADDU = 492;
  static const int MIPS_INS_RDDSP = 493;
  static const int MIPS_INS_RDHWR = 494;
  static const int MIPS_INS_REPLV = 495;
  static const int MIPS_INS_REPL = 496;
  static const int MIPS_INS_RINT = 497;
  static const int MIPS_INS_ROTR = 498;
  static const int MIPS_INS_ROTRV = 499;
  static const int MIPS_INS_ROUND = 500;
  static const int MIPS_INS_SAT_S = 501;
  static const int MIPS_INS_SAT_U = 502;
  static const int MIPS_INS_SB = 503;
  static const int MIPS_INS_SB16 = 504;
  static const int MIPS_INS_SC = 505;
  static const int MIPS_INS_SCD = 506;
  static const int MIPS_INS_SD = 507;
  static const int MIPS_INS_SDBBP = 508;
  static const int MIPS_INS_SDBBP16 = 509;
  static const int MIPS_INS_SDC1 = 510;
  static const int MIPS_INS_SDC2 = 511;
  static const int MIPS_INS_SDC3 = 512;
  static const int MIPS_INS_SDL = 513;
  static const int MIPS_INS_SDR = 514;
  static const int MIPS_INS_SDXC1 = 515;
  static const int MIPS_INS_SEB = 516;
  static const int MIPS_INS_SEH = 517;
  static const int MIPS_INS_SELEQZ = 518;
  static const int MIPS_INS_SELNEZ = 519;
  static const int MIPS_INS_SEL = 520;
  static const int MIPS_INS_SEQ = 521;
  static const int MIPS_INS_SEQI = 522;
  static const int MIPS_INS_SH = 523;
  static const int MIPS_INS_SH16 = 524;
  static const int MIPS_INS_SHF = 525;
  static const int MIPS_INS_SHILO = 526;
  static const int MIPS_INS_SHILOV = 527;
  static const int MIPS_INS_SHLLV = 528;
  static const int MIPS_INS_SHLLV_S = 529;
  static const int MIPS_INS_SHLL = 530;
  static const int MIPS_INS_SHLL_S = 531;
  static const int MIPS_INS_SHRAV = 532;
  static const int MIPS_INS_SHRAV_R = 533;
  static const int MIPS_INS_SHRA = 534;
  static const int MIPS_INS_SHRA_R = 535;
  static const int MIPS_INS_SHRLV = 536;
  static const int MIPS_INS_SHRL = 537;
  static const int MIPS_INS_SLDI = 538;
  static const int MIPS_INS_SLD = 539;
  static const int MIPS_INS_SLL = 540;
  static const int MIPS_INS_SLL16 = 541;
  static const int MIPS_INS_SLLI = 542;
  static const int MIPS_INS_SLLV = 543;
  static const int MIPS_INS_SLT = 544;
  static const int MIPS_INS_SLTI = 545;
  static const int MIPS_INS_SLTIU = 546;
  static const int MIPS_INS_SLTU = 547;
  static const int MIPS_INS_SNE = 548;
  static const int MIPS_INS_SNEI = 549;
  static const int MIPS_INS_SPLATI = 550;
  static const int MIPS_INS_SPLAT = 551;
  static const int MIPS_INS_SRA = 552;
  static const int MIPS_INS_SRAI = 553;
  static const int MIPS_INS_SRARI = 554;
  static const int MIPS_INS_SRAR = 555;
  static const int MIPS_INS_SRAV = 556;
  static const int MIPS_INS_SRL = 557;
  static const int MIPS_INS_SRL16 = 558;
  static const int MIPS_INS_SRLI = 559;
  static const int MIPS_INS_SRLRI = 560;
  static const int MIPS_INS_SRLR = 561;
  static const int MIPS_INS_SRLV = 562;
  static const int MIPS_INS_SSNOP = 563;
  static const int MIPS_INS_ST = 564;
  static const int MIPS_INS_SUBQH = 565;
  static const int MIPS_INS_SUBQH_R = 566;
  static const int MIPS_INS_SUBQ = 567;
  static const int MIPS_INS_SUBQ_S = 568;
  static const int MIPS_INS_SUBSUS_U = 569;
  static const int MIPS_INS_SUBSUU_S = 570;
  static const int MIPS_INS_SUBS_S = 571;
  static const int MIPS_INS_SUBS_U = 572;
  static const int MIPS_INS_SUBU16 = 573;
  static const int MIPS_INS_SUBUH = 574;
  static const int MIPS_INS_SUBUH_R = 575;
  static const int MIPS_INS_SUBU = 576;
  static const int MIPS_INS_SUBU_S = 577;
  static const int MIPS_INS_SUBVI = 578;
  static const int MIPS_INS_SUBV = 579;
  static const int MIPS_INS_SUXC1 = 580;
  static const int MIPS_INS_SW = 581;
  static const int MIPS_INS_SW16 = 582;
  static const int MIPS_INS_SWC1 = 583;
  static const int MIPS_INS_SWC2 = 584;
  static const int MIPS_INS_SWC3 = 585;
  static const int MIPS_INS_SWL = 586;
  static const int MIPS_INS_SWM16 = 587;
  static const int MIPS_INS_SWM32 = 588;
  static const int MIPS_INS_SWP = 589;
  static const int MIPS_INS_SWR = 590;
  static const int MIPS_INS_SWXC1 = 591;
  static const int MIPS_INS_SYNC = 592;
  static const int MIPS_INS_SYNCI = 593;
  static const int MIPS_INS_SYSCALL = 594;
  static const int MIPS_INS_TEQ = 595;
  static const int MIPS_INS_TEQI = 596;
  static const int MIPS_INS_TGE = 597;
  static const int MIPS_INS_TGEI = 598;
  static const int MIPS_INS_TGEIU = 599;
  static const int MIPS_INS_TGEU = 600;
  static const int MIPS_INS_TLBP = 601;
  static const int MIPS_INS_TLBR = 602;
  static const int MIPS_INS_TLBWI = 603;
  static const int MIPS_INS_TLBWR = 604;
  static const int MIPS_INS_TLT = 605;
  static const int MIPS_INS_TLTI = 606;
  static const int MIPS_INS_TLTIU = 607;
  static const int MIPS_INS_TLTU = 608;
  static const int MIPS_INS_TNE = 609;
  static const int MIPS_INS_TNEI = 610;
  static const int MIPS_INS_TRUNC = 611;
  static const int MIPS_INS_V3MULU = 612;
  static const int MIPS_INS_VMM0 = 613;
  static const int MIPS_INS_VMULU = 614;
  static const int MIPS_INS_VSHF = 615;
  static const int MIPS_INS_WAIT = 616;
  static const int MIPS_INS_WRDSP = 617;
  static const int MIPS_INS_WSBH = 618;
  static const int MIPS_INS_XOR = 619;
  static const int MIPS_INS_XOR16 = 620;
  static const int MIPS_INS_XORI = 621;
  static const int MIPS_INS_NOP = 622;
  static const int MIPS_INS_NEGU = 623;
  static const int MIPS_INS_JALR_HB = 624;
  static const int MIPS_INS_JR_HB = 625;
  static const int MIPS_INS_ENDING = 626;
}

/// Group of MIPS instructions
abstract class mips_insn_group {
  /// < = CS_GRP_INVALID
  static const int MIPS_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int MIPS_GRP_JUMP = 1;

  /// < = CS_GRP_CALL
  static const int MIPS_GRP_CALL = 2;

  /// < = CS_GRP_RET
  static const int MIPS_GRP_RET = 3;

  /// < = CS_GRP_INT
  static const int MIPS_GRP_INT = 4;

  /// < = CS_GRP_IRET
  static const int MIPS_GRP_IRET = 5;

  /// < = CS_GRP_PRIVILEGE
  static const int MIPS_GRP_PRIVILEGE = 6;

  /// < = CS_GRP_BRANCH_RELATIVE
  static const int MIPS_GRP_BRANCH_RELATIVE = 7;
  static const int MIPS_GRP_BITCOUNT = 128;
  static const int MIPS_GRP_DSP = 129;
  static const int MIPS_GRP_DSPR2 = 130;
  static const int MIPS_GRP_FPIDX = 131;
  static const int MIPS_GRP_MSA = 132;
  static const int MIPS_GRP_MIPS32R2 = 133;
  static const int MIPS_GRP_MIPS64 = 134;
  static const int MIPS_GRP_MIPS64R2 = 135;
  static const int MIPS_GRP_SEINREG = 136;
  static const int MIPS_GRP_STDENC = 137;
  static const int MIPS_GRP_SWAP = 138;
  static const int MIPS_GRP_MICROMIPS = 139;
  static const int MIPS_GRP_MIPS16MODE = 140;
  static const int MIPS_GRP_FP64BIT = 141;
  static const int MIPS_GRP_NONANSFPMATH = 142;
  static const int MIPS_GRP_NOTFP64BIT = 143;
  static const int MIPS_GRP_NOTINMICROMIPS = 144;
  static const int MIPS_GRP_NOTNACL = 145;
  static const int MIPS_GRP_NOTMIPS32R6 = 146;
  static const int MIPS_GRP_NOTMIPS64R6 = 147;
  static const int MIPS_GRP_CNMIPS = 148;
  static const int MIPS_GRP_MIPS32 = 149;
  static const int MIPS_GRP_MIPS32R6 = 150;
  static const int MIPS_GRP_MIPS64R6 = 151;
  static const int MIPS_GRP_MIPS2 = 152;
  static const int MIPS_GRP_MIPS3 = 153;
  static const int MIPS_GRP_MIPS3_32 = 154;
  static const int MIPS_GRP_MIPS3_32R2 = 155;
  static const int MIPS_GRP_MIPS4_32 = 156;
  static const int MIPS_GRP_MIPS4_32R2 = 157;
  static const int MIPS_GRP_MIPS5_32R2 = 158;
  static const int MIPS_GRP_GP32BIT = 159;
  static const int MIPS_GRP_GP64BIT = 160;
  static const int MIPS_GRP_ENDING = 161;
}

/// PPC branch codes for some branch instructions
abstract class ppc_bc {
  static const int PPC_BC_INVALID = 0;
  static const int PPC_BC_LT = 12;
  static const int PPC_BC_LE = 36;
  static const int PPC_BC_EQ = 76;
  static const int PPC_BC_GE = 4;
  static const int PPC_BC_GT = 44;
  static const int PPC_BC_NE = 68;
  static const int PPC_BC_UN = 108;
  static const int PPC_BC_NU = 100;

  /// < summary overflow
  static const int PPC_BC_SO = 140;

  /// < not summary overflow
  static const int PPC_BC_NS = 132;
}

/// PPC branch hint for some branch instructions
abstract class ppc_bh {
  /// < no hint
  static const int PPC_BH_INVALID = 0;

  /// < PLUS hint
  static const int PPC_BH_PLUS = 1;

  /// < MINUS hint
  static const int PPC_BH_MINUS = 2;
}

/// Operand type for instruction's operands
abstract class ppc_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int PPC_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int PPC_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int PPC_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int PPC_OP_MEM = 3;

  /// < Condition Register field
  static const int PPC_OP_CRX = 64;
}

/// PPC registers
abstract class ppc_reg {
  static const int PPC_REG_INVALID = 0;
  static const int PPC_REG_CARRY = 1;
  static const int PPC_REG_CR0 = 2;
  static const int PPC_REG_CR1 = 3;
  static const int PPC_REG_CR2 = 4;
  static const int PPC_REG_CR3 = 5;
  static const int PPC_REG_CR4 = 6;
  static const int PPC_REG_CR5 = 7;
  static const int PPC_REG_CR6 = 8;
  static const int PPC_REG_CR7 = 9;
  static const int PPC_REG_CTR = 10;
  static const int PPC_REG_F0 = 11;
  static const int PPC_REG_F1 = 12;
  static const int PPC_REG_F2 = 13;
  static const int PPC_REG_F3 = 14;
  static const int PPC_REG_F4 = 15;
  static const int PPC_REG_F5 = 16;
  static const int PPC_REG_F6 = 17;
  static const int PPC_REG_F7 = 18;
  static const int PPC_REG_F8 = 19;
  static const int PPC_REG_F9 = 20;
  static const int PPC_REG_F10 = 21;
  static const int PPC_REG_F11 = 22;
  static const int PPC_REG_F12 = 23;
  static const int PPC_REG_F13 = 24;
  static const int PPC_REG_F14 = 25;
  static const int PPC_REG_F15 = 26;
  static const int PPC_REG_F16 = 27;
  static const int PPC_REG_F17 = 28;
  static const int PPC_REG_F18 = 29;
  static const int PPC_REG_F19 = 30;
  static const int PPC_REG_F20 = 31;
  static const int PPC_REG_F21 = 32;
  static const int PPC_REG_F22 = 33;
  static const int PPC_REG_F23 = 34;
  static const int PPC_REG_F24 = 35;
  static const int PPC_REG_F25 = 36;
  static const int PPC_REG_F26 = 37;
  static const int PPC_REG_F27 = 38;
  static const int PPC_REG_F28 = 39;
  static const int PPC_REG_F29 = 40;
  static const int PPC_REG_F30 = 41;
  static const int PPC_REG_F31 = 42;
  static const int PPC_REG_LR = 43;
  static const int PPC_REG_R0 = 44;
  static const int PPC_REG_R1 = 45;
  static const int PPC_REG_R2 = 46;
  static const int PPC_REG_R3 = 47;
  static const int PPC_REG_R4 = 48;
  static const int PPC_REG_R5 = 49;
  static const int PPC_REG_R6 = 50;
  static const int PPC_REG_R7 = 51;
  static const int PPC_REG_R8 = 52;
  static const int PPC_REG_R9 = 53;
  static const int PPC_REG_R10 = 54;
  static const int PPC_REG_R11 = 55;
  static const int PPC_REG_R12 = 56;
  static const int PPC_REG_R13 = 57;
  static const int PPC_REG_R14 = 58;
  static const int PPC_REG_R15 = 59;
  static const int PPC_REG_R16 = 60;
  static const int PPC_REG_R17 = 61;
  static const int PPC_REG_R18 = 62;
  static const int PPC_REG_R19 = 63;
  static const int PPC_REG_R20 = 64;
  static const int PPC_REG_R21 = 65;
  static const int PPC_REG_R22 = 66;
  static const int PPC_REG_R23 = 67;
  static const int PPC_REG_R24 = 68;
  static const int PPC_REG_R25 = 69;
  static const int PPC_REG_R26 = 70;
  static const int PPC_REG_R27 = 71;
  static const int PPC_REG_R28 = 72;
  static const int PPC_REG_R29 = 73;
  static const int PPC_REG_R30 = 74;
  static const int PPC_REG_R31 = 75;
  static const int PPC_REG_V0 = 76;
  static const int PPC_REG_V1 = 77;
  static const int PPC_REG_V2 = 78;
  static const int PPC_REG_V3 = 79;
  static const int PPC_REG_V4 = 80;
  static const int PPC_REG_V5 = 81;
  static const int PPC_REG_V6 = 82;
  static const int PPC_REG_V7 = 83;
  static const int PPC_REG_V8 = 84;
  static const int PPC_REG_V9 = 85;
  static const int PPC_REG_V10 = 86;
  static const int PPC_REG_V11 = 87;
  static const int PPC_REG_V12 = 88;
  static const int PPC_REG_V13 = 89;
  static const int PPC_REG_V14 = 90;
  static const int PPC_REG_V15 = 91;
  static const int PPC_REG_V16 = 92;
  static const int PPC_REG_V17 = 93;
  static const int PPC_REG_V18 = 94;
  static const int PPC_REG_V19 = 95;
  static const int PPC_REG_V20 = 96;
  static const int PPC_REG_V21 = 97;
  static const int PPC_REG_V22 = 98;
  static const int PPC_REG_V23 = 99;
  static const int PPC_REG_V24 = 100;
  static const int PPC_REG_V25 = 101;
  static const int PPC_REG_V26 = 102;
  static const int PPC_REG_V27 = 103;
  static const int PPC_REG_V28 = 104;
  static const int PPC_REG_V29 = 105;
  static const int PPC_REG_V30 = 106;
  static const int PPC_REG_V31 = 107;
  static const int PPC_REG_VRSAVE = 108;
  static const int PPC_REG_VS0 = 109;
  static const int PPC_REG_VS1 = 110;
  static const int PPC_REG_VS2 = 111;
  static const int PPC_REG_VS3 = 112;
  static const int PPC_REG_VS4 = 113;
  static const int PPC_REG_VS5 = 114;
  static const int PPC_REG_VS6 = 115;
  static const int PPC_REG_VS7 = 116;
  static const int PPC_REG_VS8 = 117;
  static const int PPC_REG_VS9 = 118;
  static const int PPC_REG_VS10 = 119;
  static const int PPC_REG_VS11 = 120;
  static const int PPC_REG_VS12 = 121;
  static const int PPC_REG_VS13 = 122;
  static const int PPC_REG_VS14 = 123;
  static const int PPC_REG_VS15 = 124;
  static const int PPC_REG_VS16 = 125;
  static const int PPC_REG_VS17 = 126;
  static const int PPC_REG_VS18 = 127;
  static const int PPC_REG_VS19 = 128;
  static const int PPC_REG_VS20 = 129;
  static const int PPC_REG_VS21 = 130;
  static const int PPC_REG_VS22 = 131;
  static const int PPC_REG_VS23 = 132;
  static const int PPC_REG_VS24 = 133;
  static const int PPC_REG_VS25 = 134;
  static const int PPC_REG_VS26 = 135;
  static const int PPC_REG_VS27 = 136;
  static const int PPC_REG_VS28 = 137;
  static const int PPC_REG_VS29 = 138;
  static const int PPC_REG_VS30 = 139;
  static const int PPC_REG_VS31 = 140;
  static const int PPC_REG_VS32 = 141;
  static const int PPC_REG_VS33 = 142;
  static const int PPC_REG_VS34 = 143;
  static const int PPC_REG_VS35 = 144;
  static const int PPC_REG_VS36 = 145;
  static const int PPC_REG_VS37 = 146;
  static const int PPC_REG_VS38 = 147;
  static const int PPC_REG_VS39 = 148;
  static const int PPC_REG_VS40 = 149;
  static const int PPC_REG_VS41 = 150;
  static const int PPC_REG_VS42 = 151;
  static const int PPC_REG_VS43 = 152;
  static const int PPC_REG_VS44 = 153;
  static const int PPC_REG_VS45 = 154;
  static const int PPC_REG_VS46 = 155;
  static const int PPC_REG_VS47 = 156;
  static const int PPC_REG_VS48 = 157;
  static const int PPC_REG_VS49 = 158;
  static const int PPC_REG_VS50 = 159;
  static const int PPC_REG_VS51 = 160;
  static const int PPC_REG_VS52 = 161;
  static const int PPC_REG_VS53 = 162;
  static const int PPC_REG_VS54 = 163;
  static const int PPC_REG_VS55 = 164;
  static const int PPC_REG_VS56 = 165;
  static const int PPC_REG_VS57 = 166;
  static const int PPC_REG_VS58 = 167;
  static const int PPC_REG_VS59 = 168;
  static const int PPC_REG_VS60 = 169;
  static const int PPC_REG_VS61 = 170;
  static const int PPC_REG_VS62 = 171;
  static const int PPC_REG_VS63 = 172;
  static const int PPC_REG_Q0 = 173;
  static const int PPC_REG_Q1 = 174;
  static const int PPC_REG_Q2 = 175;
  static const int PPC_REG_Q3 = 176;
  static const int PPC_REG_Q4 = 177;
  static const int PPC_REG_Q5 = 178;
  static const int PPC_REG_Q6 = 179;
  static const int PPC_REG_Q7 = 180;
  static const int PPC_REG_Q8 = 181;
  static const int PPC_REG_Q9 = 182;
  static const int PPC_REG_Q10 = 183;
  static const int PPC_REG_Q11 = 184;
  static const int PPC_REG_Q12 = 185;
  static const int PPC_REG_Q13 = 186;
  static const int PPC_REG_Q14 = 187;
  static const int PPC_REG_Q15 = 188;
  static const int PPC_REG_Q16 = 189;
  static const int PPC_REG_Q17 = 190;
  static const int PPC_REG_Q18 = 191;
  static const int PPC_REG_Q19 = 192;
  static const int PPC_REG_Q20 = 193;
  static const int PPC_REG_Q21 = 194;
  static const int PPC_REG_Q22 = 195;
  static const int PPC_REG_Q23 = 196;
  static const int PPC_REG_Q24 = 197;
  static const int PPC_REG_Q25 = 198;
  static const int PPC_REG_Q26 = 199;
  static const int PPC_REG_Q27 = 200;
  static const int PPC_REG_Q28 = 201;
  static const int PPC_REG_Q29 = 202;
  static const int PPC_REG_Q30 = 203;
  static const int PPC_REG_Q31 = 204;
  static const int PPC_REG_RM = 205;
  static const int PPC_REG_CTR8 = 206;
  static const int PPC_REG_LR8 = 207;
  static const int PPC_REG_CR1EQ = 208;
  static const int PPC_REG_X2 = 209;
  static const int PPC_REG_ENDING = 210;
}

/// Instruction's operand referring to memory
/// This is associated with PPC_OP_MEM operand type above
class ppc_op_mem extends ffi.Struct {
  /// < base register
  @ffi.Int32()
  external int base;

  /// < displacement/offset value
  @ffi.Int32()
  external int disp;
}

class ppc_op_crx extends ffi.Struct {
  @ffi.UnsignedInt()
  external int scale;

  @ffi.Int32()
  external int reg;

  @ffi.Int32()
  external int cond;
}

/// Instruction operand
class cs_ppc_op extends ffi.Struct {
  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion6 unnamed;
}

class UnnamedUnion6 extends ffi.Union {
  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < immediate value for IMM operand
  @ffi.Int64()
  external int imm;

  /// < base/disp value for MEM operand
  external ppc_op_mem mem;

  /// < operand with condition register
  external ppc_op_crx crx;
}

/// Instruction structure
class cs_ppc extends ffi.Struct {
  /// branch code for branch instructions
  @ffi.Int32()
  external int bc;

  /// branch hint for branch instructions
  @ffi.Int32()
  external int bh;

  /// if update_cr0 = True, then this 'dot' insn updates CR0
  @ffi.Bool()
  external bool update_cr0;

  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([8])
  external ffi.Array<cs_ppc_op> operands;
}

/// PPC instruction
abstract class ppc_insn {
  static const int PPC_INS_INVALID = 0;
  static const int PPC_INS_ADD = 1;
  static const int PPC_INS_ADDC = 2;
  static const int PPC_INS_ADDE = 3;
  static const int PPC_INS_ADDI = 4;
  static const int PPC_INS_ADDIC = 5;
  static const int PPC_INS_ADDIS = 6;
  static const int PPC_INS_ADDME = 7;
  static const int PPC_INS_ADDZE = 8;
  static const int PPC_INS_AND = 9;
  static const int PPC_INS_ANDC = 10;
  static const int PPC_INS_ANDIS = 11;
  static const int PPC_INS_ANDI = 12;
  static const int PPC_INS_ATTN = 13;
  static const int PPC_INS_B = 14;
  static const int PPC_INS_BA = 15;
  static const int PPC_INS_BC = 16;
  static const int PPC_INS_BCCTR = 17;
  static const int PPC_INS_BCCTRL = 18;
  static const int PPC_INS_BCL = 19;
  static const int PPC_INS_BCLR = 20;
  static const int PPC_INS_BCLRL = 21;
  static const int PPC_INS_BCTR = 22;
  static const int PPC_INS_BCTRL = 23;
  static const int PPC_INS_BCT = 24;
  static const int PPC_INS_BDNZ = 25;
  static const int PPC_INS_BDNZA = 26;
  static const int PPC_INS_BDNZL = 27;
  static const int PPC_INS_BDNZLA = 28;
  static const int PPC_INS_BDNZLR = 29;
  static const int PPC_INS_BDNZLRL = 30;
  static const int PPC_INS_BDZ = 31;
  static const int PPC_INS_BDZA = 32;
  static const int PPC_INS_BDZL = 33;
  static const int PPC_INS_BDZLA = 34;
  static const int PPC_INS_BDZLR = 35;
  static const int PPC_INS_BDZLRL = 36;
  static const int PPC_INS_BL = 37;
  static const int PPC_INS_BLA = 38;
  static const int PPC_INS_BLR = 39;
  static const int PPC_INS_BLRL = 40;
  static const int PPC_INS_BRINC = 41;
  static const int PPC_INS_CMPB = 42;
  static const int PPC_INS_CMPD = 43;
  static const int PPC_INS_CMPDI = 44;
  static const int PPC_INS_CMPLD = 45;
  static const int PPC_INS_CMPLDI = 46;
  static const int PPC_INS_CMPLW = 47;
  static const int PPC_INS_CMPLWI = 48;
  static const int PPC_INS_CMPW = 49;
  static const int PPC_INS_CMPWI = 50;
  static const int PPC_INS_CNTLZD = 51;
  static const int PPC_INS_CNTLZW = 52;
  static const int PPC_INS_CREQV = 53;
  static const int PPC_INS_CRXOR = 54;
  static const int PPC_INS_CRAND = 55;
  static const int PPC_INS_CRANDC = 56;
  static const int PPC_INS_CRNAND = 57;
  static const int PPC_INS_CRNOR = 58;
  static const int PPC_INS_CROR = 59;
  static const int PPC_INS_CRORC = 60;
  static const int PPC_INS_DCBA = 61;
  static const int PPC_INS_DCBF = 62;
  static const int PPC_INS_DCBI = 63;
  static const int PPC_INS_DCBST = 64;
  static const int PPC_INS_DCBT = 65;
  static const int PPC_INS_DCBTST = 66;
  static const int PPC_INS_DCBZ = 67;
  static const int PPC_INS_DCBZL = 68;
  static const int PPC_INS_DCCCI = 69;
  static const int PPC_INS_DIVD = 70;
  static const int PPC_INS_DIVDU = 71;
  static const int PPC_INS_DIVW = 72;
  static const int PPC_INS_DIVWU = 73;
  static const int PPC_INS_DSS = 74;
  static const int PPC_INS_DSSALL = 75;
  static const int PPC_INS_DST = 76;
  static const int PPC_INS_DSTST = 77;
  static const int PPC_INS_DSTSTT = 78;
  static const int PPC_INS_DSTT = 79;
  static const int PPC_INS_EQV = 80;
  static const int PPC_INS_EVABS = 81;
  static const int PPC_INS_EVADDIW = 82;
  static const int PPC_INS_EVADDSMIAAW = 83;
  static const int PPC_INS_EVADDSSIAAW = 84;
  static const int PPC_INS_EVADDUMIAAW = 85;
  static const int PPC_INS_EVADDUSIAAW = 86;
  static const int PPC_INS_EVADDW = 87;
  static const int PPC_INS_EVAND = 88;
  static const int PPC_INS_EVANDC = 89;
  static const int PPC_INS_EVCMPEQ = 90;
  static const int PPC_INS_EVCMPGTS = 91;
  static const int PPC_INS_EVCMPGTU = 92;
  static const int PPC_INS_EVCMPLTS = 93;
  static const int PPC_INS_EVCMPLTU = 94;
  static const int PPC_INS_EVCNTLSW = 95;
  static const int PPC_INS_EVCNTLZW = 96;
  static const int PPC_INS_EVDIVWS = 97;
  static const int PPC_INS_EVDIVWU = 98;
  static const int PPC_INS_EVEQV = 99;
  static const int PPC_INS_EVEXTSB = 100;
  static const int PPC_INS_EVEXTSH = 101;
  static const int PPC_INS_EVLDD = 102;
  static const int PPC_INS_EVLDDX = 103;
  static const int PPC_INS_EVLDH = 104;
  static const int PPC_INS_EVLDHX = 105;
  static const int PPC_INS_EVLDW = 106;
  static const int PPC_INS_EVLDWX = 107;
  static const int PPC_INS_EVLHHESPLAT = 108;
  static const int PPC_INS_EVLHHESPLATX = 109;
  static const int PPC_INS_EVLHHOSSPLAT = 110;
  static const int PPC_INS_EVLHHOSSPLATX = 111;
  static const int PPC_INS_EVLHHOUSPLAT = 112;
  static const int PPC_INS_EVLHHOUSPLATX = 113;
  static const int PPC_INS_EVLWHE = 114;
  static const int PPC_INS_EVLWHEX = 115;
  static const int PPC_INS_EVLWHOS = 116;
  static const int PPC_INS_EVLWHOSX = 117;
  static const int PPC_INS_EVLWHOU = 118;
  static const int PPC_INS_EVLWHOUX = 119;
  static const int PPC_INS_EVLWHSPLAT = 120;
  static const int PPC_INS_EVLWHSPLATX = 121;
  static const int PPC_INS_EVLWWSPLAT = 122;
  static const int PPC_INS_EVLWWSPLATX = 123;
  static const int PPC_INS_EVMERGEHI = 124;
  static const int PPC_INS_EVMERGEHILO = 125;
  static const int PPC_INS_EVMERGELO = 126;
  static const int PPC_INS_EVMERGELOHI = 127;
  static const int PPC_INS_EVMHEGSMFAA = 128;
  static const int PPC_INS_EVMHEGSMFAN = 129;
  static const int PPC_INS_EVMHEGSMIAA = 130;
  static const int PPC_INS_EVMHEGSMIAN = 131;
  static const int PPC_INS_EVMHEGUMIAA = 132;
  static const int PPC_INS_EVMHEGUMIAN = 133;
  static const int PPC_INS_EVMHESMF = 134;
  static const int PPC_INS_EVMHESMFA = 135;
  static const int PPC_INS_EVMHESMFAAW = 136;
  static const int PPC_INS_EVMHESMFANW = 137;
  static const int PPC_INS_EVMHESMI = 138;
  static const int PPC_INS_EVMHESMIA = 139;
  static const int PPC_INS_EVMHESMIAAW = 140;
  static const int PPC_INS_EVMHESMIANW = 141;
  static const int PPC_INS_EVMHESSF = 142;
  static const int PPC_INS_EVMHESSFA = 143;
  static const int PPC_INS_EVMHESSFAAW = 144;
  static const int PPC_INS_EVMHESSFANW = 145;
  static const int PPC_INS_EVMHESSIAAW = 146;
  static const int PPC_INS_EVMHESSIANW = 147;
  static const int PPC_INS_EVMHEUMI = 148;
  static const int PPC_INS_EVMHEUMIA = 149;
  static const int PPC_INS_EVMHEUMIAAW = 150;
  static const int PPC_INS_EVMHEUMIANW = 151;
  static const int PPC_INS_EVMHEUSIAAW = 152;
  static const int PPC_INS_EVMHEUSIANW = 153;
  static const int PPC_INS_EVMHOGSMFAA = 154;
  static const int PPC_INS_EVMHOGSMFAN = 155;
  static const int PPC_INS_EVMHOGSMIAA = 156;
  static const int PPC_INS_EVMHOGSMIAN = 157;
  static const int PPC_INS_EVMHOGUMIAA = 158;
  static const int PPC_INS_EVMHOGUMIAN = 159;
  static const int PPC_INS_EVMHOSMF = 160;
  static const int PPC_INS_EVMHOSMFA = 161;
  static const int PPC_INS_EVMHOSMFAAW = 162;
  static const int PPC_INS_EVMHOSMFANW = 163;
  static const int PPC_INS_EVMHOSMI = 164;
  static const int PPC_INS_EVMHOSMIA = 165;
  static const int PPC_INS_EVMHOSMIAAW = 166;
  static const int PPC_INS_EVMHOSMIANW = 167;
  static const int PPC_INS_EVMHOSSF = 168;
  static const int PPC_INS_EVMHOSSFA = 169;
  static const int PPC_INS_EVMHOSSFAAW = 170;
  static const int PPC_INS_EVMHOSSFANW = 171;
  static const int PPC_INS_EVMHOSSIAAW = 172;
  static const int PPC_INS_EVMHOSSIANW = 173;
  static const int PPC_INS_EVMHOUMI = 174;
  static const int PPC_INS_EVMHOUMIA = 175;
  static const int PPC_INS_EVMHOUMIAAW = 176;
  static const int PPC_INS_EVMHOUMIANW = 177;
  static const int PPC_INS_EVMHOUSIAAW = 178;
  static const int PPC_INS_EVMHOUSIANW = 179;
  static const int PPC_INS_EVMRA = 180;
  static const int PPC_INS_EVMWHSMF = 181;
  static const int PPC_INS_EVMWHSMFA = 182;
  static const int PPC_INS_EVMWHSMI = 183;
  static const int PPC_INS_EVMWHSMIA = 184;
  static const int PPC_INS_EVMWHSSF = 185;
  static const int PPC_INS_EVMWHSSFA = 186;
  static const int PPC_INS_EVMWHUMI = 187;
  static const int PPC_INS_EVMWHUMIA = 188;
  static const int PPC_INS_EVMWLSMIAAW = 189;
  static const int PPC_INS_EVMWLSMIANW = 190;
  static const int PPC_INS_EVMWLSSIAAW = 191;
  static const int PPC_INS_EVMWLSSIANW = 192;
  static const int PPC_INS_EVMWLUMI = 193;
  static const int PPC_INS_EVMWLUMIA = 194;
  static const int PPC_INS_EVMWLUMIAAW = 195;
  static const int PPC_INS_EVMWLUMIANW = 196;
  static const int PPC_INS_EVMWLUSIAAW = 197;
  static const int PPC_INS_EVMWLUSIANW = 198;
  static const int PPC_INS_EVMWSMF = 199;
  static const int PPC_INS_EVMWSMFA = 200;
  static const int PPC_INS_EVMWSMFAA = 201;
  static const int PPC_INS_EVMWSMFAN = 202;
  static const int PPC_INS_EVMWSMI = 203;
  static const int PPC_INS_EVMWSMIA = 204;
  static const int PPC_INS_EVMWSMIAA = 205;
  static const int PPC_INS_EVMWSMIAN = 206;
  static const int PPC_INS_EVMWSSF = 207;
  static const int PPC_INS_EVMWSSFA = 208;
  static const int PPC_INS_EVMWSSFAA = 209;
  static const int PPC_INS_EVMWSSFAN = 210;
  static const int PPC_INS_EVMWUMI = 211;
  static const int PPC_INS_EVMWUMIA = 212;
  static const int PPC_INS_EVMWUMIAA = 213;
  static const int PPC_INS_EVMWUMIAN = 214;
  static const int PPC_INS_EVNAND = 215;
  static const int PPC_INS_EVNEG = 216;
  static const int PPC_INS_EVNOR = 217;
  static const int PPC_INS_EVOR = 218;
  static const int PPC_INS_EVORC = 219;
  static const int PPC_INS_EVRLW = 220;
  static const int PPC_INS_EVRLWI = 221;
  static const int PPC_INS_EVRNDW = 222;
  static const int PPC_INS_EVSLW = 223;
  static const int PPC_INS_EVSLWI = 224;
  static const int PPC_INS_EVSPLATFI = 225;
  static const int PPC_INS_EVSPLATI = 226;
  static const int PPC_INS_EVSRWIS = 227;
  static const int PPC_INS_EVSRWIU = 228;
  static const int PPC_INS_EVSRWS = 229;
  static const int PPC_INS_EVSRWU = 230;
  static const int PPC_INS_EVSTDD = 231;
  static const int PPC_INS_EVSTDDX = 232;
  static const int PPC_INS_EVSTDH = 233;
  static const int PPC_INS_EVSTDHX = 234;
  static const int PPC_INS_EVSTDW = 235;
  static const int PPC_INS_EVSTDWX = 236;
  static const int PPC_INS_EVSTWHE = 237;
  static const int PPC_INS_EVSTWHEX = 238;
  static const int PPC_INS_EVSTWHO = 239;
  static const int PPC_INS_EVSTWHOX = 240;
  static const int PPC_INS_EVSTWWE = 241;
  static const int PPC_INS_EVSTWWEX = 242;
  static const int PPC_INS_EVSTWWO = 243;
  static const int PPC_INS_EVSTWWOX = 244;
  static const int PPC_INS_EVSUBFSMIAAW = 245;
  static const int PPC_INS_EVSUBFSSIAAW = 246;
  static const int PPC_INS_EVSUBFUMIAAW = 247;
  static const int PPC_INS_EVSUBFUSIAAW = 248;
  static const int PPC_INS_EVSUBFW = 249;
  static const int PPC_INS_EVSUBIFW = 250;
  static const int PPC_INS_EVXOR = 251;
  static const int PPC_INS_EXTSB = 252;
  static const int PPC_INS_EXTSH = 253;
  static const int PPC_INS_EXTSW = 254;
  static const int PPC_INS_EIEIO = 255;
  static const int PPC_INS_FABS = 256;
  static const int PPC_INS_FADD = 257;
  static const int PPC_INS_FADDS = 258;
  static const int PPC_INS_FCFID = 259;
  static const int PPC_INS_FCFIDS = 260;
  static const int PPC_INS_FCFIDU = 261;
  static const int PPC_INS_FCFIDUS = 262;
  static const int PPC_INS_FCMPU = 263;
  static const int PPC_INS_FCPSGN = 264;
  static const int PPC_INS_FCTID = 265;
  static const int PPC_INS_FCTIDUZ = 266;
  static const int PPC_INS_FCTIDZ = 267;
  static const int PPC_INS_FCTIW = 268;
  static const int PPC_INS_FCTIWUZ = 269;
  static const int PPC_INS_FCTIWZ = 270;
  static const int PPC_INS_FDIV = 271;
  static const int PPC_INS_FDIVS = 272;
  static const int PPC_INS_FMADD = 273;
  static const int PPC_INS_FMADDS = 274;
  static const int PPC_INS_FMR = 275;
  static const int PPC_INS_FMSUB = 276;
  static const int PPC_INS_FMSUBS = 277;
  static const int PPC_INS_FMUL = 278;
  static const int PPC_INS_FMULS = 279;
  static const int PPC_INS_FNABS = 280;
  static const int PPC_INS_FNEG = 281;
  static const int PPC_INS_FNMADD = 282;
  static const int PPC_INS_FNMADDS = 283;
  static const int PPC_INS_FNMSUB = 284;
  static const int PPC_INS_FNMSUBS = 285;
  static const int PPC_INS_FRE = 286;
  static const int PPC_INS_FRES = 287;
  static const int PPC_INS_FRIM = 288;
  static const int PPC_INS_FRIN = 289;
  static const int PPC_INS_FRIP = 290;
  static const int PPC_INS_FRIZ = 291;
  static const int PPC_INS_FRSP = 292;
  static const int PPC_INS_FRSQRTE = 293;
  static const int PPC_INS_FRSQRTES = 294;
  static const int PPC_INS_FSEL = 295;
  static const int PPC_INS_FSQRT = 296;
  static const int PPC_INS_FSQRTS = 297;
  static const int PPC_INS_FSUB = 298;
  static const int PPC_INS_FSUBS = 299;
  static const int PPC_INS_ICBI = 300;
  static const int PPC_INS_ICBT = 301;
  static const int PPC_INS_ICCCI = 302;
  static const int PPC_INS_ISEL = 303;
  static const int PPC_INS_ISYNC = 304;
  static const int PPC_INS_LA = 305;
  static const int PPC_INS_LBZ = 306;
  static const int PPC_INS_LBZCIX = 307;
  static const int PPC_INS_LBZU = 308;
  static const int PPC_INS_LBZUX = 309;
  static const int PPC_INS_LBZX = 310;
  static const int PPC_INS_LD = 311;
  static const int PPC_INS_LDARX = 312;
  static const int PPC_INS_LDBRX = 313;
  static const int PPC_INS_LDCIX = 314;
  static const int PPC_INS_LDU = 315;
  static const int PPC_INS_LDUX = 316;
  static const int PPC_INS_LDX = 317;
  static const int PPC_INS_LFD = 318;
  static const int PPC_INS_LFDU = 319;
  static const int PPC_INS_LFDUX = 320;
  static const int PPC_INS_LFDX = 321;
  static const int PPC_INS_LFIWAX = 322;
  static const int PPC_INS_LFIWZX = 323;
  static const int PPC_INS_LFS = 324;
  static const int PPC_INS_LFSU = 325;
  static const int PPC_INS_LFSUX = 326;
  static const int PPC_INS_LFSX = 327;
  static const int PPC_INS_LHA = 328;
  static const int PPC_INS_LHAU = 329;
  static const int PPC_INS_LHAUX = 330;
  static const int PPC_INS_LHAX = 331;
  static const int PPC_INS_LHBRX = 332;
  static const int PPC_INS_LHZ = 333;
  static const int PPC_INS_LHZCIX = 334;
  static const int PPC_INS_LHZU = 335;
  static const int PPC_INS_LHZUX = 336;
  static const int PPC_INS_LHZX = 337;
  static const int PPC_INS_LI = 338;
  static const int PPC_INS_LIS = 339;
  static const int PPC_INS_LMW = 340;
  static const int PPC_INS_LSWI = 341;
  static const int PPC_INS_LVEBX = 342;
  static const int PPC_INS_LVEHX = 343;
  static const int PPC_INS_LVEWX = 344;
  static const int PPC_INS_LVSL = 345;
  static const int PPC_INS_LVSR = 346;
  static const int PPC_INS_LVX = 347;
  static const int PPC_INS_LVXL = 348;
  static const int PPC_INS_LWA = 349;
  static const int PPC_INS_LWARX = 350;
  static const int PPC_INS_LWAUX = 351;
  static const int PPC_INS_LWAX = 352;
  static const int PPC_INS_LWBRX = 353;
  static const int PPC_INS_LWZ = 354;
  static const int PPC_INS_LWZCIX = 355;
  static const int PPC_INS_LWZU = 356;
  static const int PPC_INS_LWZUX = 357;
  static const int PPC_INS_LWZX = 358;
  static const int PPC_INS_LXSDX = 359;
  static const int PPC_INS_LXVD2X = 360;
  static const int PPC_INS_LXVDSX = 361;
  static const int PPC_INS_LXVW4X = 362;
  static const int PPC_INS_MBAR = 363;
  static const int PPC_INS_MCRF = 364;
  static const int PPC_INS_MCRFS = 365;
  static const int PPC_INS_MFCR = 366;
  static const int PPC_INS_MFCTR = 367;
  static const int PPC_INS_MFDCR = 368;
  static const int PPC_INS_MFFS = 369;
  static const int PPC_INS_MFLR = 370;
  static const int PPC_INS_MFMSR = 371;
  static const int PPC_INS_MFOCRF = 372;
  static const int PPC_INS_MFSPR = 373;
  static const int PPC_INS_MFSR = 374;
  static const int PPC_INS_MFSRIN = 375;
  static const int PPC_INS_MFTB = 376;
  static const int PPC_INS_MFVSCR = 377;
  static const int PPC_INS_MSYNC = 378;
  static const int PPC_INS_MTCRF = 379;
  static const int PPC_INS_MTCTR = 380;
  static const int PPC_INS_MTDCR = 381;
  static const int PPC_INS_MTFSB0 = 382;
  static const int PPC_INS_MTFSB1 = 383;
  static const int PPC_INS_MTFSF = 384;
  static const int PPC_INS_MTFSFI = 385;
  static const int PPC_INS_MTLR = 386;
  static const int PPC_INS_MTMSR = 387;
  static const int PPC_INS_MTMSRD = 388;
  static const int PPC_INS_MTOCRF = 389;
  static const int PPC_INS_MTSPR = 390;
  static const int PPC_INS_MTSR = 391;
  static const int PPC_INS_MTSRIN = 392;
  static const int PPC_INS_MTVSCR = 393;
  static const int PPC_INS_MULHD = 394;
  static const int PPC_INS_MULHDU = 395;
  static const int PPC_INS_MULHW = 396;
  static const int PPC_INS_MULHWU = 397;
  static const int PPC_INS_MULLD = 398;
  static const int PPC_INS_MULLI = 399;
  static const int PPC_INS_MULLW = 400;
  static const int PPC_INS_NAND = 401;
  static const int PPC_INS_NEG = 402;
  static const int PPC_INS_NOP = 403;
  static const int PPC_INS_ORI = 404;
  static const int PPC_INS_NOR = 405;
  static const int PPC_INS_OR = 406;
  static const int PPC_INS_ORC = 407;
  static const int PPC_INS_ORIS = 408;
  static const int PPC_INS_POPCNTD = 409;
  static const int PPC_INS_POPCNTW = 410;
  static const int PPC_INS_QVALIGNI = 411;
  static const int PPC_INS_QVESPLATI = 412;
  static const int PPC_INS_QVFABS = 413;
  static const int PPC_INS_QVFADD = 414;
  static const int PPC_INS_QVFADDS = 415;
  static const int PPC_INS_QVFCFID = 416;
  static const int PPC_INS_QVFCFIDS = 417;
  static const int PPC_INS_QVFCFIDU = 418;
  static const int PPC_INS_QVFCFIDUS = 419;
  static const int PPC_INS_QVFCMPEQ = 420;
  static const int PPC_INS_QVFCMPGT = 421;
  static const int PPC_INS_QVFCMPLT = 422;
  static const int PPC_INS_QVFCPSGN = 423;
  static const int PPC_INS_QVFCTID = 424;
  static const int PPC_INS_QVFCTIDU = 425;
  static const int PPC_INS_QVFCTIDUZ = 426;
  static const int PPC_INS_QVFCTIDZ = 427;
  static const int PPC_INS_QVFCTIW = 428;
  static const int PPC_INS_QVFCTIWU = 429;
  static const int PPC_INS_QVFCTIWUZ = 430;
  static const int PPC_INS_QVFCTIWZ = 431;
  static const int PPC_INS_QVFLOGICAL = 432;
  static const int PPC_INS_QVFMADD = 433;
  static const int PPC_INS_QVFMADDS = 434;
  static const int PPC_INS_QVFMR = 435;
  static const int PPC_INS_QVFMSUB = 436;
  static const int PPC_INS_QVFMSUBS = 437;
  static const int PPC_INS_QVFMUL = 438;
  static const int PPC_INS_QVFMULS = 439;
  static const int PPC_INS_QVFNABS = 440;
  static const int PPC_INS_QVFNEG = 441;
  static const int PPC_INS_QVFNMADD = 442;
  static const int PPC_INS_QVFNMADDS = 443;
  static const int PPC_INS_QVFNMSUB = 444;
  static const int PPC_INS_QVFNMSUBS = 445;
  static const int PPC_INS_QVFPERM = 446;
  static const int PPC_INS_QVFRE = 447;
  static const int PPC_INS_QVFRES = 448;
  static const int PPC_INS_QVFRIM = 449;
  static const int PPC_INS_QVFRIN = 450;
  static const int PPC_INS_QVFRIP = 451;
  static const int PPC_INS_QVFRIZ = 452;
  static const int PPC_INS_QVFRSP = 453;
  static const int PPC_INS_QVFRSQRTE = 454;
  static const int PPC_INS_QVFRSQRTES = 455;
  static const int PPC_INS_QVFSEL = 456;
  static const int PPC_INS_QVFSUB = 457;
  static const int PPC_INS_QVFSUBS = 458;
  static const int PPC_INS_QVFTSTNAN = 459;
  static const int PPC_INS_QVFXMADD = 460;
  static const int PPC_INS_QVFXMADDS = 461;
  static const int PPC_INS_QVFXMUL = 462;
  static const int PPC_INS_QVFXMULS = 463;
  static const int PPC_INS_QVFXXCPNMADD = 464;
  static const int PPC_INS_QVFXXCPNMADDS = 465;
  static const int PPC_INS_QVFXXMADD = 466;
  static const int PPC_INS_QVFXXMADDS = 467;
  static const int PPC_INS_QVFXXNPMADD = 468;
  static const int PPC_INS_QVFXXNPMADDS = 469;
  static const int PPC_INS_QVGPCI = 470;
  static const int PPC_INS_QVLFCDUX = 471;
  static const int PPC_INS_QVLFCDUXA = 472;
  static const int PPC_INS_QVLFCDX = 473;
  static const int PPC_INS_QVLFCDXA = 474;
  static const int PPC_INS_QVLFCSUX = 475;
  static const int PPC_INS_QVLFCSUXA = 476;
  static const int PPC_INS_QVLFCSX = 477;
  static const int PPC_INS_QVLFCSXA = 478;
  static const int PPC_INS_QVLFDUX = 479;
  static const int PPC_INS_QVLFDUXA = 480;
  static const int PPC_INS_QVLFDX = 481;
  static const int PPC_INS_QVLFDXA = 482;
  static const int PPC_INS_QVLFIWAX = 483;
  static const int PPC_INS_QVLFIWAXA = 484;
  static const int PPC_INS_QVLFIWZX = 485;
  static const int PPC_INS_QVLFIWZXA = 486;
  static const int PPC_INS_QVLFSUX = 487;
  static const int PPC_INS_QVLFSUXA = 488;
  static const int PPC_INS_QVLFSX = 489;
  static const int PPC_INS_QVLFSXA = 490;
  static const int PPC_INS_QVLPCLDX = 491;
  static const int PPC_INS_QVLPCLSX = 492;
  static const int PPC_INS_QVLPCRDX = 493;
  static const int PPC_INS_QVLPCRSX = 494;
  static const int PPC_INS_QVSTFCDUX = 495;
  static const int PPC_INS_QVSTFCDUXA = 496;
  static const int PPC_INS_QVSTFCDUXI = 497;
  static const int PPC_INS_QVSTFCDUXIA = 498;
  static const int PPC_INS_QVSTFCDX = 499;
  static const int PPC_INS_QVSTFCDXA = 500;
  static const int PPC_INS_QVSTFCDXI = 501;
  static const int PPC_INS_QVSTFCDXIA = 502;
  static const int PPC_INS_QVSTFCSUX = 503;
  static const int PPC_INS_QVSTFCSUXA = 504;
  static const int PPC_INS_QVSTFCSUXI = 505;
  static const int PPC_INS_QVSTFCSUXIA = 506;
  static const int PPC_INS_QVSTFCSX = 507;
  static const int PPC_INS_QVSTFCSXA = 508;
  static const int PPC_INS_QVSTFCSXI = 509;
  static const int PPC_INS_QVSTFCSXIA = 510;
  static const int PPC_INS_QVSTFDUX = 511;
  static const int PPC_INS_QVSTFDUXA = 512;
  static const int PPC_INS_QVSTFDUXI = 513;
  static const int PPC_INS_QVSTFDUXIA = 514;
  static const int PPC_INS_QVSTFDX = 515;
  static const int PPC_INS_QVSTFDXA = 516;
  static const int PPC_INS_QVSTFDXI = 517;
  static const int PPC_INS_QVSTFDXIA = 518;
  static const int PPC_INS_QVSTFIWX = 519;
  static const int PPC_INS_QVSTFIWXA = 520;
  static const int PPC_INS_QVSTFSUX = 521;
  static const int PPC_INS_QVSTFSUXA = 522;
  static const int PPC_INS_QVSTFSUXI = 523;
  static const int PPC_INS_QVSTFSUXIA = 524;
  static const int PPC_INS_QVSTFSX = 525;
  static const int PPC_INS_QVSTFSXA = 526;
  static const int PPC_INS_QVSTFSXI = 527;
  static const int PPC_INS_QVSTFSXIA = 528;
  static const int PPC_INS_RFCI = 529;
  static const int PPC_INS_RFDI = 530;
  static const int PPC_INS_RFI = 531;
  static const int PPC_INS_RFID = 532;
  static const int PPC_INS_RFMCI = 533;
  static const int PPC_INS_RLDCL = 534;
  static const int PPC_INS_RLDCR = 535;
  static const int PPC_INS_RLDIC = 536;
  static const int PPC_INS_RLDICL = 537;
  static const int PPC_INS_RLDICR = 538;
  static const int PPC_INS_RLDIMI = 539;
  static const int PPC_INS_RLWIMI = 540;
  static const int PPC_INS_RLWINM = 541;
  static const int PPC_INS_RLWNM = 542;
  static const int PPC_INS_SC = 543;
  static const int PPC_INS_SLBIA = 544;
  static const int PPC_INS_SLBIE = 545;
  static const int PPC_INS_SLBMFEE = 546;
  static const int PPC_INS_SLBMTE = 547;
  static const int PPC_INS_SLD = 548;
  static const int PPC_INS_SLW = 549;
  static const int PPC_INS_SRAD = 550;
  static const int PPC_INS_SRADI = 551;
  static const int PPC_INS_SRAW = 552;
  static const int PPC_INS_SRAWI = 553;
  static const int PPC_INS_SRD = 554;
  static const int PPC_INS_SRW = 555;
  static const int PPC_INS_STB = 556;
  static const int PPC_INS_STBCIX = 557;
  static const int PPC_INS_STBU = 558;
  static const int PPC_INS_STBUX = 559;
  static const int PPC_INS_STBX = 560;
  static const int PPC_INS_STD = 561;
  static const int PPC_INS_STDBRX = 562;
  static const int PPC_INS_STDCIX = 563;
  static const int PPC_INS_STDCX = 564;
  static const int PPC_INS_STDU = 565;
  static const int PPC_INS_STDUX = 566;
  static const int PPC_INS_STDX = 567;
  static const int PPC_INS_STFD = 568;
  static const int PPC_INS_STFDU = 569;
  static const int PPC_INS_STFDUX = 570;
  static const int PPC_INS_STFDX = 571;
  static const int PPC_INS_STFIWX = 572;
  static const int PPC_INS_STFS = 573;
  static const int PPC_INS_STFSU = 574;
  static const int PPC_INS_STFSUX = 575;
  static const int PPC_INS_STFSX = 576;
  static const int PPC_INS_STH = 577;
  static const int PPC_INS_STHBRX = 578;
  static const int PPC_INS_STHCIX = 579;
  static const int PPC_INS_STHU = 580;
  static const int PPC_INS_STHUX = 581;
  static const int PPC_INS_STHX = 582;
  static const int PPC_INS_STMW = 583;
  static const int PPC_INS_STSWI = 584;
  static const int PPC_INS_STVEBX = 585;
  static const int PPC_INS_STVEHX = 586;
  static const int PPC_INS_STVEWX = 587;
  static const int PPC_INS_STVX = 588;
  static const int PPC_INS_STVXL = 589;
  static const int PPC_INS_STW = 590;
  static const int PPC_INS_STWBRX = 591;
  static const int PPC_INS_STWCIX = 592;
  static const int PPC_INS_STWCX = 593;
  static const int PPC_INS_STWU = 594;
  static const int PPC_INS_STWUX = 595;
  static const int PPC_INS_STWX = 596;
  static const int PPC_INS_STXSDX = 597;
  static const int PPC_INS_STXVD2X = 598;
  static const int PPC_INS_STXVW4X = 599;
  static const int PPC_INS_SUBF = 600;
  static const int PPC_INS_SUBFC = 601;
  static const int PPC_INS_SUBFE = 602;
  static const int PPC_INS_SUBFIC = 603;
  static const int PPC_INS_SUBFME = 604;
  static const int PPC_INS_SUBFZE = 605;
  static const int PPC_INS_SYNC = 606;
  static const int PPC_INS_TD = 607;
  static const int PPC_INS_TDI = 608;
  static const int PPC_INS_TLBIA = 609;
  static const int PPC_INS_TLBIE = 610;
  static const int PPC_INS_TLBIEL = 611;
  static const int PPC_INS_TLBIVAX = 612;
  static const int PPC_INS_TLBLD = 613;
  static const int PPC_INS_TLBLI = 614;
  static const int PPC_INS_TLBRE = 615;
  static const int PPC_INS_TLBSX = 616;
  static const int PPC_INS_TLBSYNC = 617;
  static const int PPC_INS_TLBWE = 618;
  static const int PPC_INS_TRAP = 619;
  static const int PPC_INS_TW = 620;
  static const int PPC_INS_TWI = 621;
  static const int PPC_INS_VADDCUW = 622;
  static const int PPC_INS_VADDFP = 623;
  static const int PPC_INS_VADDSBS = 624;
  static const int PPC_INS_VADDSHS = 625;
  static const int PPC_INS_VADDSWS = 626;
  static const int PPC_INS_VADDUBM = 627;
  static const int PPC_INS_VADDUBS = 628;
  static const int PPC_INS_VADDUDM = 629;
  static const int PPC_INS_VADDUHM = 630;
  static const int PPC_INS_VADDUHS = 631;
  static const int PPC_INS_VADDUWM = 632;
  static const int PPC_INS_VADDUWS = 633;
  static const int PPC_INS_VAND = 634;
  static const int PPC_INS_VANDC = 635;
  static const int PPC_INS_VAVGSB = 636;
  static const int PPC_INS_VAVGSH = 637;
  static const int PPC_INS_VAVGSW = 638;
  static const int PPC_INS_VAVGUB = 639;
  static const int PPC_INS_VAVGUH = 640;
  static const int PPC_INS_VAVGUW = 641;
  static const int PPC_INS_VCFSX = 642;
  static const int PPC_INS_VCFUX = 643;
  static const int PPC_INS_VCLZB = 644;
  static const int PPC_INS_VCLZD = 645;
  static const int PPC_INS_VCLZH = 646;
  static const int PPC_INS_VCLZW = 647;
  static const int PPC_INS_VCMPBFP = 648;
  static const int PPC_INS_VCMPEQFP = 649;
  static const int PPC_INS_VCMPEQUB = 650;
  static const int PPC_INS_VCMPEQUD = 651;
  static const int PPC_INS_VCMPEQUH = 652;
  static const int PPC_INS_VCMPEQUW = 653;
  static const int PPC_INS_VCMPGEFP = 654;
  static const int PPC_INS_VCMPGTFP = 655;
  static const int PPC_INS_VCMPGTSB = 656;
  static const int PPC_INS_VCMPGTSD = 657;
  static const int PPC_INS_VCMPGTSH = 658;
  static const int PPC_INS_VCMPGTSW = 659;
  static const int PPC_INS_VCMPGTUB = 660;
  static const int PPC_INS_VCMPGTUD = 661;
  static const int PPC_INS_VCMPGTUH = 662;
  static const int PPC_INS_VCMPGTUW = 663;
  static const int PPC_INS_VCTSXS = 664;
  static const int PPC_INS_VCTUXS = 665;
  static const int PPC_INS_VEQV = 666;
  static const int PPC_INS_VEXPTEFP = 667;
  static const int PPC_INS_VLOGEFP = 668;
  static const int PPC_INS_VMADDFP = 669;
  static const int PPC_INS_VMAXFP = 670;
  static const int PPC_INS_VMAXSB = 671;
  static const int PPC_INS_VMAXSD = 672;
  static const int PPC_INS_VMAXSH = 673;
  static const int PPC_INS_VMAXSW = 674;
  static const int PPC_INS_VMAXUB = 675;
  static const int PPC_INS_VMAXUD = 676;
  static const int PPC_INS_VMAXUH = 677;
  static const int PPC_INS_VMAXUW = 678;
  static const int PPC_INS_VMHADDSHS = 679;
  static const int PPC_INS_VMHRADDSHS = 680;
  static const int PPC_INS_VMINUD = 681;
  static const int PPC_INS_VMINFP = 682;
  static const int PPC_INS_VMINSB = 683;
  static const int PPC_INS_VMINSD = 684;
  static const int PPC_INS_VMINSH = 685;
  static const int PPC_INS_VMINSW = 686;
  static const int PPC_INS_VMINUB = 687;
  static const int PPC_INS_VMINUH = 688;
  static const int PPC_INS_VMINUW = 689;
  static const int PPC_INS_VMLADDUHM = 690;
  static const int PPC_INS_VMRGHB = 691;
  static const int PPC_INS_VMRGHH = 692;
  static const int PPC_INS_VMRGHW = 693;
  static const int PPC_INS_VMRGLB = 694;
  static const int PPC_INS_VMRGLH = 695;
  static const int PPC_INS_VMRGLW = 696;
  static const int PPC_INS_VMSUMMBM = 697;
  static const int PPC_INS_VMSUMSHM = 698;
  static const int PPC_INS_VMSUMSHS = 699;
  static const int PPC_INS_VMSUMUBM = 700;
  static const int PPC_INS_VMSUMUHM = 701;
  static const int PPC_INS_VMSUMUHS = 702;
  static const int PPC_INS_VMULESB = 703;
  static const int PPC_INS_VMULESH = 704;
  static const int PPC_INS_VMULESW = 705;
  static const int PPC_INS_VMULEUB = 706;
  static const int PPC_INS_VMULEUH = 707;
  static const int PPC_INS_VMULEUW = 708;
  static const int PPC_INS_VMULOSB = 709;
  static const int PPC_INS_VMULOSH = 710;
  static const int PPC_INS_VMULOSW = 711;
  static const int PPC_INS_VMULOUB = 712;
  static const int PPC_INS_VMULOUH = 713;
  static const int PPC_INS_VMULOUW = 714;
  static const int PPC_INS_VMULUWM = 715;
  static const int PPC_INS_VNAND = 716;
  static const int PPC_INS_VNMSUBFP = 717;
  static const int PPC_INS_VNOR = 718;
  static const int PPC_INS_VOR = 719;
  static const int PPC_INS_VORC = 720;
  static const int PPC_INS_VPERM = 721;
  static const int PPC_INS_VPKPX = 722;
  static const int PPC_INS_VPKSHSS = 723;
  static const int PPC_INS_VPKSHUS = 724;
  static const int PPC_INS_VPKSWSS = 725;
  static const int PPC_INS_VPKSWUS = 726;
  static const int PPC_INS_VPKUHUM = 727;
  static const int PPC_INS_VPKUHUS = 728;
  static const int PPC_INS_VPKUWUM = 729;
  static const int PPC_INS_VPKUWUS = 730;
  static const int PPC_INS_VPOPCNTB = 731;
  static const int PPC_INS_VPOPCNTD = 732;
  static const int PPC_INS_VPOPCNTH = 733;
  static const int PPC_INS_VPOPCNTW = 734;
  static const int PPC_INS_VREFP = 735;
  static const int PPC_INS_VRFIM = 736;
  static const int PPC_INS_VRFIN = 737;
  static const int PPC_INS_VRFIP = 738;
  static const int PPC_INS_VRFIZ = 739;
  static const int PPC_INS_VRLB = 740;
  static const int PPC_INS_VRLD = 741;
  static const int PPC_INS_VRLH = 742;
  static const int PPC_INS_VRLW = 743;
  static const int PPC_INS_VRSQRTEFP = 744;
  static const int PPC_INS_VSEL = 745;
  static const int PPC_INS_VSL = 746;
  static const int PPC_INS_VSLB = 747;
  static const int PPC_INS_VSLD = 748;
  static const int PPC_INS_VSLDOI = 749;
  static const int PPC_INS_VSLH = 750;
  static const int PPC_INS_VSLO = 751;
  static const int PPC_INS_VSLW = 752;
  static const int PPC_INS_VSPLTB = 753;
  static const int PPC_INS_VSPLTH = 754;
  static const int PPC_INS_VSPLTISB = 755;
  static const int PPC_INS_VSPLTISH = 756;
  static const int PPC_INS_VSPLTISW = 757;
  static const int PPC_INS_VSPLTW = 758;
  static const int PPC_INS_VSR = 759;
  static const int PPC_INS_VSRAB = 760;
  static const int PPC_INS_VSRAD = 761;
  static const int PPC_INS_VSRAH = 762;
  static const int PPC_INS_VSRAW = 763;
  static const int PPC_INS_VSRB = 764;
  static const int PPC_INS_VSRD = 765;
  static const int PPC_INS_VSRH = 766;
  static const int PPC_INS_VSRO = 767;
  static const int PPC_INS_VSRW = 768;
  static const int PPC_INS_VSUBCUW = 769;
  static const int PPC_INS_VSUBFP = 770;
  static const int PPC_INS_VSUBSBS = 771;
  static const int PPC_INS_VSUBSHS = 772;
  static const int PPC_INS_VSUBSWS = 773;
  static const int PPC_INS_VSUBUBM = 774;
  static const int PPC_INS_VSUBUBS = 775;
  static const int PPC_INS_VSUBUDM = 776;
  static const int PPC_INS_VSUBUHM = 777;
  static const int PPC_INS_VSUBUHS = 778;
  static const int PPC_INS_VSUBUWM = 779;
  static const int PPC_INS_VSUBUWS = 780;
  static const int PPC_INS_VSUM2SWS = 781;
  static const int PPC_INS_VSUM4SBS = 782;
  static const int PPC_INS_VSUM4SHS = 783;
  static const int PPC_INS_VSUM4UBS = 784;
  static const int PPC_INS_VSUMSWS = 785;
  static const int PPC_INS_VUPKHPX = 786;
  static const int PPC_INS_VUPKHSB = 787;
  static const int PPC_INS_VUPKHSH = 788;
  static const int PPC_INS_VUPKLPX = 789;
  static const int PPC_INS_VUPKLSB = 790;
  static const int PPC_INS_VUPKLSH = 791;
  static const int PPC_INS_VXOR = 792;
  static const int PPC_INS_WAIT = 793;
  static const int PPC_INS_WRTEE = 794;
  static const int PPC_INS_WRTEEI = 795;
  static const int PPC_INS_XOR = 796;
  static const int PPC_INS_XORI = 797;
  static const int PPC_INS_XORIS = 798;
  static const int PPC_INS_XSABSDP = 799;
  static const int PPC_INS_XSADDDP = 800;
  static const int PPC_INS_XSCMPODP = 801;
  static const int PPC_INS_XSCMPUDP = 802;
  static const int PPC_INS_XSCPSGNDP = 803;
  static const int PPC_INS_XSCVDPSP = 804;
  static const int PPC_INS_XSCVDPSXDS = 805;
  static const int PPC_INS_XSCVDPSXWS = 806;
  static const int PPC_INS_XSCVDPUXDS = 807;
  static const int PPC_INS_XSCVDPUXWS = 808;
  static const int PPC_INS_XSCVSPDP = 809;
  static const int PPC_INS_XSCVSXDDP = 810;
  static const int PPC_INS_XSCVUXDDP = 811;
  static const int PPC_INS_XSDIVDP = 812;
  static const int PPC_INS_XSMADDADP = 813;
  static const int PPC_INS_XSMADDMDP = 814;
  static const int PPC_INS_XSMAXDP = 815;
  static const int PPC_INS_XSMINDP = 816;
  static const int PPC_INS_XSMSUBADP = 817;
  static const int PPC_INS_XSMSUBMDP = 818;
  static const int PPC_INS_XSMULDP = 819;
  static const int PPC_INS_XSNABSDP = 820;
  static const int PPC_INS_XSNEGDP = 821;
  static const int PPC_INS_XSNMADDADP = 822;
  static const int PPC_INS_XSNMADDMDP = 823;
  static const int PPC_INS_XSNMSUBADP = 824;
  static const int PPC_INS_XSNMSUBMDP = 825;
  static const int PPC_INS_XSRDPI = 826;
  static const int PPC_INS_XSRDPIC = 827;
  static const int PPC_INS_XSRDPIM = 828;
  static const int PPC_INS_XSRDPIP = 829;
  static const int PPC_INS_XSRDPIZ = 830;
  static const int PPC_INS_XSREDP = 831;
  static const int PPC_INS_XSRSQRTEDP = 832;
  static const int PPC_INS_XSSQRTDP = 833;
  static const int PPC_INS_XSSUBDP = 834;
  static const int PPC_INS_XSTDIVDP = 835;
  static const int PPC_INS_XSTSQRTDP = 836;
  static const int PPC_INS_XVABSDP = 837;
  static const int PPC_INS_XVABSSP = 838;
  static const int PPC_INS_XVADDDP = 839;
  static const int PPC_INS_XVADDSP = 840;
  static const int PPC_INS_XVCMPEQDP = 841;
  static const int PPC_INS_XVCMPEQSP = 842;
  static const int PPC_INS_XVCMPGEDP = 843;
  static const int PPC_INS_XVCMPGESP = 844;
  static const int PPC_INS_XVCMPGTDP = 845;
  static const int PPC_INS_XVCMPGTSP = 846;
  static const int PPC_INS_XVCPSGNDP = 847;
  static const int PPC_INS_XVCPSGNSP = 848;
  static const int PPC_INS_XVCVDPSP = 849;
  static const int PPC_INS_XVCVDPSXDS = 850;
  static const int PPC_INS_XVCVDPSXWS = 851;
  static const int PPC_INS_XVCVDPUXDS = 852;
  static const int PPC_INS_XVCVDPUXWS = 853;
  static const int PPC_INS_XVCVSPDP = 854;
  static const int PPC_INS_XVCVSPSXDS = 855;
  static const int PPC_INS_XVCVSPSXWS = 856;
  static const int PPC_INS_XVCVSPUXDS = 857;
  static const int PPC_INS_XVCVSPUXWS = 858;
  static const int PPC_INS_XVCVSXDDP = 859;
  static const int PPC_INS_XVCVSXDSP = 860;
  static const int PPC_INS_XVCVSXWDP = 861;
  static const int PPC_INS_XVCVSXWSP = 862;
  static const int PPC_INS_XVCVUXDDP = 863;
  static const int PPC_INS_XVCVUXDSP = 864;
  static const int PPC_INS_XVCVUXWDP = 865;
  static const int PPC_INS_XVCVUXWSP = 866;
  static const int PPC_INS_XVDIVDP = 867;
  static const int PPC_INS_XVDIVSP = 868;
  static const int PPC_INS_XVMADDADP = 869;
  static const int PPC_INS_XVMADDASP = 870;
  static const int PPC_INS_XVMADDMDP = 871;
  static const int PPC_INS_XVMADDMSP = 872;
  static const int PPC_INS_XVMAXDP = 873;
  static const int PPC_INS_XVMAXSP = 874;
  static const int PPC_INS_XVMINDP = 875;
  static const int PPC_INS_XVMINSP = 876;
  static const int PPC_INS_XVMSUBADP = 877;
  static const int PPC_INS_XVMSUBASP = 878;
  static const int PPC_INS_XVMSUBMDP = 879;
  static const int PPC_INS_XVMSUBMSP = 880;
  static const int PPC_INS_XVMULDP = 881;
  static const int PPC_INS_XVMULSP = 882;
  static const int PPC_INS_XVNABSDP = 883;
  static const int PPC_INS_XVNABSSP = 884;
  static const int PPC_INS_XVNEGDP = 885;
  static const int PPC_INS_XVNEGSP = 886;
  static const int PPC_INS_XVNMADDADP = 887;
  static const int PPC_INS_XVNMADDASP = 888;
  static const int PPC_INS_XVNMADDMDP = 889;
  static const int PPC_INS_XVNMADDMSP = 890;
  static const int PPC_INS_XVNMSUBADP = 891;
  static const int PPC_INS_XVNMSUBASP = 892;
  static const int PPC_INS_XVNMSUBMDP = 893;
  static const int PPC_INS_XVNMSUBMSP = 894;
  static const int PPC_INS_XVRDPI = 895;
  static const int PPC_INS_XVRDPIC = 896;
  static const int PPC_INS_XVRDPIM = 897;
  static const int PPC_INS_XVRDPIP = 898;
  static const int PPC_INS_XVRDPIZ = 899;
  static const int PPC_INS_XVREDP = 900;
  static const int PPC_INS_XVRESP = 901;
  static const int PPC_INS_XVRSPI = 902;
  static const int PPC_INS_XVRSPIC = 903;
  static const int PPC_INS_XVRSPIM = 904;
  static const int PPC_INS_XVRSPIP = 905;
  static const int PPC_INS_XVRSPIZ = 906;
  static const int PPC_INS_XVRSQRTEDP = 907;
  static const int PPC_INS_XVRSQRTESP = 908;
  static const int PPC_INS_XVSQRTDP = 909;
  static const int PPC_INS_XVSQRTSP = 910;
  static const int PPC_INS_XVSUBDP = 911;
  static const int PPC_INS_XVSUBSP = 912;
  static const int PPC_INS_XVTDIVDP = 913;
  static const int PPC_INS_XVTDIVSP = 914;
  static const int PPC_INS_XVTSQRTDP = 915;
  static const int PPC_INS_XVTSQRTSP = 916;
  static const int PPC_INS_XXLAND = 917;
  static const int PPC_INS_XXLANDC = 918;
  static const int PPC_INS_XXLEQV = 919;
  static const int PPC_INS_XXLNAND = 920;
  static const int PPC_INS_XXLNOR = 921;
  static const int PPC_INS_XXLOR = 922;
  static const int PPC_INS_XXLORC = 923;
  static const int PPC_INS_XXLXOR = 924;
  static const int PPC_INS_XXMRGHW = 925;
  static const int PPC_INS_XXMRGLW = 926;
  static const int PPC_INS_XXPERMDI = 927;
  static const int PPC_INS_XXSEL = 928;
  static const int PPC_INS_XXSLDWI = 929;
  static const int PPC_INS_XXSPLTW = 930;
  static const int PPC_INS_BCA = 931;
  static const int PPC_INS_BCLA = 932;
  static const int PPC_INS_SLWI = 933;
  static const int PPC_INS_SRWI = 934;
  static const int PPC_INS_SLDI = 935;
  static const int PPC_INS_BTA = 936;
  static const int PPC_INS_CRSET = 937;
  static const int PPC_INS_CRNOT = 938;
  static const int PPC_INS_CRMOVE = 939;
  static const int PPC_INS_CRCLR = 940;
  static const int PPC_INS_MFBR0 = 941;
  static const int PPC_INS_MFBR1 = 942;
  static const int PPC_INS_MFBR2 = 943;
  static const int PPC_INS_MFBR3 = 944;
  static const int PPC_INS_MFBR4 = 945;
  static const int PPC_INS_MFBR5 = 946;
  static const int PPC_INS_MFBR6 = 947;
  static const int PPC_INS_MFBR7 = 948;
  static const int PPC_INS_MFXER = 949;
  static const int PPC_INS_MFRTCU = 950;
  static const int PPC_INS_MFRTCL = 951;
  static const int PPC_INS_MFDSCR = 952;
  static const int PPC_INS_MFDSISR = 953;
  static const int PPC_INS_MFDAR = 954;
  static const int PPC_INS_MFSRR2 = 955;
  static const int PPC_INS_MFSRR3 = 956;
  static const int PPC_INS_MFCFAR = 957;
  static const int PPC_INS_MFAMR = 958;
  static const int PPC_INS_MFPID = 959;
  static const int PPC_INS_MFTBLO = 960;
  static const int PPC_INS_MFTBHI = 961;
  static const int PPC_INS_MFDBATU = 962;
  static const int PPC_INS_MFDBATL = 963;
  static const int PPC_INS_MFIBATU = 964;
  static const int PPC_INS_MFIBATL = 965;
  static const int PPC_INS_MFDCCR = 966;
  static const int PPC_INS_MFICCR = 967;
  static const int PPC_INS_MFDEAR = 968;
  static const int PPC_INS_MFESR = 969;
  static const int PPC_INS_MFSPEFSCR = 970;
  static const int PPC_INS_MFTCR = 971;
  static const int PPC_INS_MFASR = 972;
  static const int PPC_INS_MFPVR = 973;
  static const int PPC_INS_MFTBU = 974;
  static const int PPC_INS_MTCR = 975;
  static const int PPC_INS_MTBR0 = 976;
  static const int PPC_INS_MTBR1 = 977;
  static const int PPC_INS_MTBR2 = 978;
  static const int PPC_INS_MTBR3 = 979;
  static const int PPC_INS_MTBR4 = 980;
  static const int PPC_INS_MTBR5 = 981;
  static const int PPC_INS_MTBR6 = 982;
  static const int PPC_INS_MTBR7 = 983;
  static const int PPC_INS_MTXER = 984;
  static const int PPC_INS_MTDSCR = 985;
  static const int PPC_INS_MTDSISR = 986;
  static const int PPC_INS_MTDAR = 987;
  static const int PPC_INS_MTSRR2 = 988;
  static const int PPC_INS_MTSRR3 = 989;
  static const int PPC_INS_MTCFAR = 990;
  static const int PPC_INS_MTAMR = 991;
  static const int PPC_INS_MTPID = 992;
  static const int PPC_INS_MTTBL = 993;
  static const int PPC_INS_MTTBU = 994;
  static const int PPC_INS_MTTBLO = 995;
  static const int PPC_INS_MTTBHI = 996;
  static const int PPC_INS_MTDBATU = 997;
  static const int PPC_INS_MTDBATL = 998;
  static const int PPC_INS_MTIBATU = 999;
  static const int PPC_INS_MTIBATL = 1000;
  static const int PPC_INS_MTDCCR = 1001;
  static const int PPC_INS_MTICCR = 1002;
  static const int PPC_INS_MTDEAR = 1003;
  static const int PPC_INS_MTESR = 1004;
  static const int PPC_INS_MTSPEFSCR = 1005;
  static const int PPC_INS_MTTCR = 1006;
  static const int PPC_INS_NOT = 1007;
  static const int PPC_INS_MR = 1008;
  static const int PPC_INS_ROTLD = 1009;
  static const int PPC_INS_ROTLDI = 1010;
  static const int PPC_INS_CLRLDI = 1011;
  static const int PPC_INS_ROTLWI = 1012;
  static const int PPC_INS_CLRLWI = 1013;
  static const int PPC_INS_ROTLW = 1014;
  static const int PPC_INS_SUB = 1015;
  static const int PPC_INS_SUBC = 1016;
  static const int PPC_INS_LWSYNC = 1017;
  static const int PPC_INS_PTESYNC = 1018;
  static const int PPC_INS_TDLT = 1019;
  static const int PPC_INS_TDEQ = 1020;
  static const int PPC_INS_TDGT = 1021;
  static const int PPC_INS_TDNE = 1022;
  static const int PPC_INS_TDLLT = 1023;
  static const int PPC_INS_TDLGT = 1024;
  static const int PPC_INS_TDU = 1025;
  static const int PPC_INS_TDLTI = 1026;
  static const int PPC_INS_TDEQI = 1027;
  static const int PPC_INS_TDGTI = 1028;
  static const int PPC_INS_TDNEI = 1029;
  static const int PPC_INS_TDLLTI = 1030;
  static const int PPC_INS_TDLGTI = 1031;
  static const int PPC_INS_TDUI = 1032;
  static const int PPC_INS_TLBREHI = 1033;
  static const int PPC_INS_TLBRELO = 1034;
  static const int PPC_INS_TLBWEHI = 1035;
  static const int PPC_INS_TLBWELO = 1036;
  static const int PPC_INS_TWLT = 1037;
  static const int PPC_INS_TWEQ = 1038;
  static const int PPC_INS_TWGT = 1039;
  static const int PPC_INS_TWNE = 1040;
  static const int PPC_INS_TWLLT = 1041;
  static const int PPC_INS_TWLGT = 1042;
  static const int PPC_INS_TWU = 1043;
  static const int PPC_INS_TWLTI = 1044;
  static const int PPC_INS_TWEQI = 1045;
  static const int PPC_INS_TWGTI = 1046;
  static const int PPC_INS_TWNEI = 1047;
  static const int PPC_INS_TWLLTI = 1048;
  static const int PPC_INS_TWLGTI = 1049;
  static const int PPC_INS_TWUI = 1050;
  static const int PPC_INS_WAITRSV = 1051;
  static const int PPC_INS_WAITIMPL = 1052;
  static const int PPC_INS_XNOP = 1053;
  static const int PPC_INS_XVMOVDP = 1054;
  static const int PPC_INS_XVMOVSP = 1055;
  static const int PPC_INS_XXSPLTD = 1056;
  static const int PPC_INS_XXMRGHD = 1057;
  static const int PPC_INS_XXMRGLD = 1058;
  static const int PPC_INS_XXSWAPD = 1059;
  static const int PPC_INS_BT = 1060;
  static const int PPC_INS_BF = 1061;
  static const int PPC_INS_BDNZT = 1062;
  static const int PPC_INS_BDNZF = 1063;
  static const int PPC_INS_BDZF = 1064;
  static const int PPC_INS_BDZT = 1065;
  static const int PPC_INS_BFA = 1066;
  static const int PPC_INS_BDNZTA = 1067;
  static const int PPC_INS_BDNZFA = 1068;
  static const int PPC_INS_BDZTA = 1069;
  static const int PPC_INS_BDZFA = 1070;
  static const int PPC_INS_BTCTR = 1071;
  static const int PPC_INS_BFCTR = 1072;
  static const int PPC_INS_BTCTRL = 1073;
  static const int PPC_INS_BFCTRL = 1074;
  static const int PPC_INS_BTL = 1075;
  static const int PPC_INS_BFL = 1076;
  static const int PPC_INS_BDNZTL = 1077;
  static const int PPC_INS_BDNZFL = 1078;
  static const int PPC_INS_BDZTL = 1079;
  static const int PPC_INS_BDZFL = 1080;
  static const int PPC_INS_BTLA = 1081;
  static const int PPC_INS_BFLA = 1082;
  static const int PPC_INS_BDNZTLA = 1083;
  static const int PPC_INS_BDNZFLA = 1084;
  static const int PPC_INS_BDZTLA = 1085;
  static const int PPC_INS_BDZFLA = 1086;
  static const int PPC_INS_BTLR = 1087;
  static const int PPC_INS_BFLR = 1088;
  static const int PPC_INS_BDNZTLR = 1089;
  static const int PPC_INS_BDZTLR = 1090;
  static const int PPC_INS_BDZFLR = 1091;
  static const int PPC_INS_BTLRL = 1092;
  static const int PPC_INS_BFLRL = 1093;
  static const int PPC_INS_BDNZTLRL = 1094;
  static const int PPC_INS_BDNZFLRL = 1095;
  static const int PPC_INS_BDZTLRL = 1096;
  static const int PPC_INS_BDZFLRL = 1097;
  static const int PPC_INS_QVFAND = 1098;
  static const int PPC_INS_QVFCLR = 1099;
  static const int PPC_INS_QVFANDC = 1100;
  static const int PPC_INS_QVFCTFB = 1101;
  static const int PPC_INS_QVFXOR = 1102;
  static const int PPC_INS_QVFOR = 1103;
  static const int PPC_INS_QVFNOR = 1104;
  static const int PPC_INS_QVFEQU = 1105;
  static const int PPC_INS_QVFNOT = 1106;
  static const int PPC_INS_QVFORC = 1107;
  static const int PPC_INS_QVFNAND = 1108;
  static const int PPC_INS_QVFSET = 1109;
  static const int PPC_INS_ENDING = 1110;
}

/// Group of PPC instructions
abstract class ppc_insn_group {
  /// < = CS_GRP_INVALID
  static const int PPC_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int PPC_GRP_JUMP = 1;
  static const int PPC_GRP_ALTIVEC = 128;
  static const int PPC_GRP_MODE32 = 129;
  static const int PPC_GRP_MODE64 = 130;
  static const int PPC_GRP_BOOKE = 131;
  static const int PPC_GRP_NOTBOOKE = 132;
  static const int PPC_GRP_SPE = 133;
  static const int PPC_GRP_VSX = 134;
  static const int PPC_GRP_E500 = 135;
  static const int PPC_GRP_PPC4XX = 136;
  static const int PPC_GRP_PPC6XX = 137;
  static const int PPC_GRP_ICBT = 138;
  static const int PPC_GRP_P8ALTIVEC = 139;
  static const int PPC_GRP_P8VECTOR = 140;
  static const int PPC_GRP_QPX = 141;
  static const int PPC_GRP_ENDING = 142;
}

/// Enums corresponding to Sparc condition codes, both icc's and fcc's.
abstract class sparc_cc {
  /// < invalid CC (default)
  static const int SPARC_CC_INVALID = 0;

  /// < Always
  static const int SPARC_CC_ICC_A = 264;

  /// < Never
  static const int SPARC_CC_ICC_N = 256;

  /// < Not Equal
  static const int SPARC_CC_ICC_NE = 265;

  /// < Equal
  static const int SPARC_CC_ICC_E = 257;

  /// < Greater
  static const int SPARC_CC_ICC_G = 266;

  /// < Less or Equal
  static const int SPARC_CC_ICC_LE = 258;

  /// < Greater or Equal
  static const int SPARC_CC_ICC_GE = 267;

  /// < Less
  static const int SPARC_CC_ICC_L = 259;

  /// < Greater Unsigned
  static const int SPARC_CC_ICC_GU = 268;

  /// < Less or Equal Unsigned
  static const int SPARC_CC_ICC_LEU = 260;

  /// < Carry Clear/Great or Equal Unsigned
  static const int SPARC_CC_ICC_CC = 269;

  /// < Carry Set/Less Unsigned
  static const int SPARC_CC_ICC_CS = 261;

  /// < Positive
  static const int SPARC_CC_ICC_POS = 270;

  /// < Negative
  static const int SPARC_CC_ICC_NEG = 262;

  /// < Overflow Clear
  static const int SPARC_CC_ICC_VC = 271;

  /// < Overflow Set
  static const int SPARC_CC_ICC_VS = 263;

  /// < Always
  static const int SPARC_CC_FCC_A = 280;

  /// < Never
  static const int SPARC_CC_FCC_N = 272;

  /// < Unordered
  static const int SPARC_CC_FCC_U = 279;

  /// < Greater
  static const int SPARC_CC_FCC_G = 278;

  /// < Unordered or Greater
  static const int SPARC_CC_FCC_UG = 277;

  /// < Less
  static const int SPARC_CC_FCC_L = 276;

  /// < Unordered or Less
  static const int SPARC_CC_FCC_UL = 275;

  /// < Less or Greater
  static const int SPARC_CC_FCC_LG = 274;

  /// < Not Equal
  static const int SPARC_CC_FCC_NE = 273;

  /// < Equal
  static const int SPARC_CC_FCC_E = 281;

  /// < Unordered or Equal
  static const int SPARC_CC_FCC_UE = 282;

  /// < Greater or Equal
  static const int SPARC_CC_FCC_GE = 283;

  /// < Unordered or Greater or Equal
  static const int SPARC_CC_FCC_UGE = 284;

  /// < Less or Equal
  static const int SPARC_CC_FCC_LE = 285;

  /// < Unordered or Less or Equal
  static const int SPARC_CC_FCC_ULE = 286;

  /// < Ordered
  static const int SPARC_CC_FCC_O = 287;
}

/// Branch hint
abstract class sparc_hint {
  /// < no hint
  static const int SPARC_HINT_INVALID = 0;

  /// < annul delay slot instruction
  static const int SPARC_HINT_A = 1;

  /// < branch taken
  static const int SPARC_HINT_PT = 2;

  /// < branch NOT taken
  static const int SPARC_HINT_PN = 4;
}

/// Operand type for instruction's operands
abstract class sparc_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int SPARC_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int SPARC_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int SPARC_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int SPARC_OP_MEM = 3;
}

/// SPARC registers
abstract class sparc_reg {
  static const int SPARC_REG_INVALID = 0;
  static const int SPARC_REG_F0 = 1;
  static const int SPARC_REG_F1 = 2;
  static const int SPARC_REG_F2 = 3;
  static const int SPARC_REG_F3 = 4;
  static const int SPARC_REG_F4 = 5;
  static const int SPARC_REG_F5 = 6;
  static const int SPARC_REG_F6 = 7;
  static const int SPARC_REG_F7 = 8;
  static const int SPARC_REG_F8 = 9;
  static const int SPARC_REG_F9 = 10;
  static const int SPARC_REG_F10 = 11;
  static const int SPARC_REG_F11 = 12;
  static const int SPARC_REG_F12 = 13;
  static const int SPARC_REG_F13 = 14;
  static const int SPARC_REG_F14 = 15;
  static const int SPARC_REG_F15 = 16;
  static const int SPARC_REG_F16 = 17;
  static const int SPARC_REG_F17 = 18;
  static const int SPARC_REG_F18 = 19;
  static const int SPARC_REG_F19 = 20;
  static const int SPARC_REG_F20 = 21;
  static const int SPARC_REG_F21 = 22;
  static const int SPARC_REG_F22 = 23;
  static const int SPARC_REG_F23 = 24;
  static const int SPARC_REG_F24 = 25;
  static const int SPARC_REG_F25 = 26;
  static const int SPARC_REG_F26 = 27;
  static const int SPARC_REG_F27 = 28;
  static const int SPARC_REG_F28 = 29;
  static const int SPARC_REG_F29 = 30;
  static const int SPARC_REG_F30 = 31;
  static const int SPARC_REG_F31 = 32;
  static const int SPARC_REG_F32 = 33;
  static const int SPARC_REG_F34 = 34;
  static const int SPARC_REG_F36 = 35;
  static const int SPARC_REG_F38 = 36;
  static const int SPARC_REG_F40 = 37;
  static const int SPARC_REG_F42 = 38;
  static const int SPARC_REG_F44 = 39;
  static const int SPARC_REG_F46 = 40;
  static const int SPARC_REG_F48 = 41;
  static const int SPARC_REG_F50 = 42;
  static const int SPARC_REG_F52 = 43;
  static const int SPARC_REG_F54 = 44;
  static const int SPARC_REG_F56 = 45;
  static const int SPARC_REG_F58 = 46;
  static const int SPARC_REG_F60 = 47;
  static const int SPARC_REG_F62 = 48;
  static const int SPARC_REG_FCC0 = 49;
  static const int SPARC_REG_FCC1 = 50;
  static const int SPARC_REG_FCC2 = 51;
  static const int SPARC_REG_FCC3 = 52;
  static const int SPARC_REG_FP = 53;
  static const int SPARC_REG_G0 = 54;
  static const int SPARC_REG_G1 = 55;
  static const int SPARC_REG_G2 = 56;
  static const int SPARC_REG_G3 = 57;
  static const int SPARC_REG_G4 = 58;
  static const int SPARC_REG_G5 = 59;
  static const int SPARC_REG_G6 = 60;
  static const int SPARC_REG_G7 = 61;
  static const int SPARC_REG_I0 = 62;
  static const int SPARC_REG_I1 = 63;
  static const int SPARC_REG_I2 = 64;
  static const int SPARC_REG_I3 = 65;
  static const int SPARC_REG_I4 = 66;
  static const int SPARC_REG_I5 = 67;
  static const int SPARC_REG_I7 = 68;
  static const int SPARC_REG_ICC = 69;
  static const int SPARC_REG_L0 = 70;
  static const int SPARC_REG_L1 = 71;
  static const int SPARC_REG_L2 = 72;
  static const int SPARC_REG_L3 = 73;
  static const int SPARC_REG_L4 = 74;
  static const int SPARC_REG_L5 = 75;
  static const int SPARC_REG_L6 = 76;
  static const int SPARC_REG_L7 = 77;
  static const int SPARC_REG_O0 = 78;
  static const int SPARC_REG_O1 = 79;
  static const int SPARC_REG_O2 = 80;
  static const int SPARC_REG_O3 = 81;
  static const int SPARC_REG_O4 = 82;
  static const int SPARC_REG_O5 = 83;
  static const int SPARC_REG_O7 = 84;
  static const int SPARC_REG_SP = 85;
  static const int SPARC_REG_Y = 86;
  static const int SPARC_REG_XCC = 87;
  static const int SPARC_REG_ENDING = 88;
  static const int SPARC_REG_O6 = 85;
  static const int SPARC_REG_I6 = 53;
}

/// Instruction's operand referring to memory
/// This is associated with SPARC_OP_MEM operand type above
class sparc_op_mem extends ffi.Struct {
  /// < base register, can be safely interpreted as
  /// < a value of type `sparc_reg`, but it is only
  /// < one byte wide
  @ffi.Uint8()
  external int base;

  /// < index register, same conditions apply here
  @ffi.Uint8()
  external int index;

  /// < displacement/offset value
  @ffi.Int32()
  external int disp;
}

/// Instruction operand
class cs_sparc_op extends ffi.Struct {
  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion7 unnamed;
}

class UnnamedUnion7 extends ffi.Union {
  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < immediate value for IMM operand
  @ffi.Int64()
  external int imm;

  /// < base/disp value for MEM operand
  external sparc_op_mem mem;
}

/// Instruction structure
class cs_sparc extends ffi.Struct {
  /// < code condition for this insn
  @ffi.Int32()
  external int cc;

  /// < branch hint: encoding as bitwise OR of sparc_hint.
  @ffi.Int32()
  external int hint;

  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([4])
  external ffi.Array<cs_sparc_op> operands;
}

/// SPARC instruction
abstract class sparc_insn {
  static const int SPARC_INS_INVALID = 0;
  static const int SPARC_INS_ADDCC = 1;
  static const int SPARC_INS_ADDX = 2;
  static const int SPARC_INS_ADDXCC = 3;
  static const int SPARC_INS_ADDXC = 4;
  static const int SPARC_INS_ADDXCCC = 5;
  static const int SPARC_INS_ADD = 6;
  static const int SPARC_INS_ALIGNADDR = 7;
  static const int SPARC_INS_ALIGNADDRL = 8;
  static const int SPARC_INS_ANDCC = 9;
  static const int SPARC_INS_ANDNCC = 10;
  static const int SPARC_INS_ANDN = 11;
  static const int SPARC_INS_AND = 12;
  static const int SPARC_INS_ARRAY16 = 13;
  static const int SPARC_INS_ARRAY32 = 14;
  static const int SPARC_INS_ARRAY8 = 15;
  static const int SPARC_INS_B = 16;
  static const int SPARC_INS_JMP = 17;
  static const int SPARC_INS_BMASK = 18;
  static const int SPARC_INS_FB = 19;
  static const int SPARC_INS_BRGEZ = 20;
  static const int SPARC_INS_BRGZ = 21;
  static const int SPARC_INS_BRLEZ = 22;
  static const int SPARC_INS_BRLZ = 23;
  static const int SPARC_INS_BRNZ = 24;
  static const int SPARC_INS_BRZ = 25;
  static const int SPARC_INS_BSHUFFLE = 26;
  static const int SPARC_INS_CALL = 27;
  static const int SPARC_INS_CASX = 28;
  static const int SPARC_INS_CAS = 29;
  static const int SPARC_INS_CMASK16 = 30;
  static const int SPARC_INS_CMASK32 = 31;
  static const int SPARC_INS_CMASK8 = 32;
  static const int SPARC_INS_CMP = 33;
  static const int SPARC_INS_EDGE16 = 34;
  static const int SPARC_INS_EDGE16L = 35;
  static const int SPARC_INS_EDGE16LN = 36;
  static const int SPARC_INS_EDGE16N = 37;
  static const int SPARC_INS_EDGE32 = 38;
  static const int SPARC_INS_EDGE32L = 39;
  static const int SPARC_INS_EDGE32LN = 40;
  static const int SPARC_INS_EDGE32N = 41;
  static const int SPARC_INS_EDGE8 = 42;
  static const int SPARC_INS_EDGE8L = 43;
  static const int SPARC_INS_EDGE8LN = 44;
  static const int SPARC_INS_EDGE8N = 45;
  static const int SPARC_INS_FABSD = 46;
  static const int SPARC_INS_FABSQ = 47;
  static const int SPARC_INS_FABSS = 48;
  static const int SPARC_INS_FADDD = 49;
  static const int SPARC_INS_FADDQ = 50;
  static const int SPARC_INS_FADDS = 51;
  static const int SPARC_INS_FALIGNDATA = 52;
  static const int SPARC_INS_FAND = 53;
  static const int SPARC_INS_FANDNOT1 = 54;
  static const int SPARC_INS_FANDNOT1S = 55;
  static const int SPARC_INS_FANDNOT2 = 56;
  static const int SPARC_INS_FANDNOT2S = 57;
  static const int SPARC_INS_FANDS = 58;
  static const int SPARC_INS_FCHKSM16 = 59;
  static const int SPARC_INS_FCMPD = 60;
  static const int SPARC_INS_FCMPEQ16 = 61;
  static const int SPARC_INS_FCMPEQ32 = 62;
  static const int SPARC_INS_FCMPGT16 = 63;
  static const int SPARC_INS_FCMPGT32 = 64;
  static const int SPARC_INS_FCMPLE16 = 65;
  static const int SPARC_INS_FCMPLE32 = 66;
  static const int SPARC_INS_FCMPNE16 = 67;
  static const int SPARC_INS_FCMPNE32 = 68;
  static const int SPARC_INS_FCMPQ = 69;
  static const int SPARC_INS_FCMPS = 70;
  static const int SPARC_INS_FDIVD = 71;
  static const int SPARC_INS_FDIVQ = 72;
  static const int SPARC_INS_FDIVS = 73;
  static const int SPARC_INS_FDMULQ = 74;
  static const int SPARC_INS_FDTOI = 75;
  static const int SPARC_INS_FDTOQ = 76;
  static const int SPARC_INS_FDTOS = 77;
  static const int SPARC_INS_FDTOX = 78;
  static const int SPARC_INS_FEXPAND = 79;
  static const int SPARC_INS_FHADDD = 80;
  static const int SPARC_INS_FHADDS = 81;
  static const int SPARC_INS_FHSUBD = 82;
  static const int SPARC_INS_FHSUBS = 83;
  static const int SPARC_INS_FITOD = 84;
  static const int SPARC_INS_FITOQ = 85;
  static const int SPARC_INS_FITOS = 86;
  static const int SPARC_INS_FLCMPD = 87;
  static const int SPARC_INS_FLCMPS = 88;
  static const int SPARC_INS_FLUSHW = 89;
  static const int SPARC_INS_FMEAN16 = 90;
  static const int SPARC_INS_FMOVD = 91;
  static const int SPARC_INS_FMOVQ = 92;
  static const int SPARC_INS_FMOVRDGEZ = 93;
  static const int SPARC_INS_FMOVRQGEZ = 94;
  static const int SPARC_INS_FMOVRSGEZ = 95;
  static const int SPARC_INS_FMOVRDGZ = 96;
  static const int SPARC_INS_FMOVRQGZ = 97;
  static const int SPARC_INS_FMOVRSGZ = 98;
  static const int SPARC_INS_FMOVRDLEZ = 99;
  static const int SPARC_INS_FMOVRQLEZ = 100;
  static const int SPARC_INS_FMOVRSLEZ = 101;
  static const int SPARC_INS_FMOVRDLZ = 102;
  static const int SPARC_INS_FMOVRQLZ = 103;
  static const int SPARC_INS_FMOVRSLZ = 104;
  static const int SPARC_INS_FMOVRDNZ = 105;
  static const int SPARC_INS_FMOVRQNZ = 106;
  static const int SPARC_INS_FMOVRSNZ = 107;
  static const int SPARC_INS_FMOVRDZ = 108;
  static const int SPARC_INS_FMOVRQZ = 109;
  static const int SPARC_INS_FMOVRSZ = 110;
  static const int SPARC_INS_FMOVS = 111;
  static const int SPARC_INS_FMUL8SUX16 = 112;
  static const int SPARC_INS_FMUL8ULX16 = 113;
  static const int SPARC_INS_FMUL8X16 = 114;
  static const int SPARC_INS_FMUL8X16AL = 115;
  static const int SPARC_INS_FMUL8X16AU = 116;
  static const int SPARC_INS_FMULD = 117;
  static const int SPARC_INS_FMULD8SUX16 = 118;
  static const int SPARC_INS_FMULD8ULX16 = 119;
  static const int SPARC_INS_FMULQ = 120;
  static const int SPARC_INS_FMULS = 121;
  static const int SPARC_INS_FNADDD = 122;
  static const int SPARC_INS_FNADDS = 123;
  static const int SPARC_INS_FNAND = 124;
  static const int SPARC_INS_FNANDS = 125;
  static const int SPARC_INS_FNEGD = 126;
  static const int SPARC_INS_FNEGQ = 127;
  static const int SPARC_INS_FNEGS = 128;
  static const int SPARC_INS_FNHADDD = 129;
  static const int SPARC_INS_FNHADDS = 130;
  static const int SPARC_INS_FNOR = 131;
  static const int SPARC_INS_FNORS = 132;
  static const int SPARC_INS_FNOT1 = 133;
  static const int SPARC_INS_FNOT1S = 134;
  static const int SPARC_INS_FNOT2 = 135;
  static const int SPARC_INS_FNOT2S = 136;
  static const int SPARC_INS_FONE = 137;
  static const int SPARC_INS_FONES = 138;
  static const int SPARC_INS_FOR = 139;
  static const int SPARC_INS_FORNOT1 = 140;
  static const int SPARC_INS_FORNOT1S = 141;
  static const int SPARC_INS_FORNOT2 = 142;
  static const int SPARC_INS_FORNOT2S = 143;
  static const int SPARC_INS_FORS = 144;
  static const int SPARC_INS_FPACK16 = 145;
  static const int SPARC_INS_FPACK32 = 146;
  static const int SPARC_INS_FPACKFIX = 147;
  static const int SPARC_INS_FPADD16 = 148;
  static const int SPARC_INS_FPADD16S = 149;
  static const int SPARC_INS_FPADD32 = 150;
  static const int SPARC_INS_FPADD32S = 151;
  static const int SPARC_INS_FPADD64 = 152;
  static const int SPARC_INS_FPMERGE = 153;
  static const int SPARC_INS_FPSUB16 = 154;
  static const int SPARC_INS_FPSUB16S = 155;
  static const int SPARC_INS_FPSUB32 = 156;
  static const int SPARC_INS_FPSUB32S = 157;
  static const int SPARC_INS_FQTOD = 158;
  static const int SPARC_INS_FQTOI = 159;
  static const int SPARC_INS_FQTOS = 160;
  static const int SPARC_INS_FQTOX = 161;
  static const int SPARC_INS_FSLAS16 = 162;
  static const int SPARC_INS_FSLAS32 = 163;
  static const int SPARC_INS_FSLL16 = 164;
  static const int SPARC_INS_FSLL32 = 165;
  static const int SPARC_INS_FSMULD = 166;
  static const int SPARC_INS_FSQRTD = 167;
  static const int SPARC_INS_FSQRTQ = 168;
  static const int SPARC_INS_FSQRTS = 169;
  static const int SPARC_INS_FSRA16 = 170;
  static const int SPARC_INS_FSRA32 = 171;
  static const int SPARC_INS_FSRC1 = 172;
  static const int SPARC_INS_FSRC1S = 173;
  static const int SPARC_INS_FSRC2 = 174;
  static const int SPARC_INS_FSRC2S = 175;
  static const int SPARC_INS_FSRL16 = 176;
  static const int SPARC_INS_FSRL32 = 177;
  static const int SPARC_INS_FSTOD = 178;
  static const int SPARC_INS_FSTOI = 179;
  static const int SPARC_INS_FSTOQ = 180;
  static const int SPARC_INS_FSTOX = 181;
  static const int SPARC_INS_FSUBD = 182;
  static const int SPARC_INS_FSUBQ = 183;
  static const int SPARC_INS_FSUBS = 184;
  static const int SPARC_INS_FXNOR = 185;
  static const int SPARC_INS_FXNORS = 186;
  static const int SPARC_INS_FXOR = 187;
  static const int SPARC_INS_FXORS = 188;
  static const int SPARC_INS_FXTOD = 189;
  static const int SPARC_INS_FXTOQ = 190;
  static const int SPARC_INS_FXTOS = 191;
  static const int SPARC_INS_FZERO = 192;
  static const int SPARC_INS_FZEROS = 193;
  static const int SPARC_INS_JMPL = 194;
  static const int SPARC_INS_LDD = 195;
  static const int SPARC_INS_LD = 196;
  static const int SPARC_INS_LDQ = 197;
  static const int SPARC_INS_LDSB = 198;
  static const int SPARC_INS_LDSH = 199;
  static const int SPARC_INS_LDSW = 200;
  static const int SPARC_INS_LDUB = 201;
  static const int SPARC_INS_LDUH = 202;
  static const int SPARC_INS_LDX = 203;
  static const int SPARC_INS_LZCNT = 204;
  static const int SPARC_INS_MEMBAR = 205;
  static const int SPARC_INS_MOVDTOX = 206;
  static const int SPARC_INS_MOV = 207;
  static const int SPARC_INS_MOVRGEZ = 208;
  static const int SPARC_INS_MOVRGZ = 209;
  static const int SPARC_INS_MOVRLEZ = 210;
  static const int SPARC_INS_MOVRLZ = 211;
  static const int SPARC_INS_MOVRNZ = 212;
  static const int SPARC_INS_MOVRZ = 213;
  static const int SPARC_INS_MOVSTOSW = 214;
  static const int SPARC_INS_MOVSTOUW = 215;
  static const int SPARC_INS_MULX = 216;
  static const int SPARC_INS_NOP = 217;
  static const int SPARC_INS_ORCC = 218;
  static const int SPARC_INS_ORNCC = 219;
  static const int SPARC_INS_ORN = 220;
  static const int SPARC_INS_OR = 221;
  static const int SPARC_INS_PDIST = 222;
  static const int SPARC_INS_PDISTN = 223;
  static const int SPARC_INS_POPC = 224;
  static const int SPARC_INS_RD = 225;
  static const int SPARC_INS_RESTORE = 226;
  static const int SPARC_INS_RETT = 227;
  static const int SPARC_INS_SAVE = 228;
  static const int SPARC_INS_SDIVCC = 229;
  static const int SPARC_INS_SDIVX = 230;
  static const int SPARC_INS_SDIV = 231;
  static const int SPARC_INS_SETHI = 232;
  static const int SPARC_INS_SHUTDOWN = 233;
  static const int SPARC_INS_SIAM = 234;
  static const int SPARC_INS_SLLX = 235;
  static const int SPARC_INS_SLL = 236;
  static const int SPARC_INS_SMULCC = 237;
  static const int SPARC_INS_SMUL = 238;
  static const int SPARC_INS_SRAX = 239;
  static const int SPARC_INS_SRA = 240;
  static const int SPARC_INS_SRLX = 241;
  static const int SPARC_INS_SRL = 242;
  static const int SPARC_INS_STBAR = 243;
  static const int SPARC_INS_STB = 244;
  static const int SPARC_INS_STD = 245;
  static const int SPARC_INS_ST = 246;
  static const int SPARC_INS_STH = 247;
  static const int SPARC_INS_STQ = 248;
  static const int SPARC_INS_STX = 249;
  static const int SPARC_INS_SUBCC = 250;
  static const int SPARC_INS_SUBX = 251;
  static const int SPARC_INS_SUBXCC = 252;
  static const int SPARC_INS_SUB = 253;
  static const int SPARC_INS_SWAP = 254;
  static const int SPARC_INS_TADDCCTV = 255;
  static const int SPARC_INS_TADDCC = 256;
  static const int SPARC_INS_T = 257;
  static const int SPARC_INS_TSUBCCTV = 258;
  static const int SPARC_INS_TSUBCC = 259;
  static const int SPARC_INS_UDIVCC = 260;
  static const int SPARC_INS_UDIVX = 261;
  static const int SPARC_INS_UDIV = 262;
  static const int SPARC_INS_UMULCC = 263;
  static const int SPARC_INS_UMULXHI = 264;
  static const int SPARC_INS_UMUL = 265;
  static const int SPARC_INS_UNIMP = 266;
  static const int SPARC_INS_FCMPED = 267;
  static const int SPARC_INS_FCMPEQ = 268;
  static const int SPARC_INS_FCMPES = 269;
  static const int SPARC_INS_WR = 270;
  static const int SPARC_INS_XMULX = 271;
  static const int SPARC_INS_XMULXHI = 272;
  static const int SPARC_INS_XNORCC = 273;
  static const int SPARC_INS_XNOR = 274;
  static const int SPARC_INS_XORCC = 275;
  static const int SPARC_INS_XOR = 276;
  static const int SPARC_INS_RET = 277;
  static const int SPARC_INS_RETL = 278;
  static const int SPARC_INS_ENDING = 279;
}

/// Group of SPARC instructions
abstract class sparc_insn_group {
  /// < = CS_GRP_INVALID
  static const int SPARC_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int SPARC_GRP_JUMP = 1;
  static const int SPARC_GRP_HARDQUAD = 128;
  static const int SPARC_GRP_V9 = 129;
  static const int SPARC_GRP_VIS = 130;
  static const int SPARC_GRP_VIS2 = 131;
  static const int SPARC_GRP_VIS3 = 132;
  static const int SPARC_GRP_32BIT = 133;
  static const int SPARC_GRP_64BIT = 134;
  static const int SPARC_GRP_ENDING = 135;
}

/// Enums corresponding to SystemZ condition codes
abstract class sysz_cc {
  /// < invalid CC (default)
  static const int SYSZ_CC_INVALID = 0;
  static const int SYSZ_CC_O = 1;
  static const int SYSZ_CC_H = 2;
  static const int SYSZ_CC_NLE = 3;
  static const int SYSZ_CC_L = 4;
  static const int SYSZ_CC_NHE = 5;
  static const int SYSZ_CC_LH = 6;
  static const int SYSZ_CC_NE = 7;
  static const int SYSZ_CC_E = 8;
  static const int SYSZ_CC_NLH = 9;
  static const int SYSZ_CC_HE = 10;
  static const int SYSZ_CC_NL = 11;
  static const int SYSZ_CC_LE = 12;
  static const int SYSZ_CC_NH = 13;
  static const int SYSZ_CC_NO = 14;
}

/// Operand type for instruction's operands
abstract class sysz_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int SYSZ_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int SYSZ_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int SYSZ_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int SYSZ_OP_MEM = 3;

  /// < Access register operand.
  static const int SYSZ_OP_ACREG = 64;
}

/// SystemZ registers
abstract class sysz_reg {
  static const int SYSZ_REG_INVALID = 0;
  static const int SYSZ_REG_0 = 1;
  static const int SYSZ_REG_1 = 2;
  static const int SYSZ_REG_2 = 3;
  static const int SYSZ_REG_3 = 4;
  static const int SYSZ_REG_4 = 5;
  static const int SYSZ_REG_5 = 6;
  static const int SYSZ_REG_6 = 7;
  static const int SYSZ_REG_7 = 8;
  static const int SYSZ_REG_8 = 9;
  static const int SYSZ_REG_9 = 10;
  static const int SYSZ_REG_10 = 11;
  static const int SYSZ_REG_11 = 12;
  static const int SYSZ_REG_12 = 13;
  static const int SYSZ_REG_13 = 14;
  static const int SYSZ_REG_14 = 15;
  static const int SYSZ_REG_15 = 16;
  static const int SYSZ_REG_CC = 17;
  static const int SYSZ_REG_F0 = 18;
  static const int SYSZ_REG_F1 = 19;
  static const int SYSZ_REG_F2 = 20;
  static const int SYSZ_REG_F3 = 21;
  static const int SYSZ_REG_F4 = 22;
  static const int SYSZ_REG_F5 = 23;
  static const int SYSZ_REG_F6 = 24;
  static const int SYSZ_REG_F7 = 25;
  static const int SYSZ_REG_F8 = 26;
  static const int SYSZ_REG_F9 = 27;
  static const int SYSZ_REG_F10 = 28;
  static const int SYSZ_REG_F11 = 29;
  static const int SYSZ_REG_F12 = 30;
  static const int SYSZ_REG_F13 = 31;
  static const int SYSZ_REG_F14 = 32;
  static const int SYSZ_REG_F15 = 33;
  static const int SYSZ_REG_R0L = 34;
  static const int SYSZ_REG_ENDING = 35;
}

/// Instruction's operand referring to memory
/// This is associated with SYSZ_OP_MEM operand type above
class sysz_op_mem extends ffi.Struct {
  /// < base register, can be safely interpreted as
  /// < a value of type `sysz_reg`, but it is only
  /// < one byte wide
  @ffi.Uint8()
  external int base;

  /// < index register, same conditions apply here
  @ffi.Uint8()
  external int index;

  /// < BDLAddr operand
  @ffi.Uint64()
  external int length;

  /// < displacement/offset value
  @ffi.Int64()
  external int disp;
}

/// Instruction operand
class cs_sysz_op extends ffi.Struct {
  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion8 unnamed;
}

class UnnamedUnion8 extends ffi.Union {
  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < immediate value for IMM operand
  @ffi.Int64()
  external int imm;

  /// < base/disp value for MEM operand
  external sysz_op_mem mem;
}

class cs_sysz extends ffi.Struct {
  /// < Code condition
  @ffi.Int32()
  external int cc;

  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([6])
  external ffi.Array<cs_sysz_op> operands;
}

/// SystemZ instruction
abstract class sysz_insn {
  static const int SYSZ_INS_INVALID = 0;
  static const int SYSZ_INS_A = 1;
  static const int SYSZ_INS_ADB = 2;
  static const int SYSZ_INS_ADBR = 3;
  static const int SYSZ_INS_AEB = 4;
  static const int SYSZ_INS_AEBR = 5;
  static const int SYSZ_INS_AFI = 6;
  static const int SYSZ_INS_AG = 7;
  static const int SYSZ_INS_AGF = 8;
  static const int SYSZ_INS_AGFI = 9;
  static const int SYSZ_INS_AGFR = 10;
  static const int SYSZ_INS_AGHI = 11;
  static const int SYSZ_INS_AGHIK = 12;
  static const int SYSZ_INS_AGR = 13;
  static const int SYSZ_INS_AGRK = 14;
  static const int SYSZ_INS_AGSI = 15;
  static const int SYSZ_INS_AH = 16;
  static const int SYSZ_INS_AHI = 17;
  static const int SYSZ_INS_AHIK = 18;
  static const int SYSZ_INS_AHY = 19;
  static const int SYSZ_INS_AIH = 20;
  static const int SYSZ_INS_AL = 21;
  static const int SYSZ_INS_ALC = 22;
  static const int SYSZ_INS_ALCG = 23;
  static const int SYSZ_INS_ALCGR = 24;
  static const int SYSZ_INS_ALCR = 25;
  static const int SYSZ_INS_ALFI = 26;
  static const int SYSZ_INS_ALG = 27;
  static const int SYSZ_INS_ALGF = 28;
  static const int SYSZ_INS_ALGFI = 29;
  static const int SYSZ_INS_ALGFR = 30;
  static const int SYSZ_INS_ALGHSIK = 31;
  static const int SYSZ_INS_ALGR = 32;
  static const int SYSZ_INS_ALGRK = 33;
  static const int SYSZ_INS_ALHSIK = 34;
  static const int SYSZ_INS_ALR = 35;
  static const int SYSZ_INS_ALRK = 36;
  static const int SYSZ_INS_ALY = 37;
  static const int SYSZ_INS_AR = 38;
  static const int SYSZ_INS_ARK = 39;
  static const int SYSZ_INS_ASI = 40;
  static const int SYSZ_INS_AXBR = 41;
  static const int SYSZ_INS_AY = 42;
  static const int SYSZ_INS_BCR = 43;
  static const int SYSZ_INS_BRC = 44;
  static const int SYSZ_INS_BRCL = 45;
  static const int SYSZ_INS_CGIJ = 46;
  static const int SYSZ_INS_CGRJ = 47;
  static const int SYSZ_INS_CIJ = 48;
  static const int SYSZ_INS_CLGIJ = 49;
  static const int SYSZ_INS_CLGRJ = 50;
  static const int SYSZ_INS_CLIJ = 51;
  static const int SYSZ_INS_CLRJ = 52;
  static const int SYSZ_INS_CRJ = 53;
  static const int SYSZ_INS_BER = 54;
  static const int SYSZ_INS_JE = 55;
  static const int SYSZ_INS_JGE = 56;
  static const int SYSZ_INS_LOCE = 57;
  static const int SYSZ_INS_LOCGE = 58;
  static const int SYSZ_INS_LOCGRE = 59;
  static const int SYSZ_INS_LOCRE = 60;
  static const int SYSZ_INS_STOCE = 61;
  static const int SYSZ_INS_STOCGE = 62;
  static const int SYSZ_INS_BHR = 63;
  static const int SYSZ_INS_BHER = 64;
  static const int SYSZ_INS_JHE = 65;
  static const int SYSZ_INS_JGHE = 66;
  static const int SYSZ_INS_LOCHE = 67;
  static const int SYSZ_INS_LOCGHE = 68;
  static const int SYSZ_INS_LOCGRHE = 69;
  static const int SYSZ_INS_LOCRHE = 70;
  static const int SYSZ_INS_STOCHE = 71;
  static const int SYSZ_INS_STOCGHE = 72;
  static const int SYSZ_INS_JH = 73;
  static const int SYSZ_INS_JGH = 74;
  static const int SYSZ_INS_LOCH = 75;
  static const int SYSZ_INS_LOCGH = 76;
  static const int SYSZ_INS_LOCGRH = 77;
  static const int SYSZ_INS_LOCRH = 78;
  static const int SYSZ_INS_STOCH = 79;
  static const int SYSZ_INS_STOCGH = 80;
  static const int SYSZ_INS_CGIJNLH = 81;
  static const int SYSZ_INS_CGRJNLH = 82;
  static const int SYSZ_INS_CIJNLH = 83;
  static const int SYSZ_INS_CLGIJNLH = 84;
  static const int SYSZ_INS_CLGRJNLH = 85;
  static const int SYSZ_INS_CLIJNLH = 86;
  static const int SYSZ_INS_CLRJNLH = 87;
  static const int SYSZ_INS_CRJNLH = 88;
  static const int SYSZ_INS_CGIJE = 89;
  static const int SYSZ_INS_CGRJE = 90;
  static const int SYSZ_INS_CIJE = 91;
  static const int SYSZ_INS_CLGIJE = 92;
  static const int SYSZ_INS_CLGRJE = 93;
  static const int SYSZ_INS_CLIJE = 94;
  static const int SYSZ_INS_CLRJE = 95;
  static const int SYSZ_INS_CRJE = 96;
  static const int SYSZ_INS_CGIJNLE = 97;
  static const int SYSZ_INS_CGRJNLE = 98;
  static const int SYSZ_INS_CIJNLE = 99;
  static const int SYSZ_INS_CLGIJNLE = 100;
  static const int SYSZ_INS_CLGRJNLE = 101;
  static const int SYSZ_INS_CLIJNLE = 102;
  static const int SYSZ_INS_CLRJNLE = 103;
  static const int SYSZ_INS_CRJNLE = 104;
  static const int SYSZ_INS_CGIJH = 105;
  static const int SYSZ_INS_CGRJH = 106;
  static const int SYSZ_INS_CIJH = 107;
  static const int SYSZ_INS_CLGIJH = 108;
  static const int SYSZ_INS_CLGRJH = 109;
  static const int SYSZ_INS_CLIJH = 110;
  static const int SYSZ_INS_CLRJH = 111;
  static const int SYSZ_INS_CRJH = 112;
  static const int SYSZ_INS_CGIJNL = 113;
  static const int SYSZ_INS_CGRJNL = 114;
  static const int SYSZ_INS_CIJNL = 115;
  static const int SYSZ_INS_CLGIJNL = 116;
  static const int SYSZ_INS_CLGRJNL = 117;
  static const int SYSZ_INS_CLIJNL = 118;
  static const int SYSZ_INS_CLRJNL = 119;
  static const int SYSZ_INS_CRJNL = 120;
  static const int SYSZ_INS_CGIJHE = 121;
  static const int SYSZ_INS_CGRJHE = 122;
  static const int SYSZ_INS_CIJHE = 123;
  static const int SYSZ_INS_CLGIJHE = 124;
  static const int SYSZ_INS_CLGRJHE = 125;
  static const int SYSZ_INS_CLIJHE = 126;
  static const int SYSZ_INS_CLRJHE = 127;
  static const int SYSZ_INS_CRJHE = 128;
  static const int SYSZ_INS_CGIJNHE = 129;
  static const int SYSZ_INS_CGRJNHE = 130;
  static const int SYSZ_INS_CIJNHE = 131;
  static const int SYSZ_INS_CLGIJNHE = 132;
  static const int SYSZ_INS_CLGRJNHE = 133;
  static const int SYSZ_INS_CLIJNHE = 134;
  static const int SYSZ_INS_CLRJNHE = 135;
  static const int SYSZ_INS_CRJNHE = 136;
  static const int SYSZ_INS_CGIJL = 137;
  static const int SYSZ_INS_CGRJL = 138;
  static const int SYSZ_INS_CIJL = 139;
  static const int SYSZ_INS_CLGIJL = 140;
  static const int SYSZ_INS_CLGRJL = 141;
  static const int SYSZ_INS_CLIJL = 142;
  static const int SYSZ_INS_CLRJL = 143;
  static const int SYSZ_INS_CRJL = 144;
  static const int SYSZ_INS_CGIJNH = 145;
  static const int SYSZ_INS_CGRJNH = 146;
  static const int SYSZ_INS_CIJNH = 147;
  static const int SYSZ_INS_CLGIJNH = 148;
  static const int SYSZ_INS_CLGRJNH = 149;
  static const int SYSZ_INS_CLIJNH = 150;
  static const int SYSZ_INS_CLRJNH = 151;
  static const int SYSZ_INS_CRJNH = 152;
  static const int SYSZ_INS_CGIJLE = 153;
  static const int SYSZ_INS_CGRJLE = 154;
  static const int SYSZ_INS_CIJLE = 155;
  static const int SYSZ_INS_CLGIJLE = 156;
  static const int SYSZ_INS_CLGRJLE = 157;
  static const int SYSZ_INS_CLIJLE = 158;
  static const int SYSZ_INS_CLRJLE = 159;
  static const int SYSZ_INS_CRJLE = 160;
  static const int SYSZ_INS_CGIJNE = 161;
  static const int SYSZ_INS_CGRJNE = 162;
  static const int SYSZ_INS_CIJNE = 163;
  static const int SYSZ_INS_CLGIJNE = 164;
  static const int SYSZ_INS_CLGRJNE = 165;
  static const int SYSZ_INS_CLIJNE = 166;
  static const int SYSZ_INS_CLRJNE = 167;
  static const int SYSZ_INS_CRJNE = 168;
  static const int SYSZ_INS_CGIJLH = 169;
  static const int SYSZ_INS_CGRJLH = 170;
  static const int SYSZ_INS_CIJLH = 171;
  static const int SYSZ_INS_CLGIJLH = 172;
  static const int SYSZ_INS_CLGRJLH = 173;
  static const int SYSZ_INS_CLIJLH = 174;
  static const int SYSZ_INS_CLRJLH = 175;
  static const int SYSZ_INS_CRJLH = 176;
  static const int SYSZ_INS_BLR = 177;
  static const int SYSZ_INS_BLER = 178;
  static const int SYSZ_INS_JLE = 179;
  static const int SYSZ_INS_JGLE = 180;
  static const int SYSZ_INS_LOCLE = 181;
  static const int SYSZ_INS_LOCGLE = 182;
  static const int SYSZ_INS_LOCGRLE = 183;
  static const int SYSZ_INS_LOCRLE = 184;
  static const int SYSZ_INS_STOCLE = 185;
  static const int SYSZ_INS_STOCGLE = 186;
  static const int SYSZ_INS_BLHR = 187;
  static const int SYSZ_INS_JLH = 188;
  static const int SYSZ_INS_JGLH = 189;
  static const int SYSZ_INS_LOCLH = 190;
  static const int SYSZ_INS_LOCGLH = 191;
  static const int SYSZ_INS_LOCGRLH = 192;
  static const int SYSZ_INS_LOCRLH = 193;
  static const int SYSZ_INS_STOCLH = 194;
  static const int SYSZ_INS_STOCGLH = 195;
  static const int SYSZ_INS_JL = 196;
  static const int SYSZ_INS_JGL = 197;
  static const int SYSZ_INS_LOCL = 198;
  static const int SYSZ_INS_LOCGL = 199;
  static const int SYSZ_INS_LOCGRL = 200;
  static const int SYSZ_INS_LOCRL = 201;
  static const int SYSZ_INS_LOC = 202;
  static const int SYSZ_INS_LOCG = 203;
  static const int SYSZ_INS_LOCGR = 204;
  static const int SYSZ_INS_LOCR = 205;
  static const int SYSZ_INS_STOCL = 206;
  static const int SYSZ_INS_STOCGL = 207;
  static const int SYSZ_INS_BNER = 208;
  static const int SYSZ_INS_JNE = 209;
  static const int SYSZ_INS_JGNE = 210;
  static const int SYSZ_INS_LOCNE = 211;
  static const int SYSZ_INS_LOCGNE = 212;
  static const int SYSZ_INS_LOCGRNE = 213;
  static const int SYSZ_INS_LOCRNE = 214;
  static const int SYSZ_INS_STOCNE = 215;
  static const int SYSZ_INS_STOCGNE = 216;
  static const int SYSZ_INS_BNHR = 217;
  static const int SYSZ_INS_BNHER = 218;
  static const int SYSZ_INS_JNHE = 219;
  static const int SYSZ_INS_JGNHE = 220;
  static const int SYSZ_INS_LOCNHE = 221;
  static const int SYSZ_INS_LOCGNHE = 222;
  static const int SYSZ_INS_LOCGRNHE = 223;
  static const int SYSZ_INS_LOCRNHE = 224;
  static const int SYSZ_INS_STOCNHE = 225;
  static const int SYSZ_INS_STOCGNHE = 226;
  static const int SYSZ_INS_JNH = 227;
  static const int SYSZ_INS_JGNH = 228;
  static const int SYSZ_INS_LOCNH = 229;
  static const int SYSZ_INS_LOCGNH = 230;
  static const int SYSZ_INS_LOCGRNH = 231;
  static const int SYSZ_INS_LOCRNH = 232;
  static const int SYSZ_INS_STOCNH = 233;
  static const int SYSZ_INS_STOCGNH = 234;
  static const int SYSZ_INS_BNLR = 235;
  static const int SYSZ_INS_BNLER = 236;
  static const int SYSZ_INS_JNLE = 237;
  static const int SYSZ_INS_JGNLE = 238;
  static const int SYSZ_INS_LOCNLE = 239;
  static const int SYSZ_INS_LOCGNLE = 240;
  static const int SYSZ_INS_LOCGRNLE = 241;
  static const int SYSZ_INS_LOCRNLE = 242;
  static const int SYSZ_INS_STOCNLE = 243;
  static const int SYSZ_INS_STOCGNLE = 244;
  static const int SYSZ_INS_BNLHR = 245;
  static const int SYSZ_INS_JNLH = 246;
  static const int SYSZ_INS_JGNLH = 247;
  static const int SYSZ_INS_LOCNLH = 248;
  static const int SYSZ_INS_LOCGNLH = 249;
  static const int SYSZ_INS_LOCGRNLH = 250;
  static const int SYSZ_INS_LOCRNLH = 251;
  static const int SYSZ_INS_STOCNLH = 252;
  static const int SYSZ_INS_STOCGNLH = 253;
  static const int SYSZ_INS_JNL = 254;
  static const int SYSZ_INS_JGNL = 255;
  static const int SYSZ_INS_LOCNL = 256;
  static const int SYSZ_INS_LOCGNL = 257;
  static const int SYSZ_INS_LOCGRNL = 258;
  static const int SYSZ_INS_LOCRNL = 259;
  static const int SYSZ_INS_STOCNL = 260;
  static const int SYSZ_INS_STOCGNL = 261;
  static const int SYSZ_INS_BNOR = 262;
  static const int SYSZ_INS_JNO = 263;
  static const int SYSZ_INS_JGNO = 264;
  static const int SYSZ_INS_LOCNO = 265;
  static const int SYSZ_INS_LOCGNO = 266;
  static const int SYSZ_INS_LOCGRNO = 267;
  static const int SYSZ_INS_LOCRNO = 268;
  static const int SYSZ_INS_STOCNO = 269;
  static const int SYSZ_INS_STOCGNO = 270;
  static const int SYSZ_INS_BOR = 271;
  static const int SYSZ_INS_JO = 272;
  static const int SYSZ_INS_JGO = 273;
  static const int SYSZ_INS_LOCO = 274;
  static const int SYSZ_INS_LOCGO = 275;
  static const int SYSZ_INS_LOCGRO = 276;
  static const int SYSZ_INS_LOCRO = 277;
  static const int SYSZ_INS_STOCO = 278;
  static const int SYSZ_INS_STOCGO = 279;
  static const int SYSZ_INS_STOC = 280;
  static const int SYSZ_INS_STOCG = 281;
  static const int SYSZ_INS_BASR = 282;
  static const int SYSZ_INS_BR = 283;
  static const int SYSZ_INS_BRAS = 284;
  static const int SYSZ_INS_BRASL = 285;
  static const int SYSZ_INS_J = 286;
  static const int SYSZ_INS_JG = 287;
  static const int SYSZ_INS_BRCT = 288;
  static const int SYSZ_INS_BRCTG = 289;
  static const int SYSZ_INS_C = 290;
  static const int SYSZ_INS_CDB = 291;
  static const int SYSZ_INS_CDBR = 292;
  static const int SYSZ_INS_CDFBR = 293;
  static const int SYSZ_INS_CDGBR = 294;
  static const int SYSZ_INS_CDLFBR = 295;
  static const int SYSZ_INS_CDLGBR = 296;
  static const int SYSZ_INS_CEB = 297;
  static const int SYSZ_INS_CEBR = 298;
  static const int SYSZ_INS_CEFBR = 299;
  static const int SYSZ_INS_CEGBR = 300;
  static const int SYSZ_INS_CELFBR = 301;
  static const int SYSZ_INS_CELGBR = 302;
  static const int SYSZ_INS_CFDBR = 303;
  static const int SYSZ_INS_CFEBR = 304;
  static const int SYSZ_INS_CFI = 305;
  static const int SYSZ_INS_CFXBR = 306;
  static const int SYSZ_INS_CG = 307;
  static const int SYSZ_INS_CGDBR = 308;
  static const int SYSZ_INS_CGEBR = 309;
  static const int SYSZ_INS_CGF = 310;
  static const int SYSZ_INS_CGFI = 311;
  static const int SYSZ_INS_CGFR = 312;
  static const int SYSZ_INS_CGFRL = 313;
  static const int SYSZ_INS_CGH = 314;
  static const int SYSZ_INS_CGHI = 315;
  static const int SYSZ_INS_CGHRL = 316;
  static const int SYSZ_INS_CGHSI = 317;
  static const int SYSZ_INS_CGR = 318;
  static const int SYSZ_INS_CGRL = 319;
  static const int SYSZ_INS_CGXBR = 320;
  static const int SYSZ_INS_CH = 321;
  static const int SYSZ_INS_CHF = 322;
  static const int SYSZ_INS_CHHSI = 323;
  static const int SYSZ_INS_CHI = 324;
  static const int SYSZ_INS_CHRL = 325;
  static const int SYSZ_INS_CHSI = 326;
  static const int SYSZ_INS_CHY = 327;
  static const int SYSZ_INS_CIH = 328;
  static const int SYSZ_INS_CL = 329;
  static const int SYSZ_INS_CLC = 330;
  static const int SYSZ_INS_CLFDBR = 331;
  static const int SYSZ_INS_CLFEBR = 332;
  static const int SYSZ_INS_CLFHSI = 333;
  static const int SYSZ_INS_CLFI = 334;
  static const int SYSZ_INS_CLFXBR = 335;
  static const int SYSZ_INS_CLG = 336;
  static const int SYSZ_INS_CLGDBR = 337;
  static const int SYSZ_INS_CLGEBR = 338;
  static const int SYSZ_INS_CLGF = 339;
  static const int SYSZ_INS_CLGFI = 340;
  static const int SYSZ_INS_CLGFR = 341;
  static const int SYSZ_INS_CLGFRL = 342;
  static const int SYSZ_INS_CLGHRL = 343;
  static const int SYSZ_INS_CLGHSI = 344;
  static const int SYSZ_INS_CLGR = 345;
  static const int SYSZ_INS_CLGRL = 346;
  static const int SYSZ_INS_CLGXBR = 347;
  static const int SYSZ_INS_CLHF = 348;
  static const int SYSZ_INS_CLHHSI = 349;
  static const int SYSZ_INS_CLHRL = 350;
  static const int SYSZ_INS_CLI = 351;
  static const int SYSZ_INS_CLIH = 352;
  static const int SYSZ_INS_CLIY = 353;
  static const int SYSZ_INS_CLR = 354;
  static const int SYSZ_INS_CLRL = 355;
  static const int SYSZ_INS_CLST = 356;
  static const int SYSZ_INS_CLY = 357;
  static const int SYSZ_INS_CPSDR = 358;
  static const int SYSZ_INS_CR = 359;
  static const int SYSZ_INS_CRL = 360;
  static const int SYSZ_INS_CS = 361;
  static const int SYSZ_INS_CSG = 362;
  static const int SYSZ_INS_CSY = 363;
  static const int SYSZ_INS_CXBR = 364;
  static const int SYSZ_INS_CXFBR = 365;
  static const int SYSZ_INS_CXGBR = 366;
  static const int SYSZ_INS_CXLFBR = 367;
  static const int SYSZ_INS_CXLGBR = 368;
  static const int SYSZ_INS_CY = 369;
  static const int SYSZ_INS_DDB = 370;
  static const int SYSZ_INS_DDBR = 371;
  static const int SYSZ_INS_DEB = 372;
  static const int SYSZ_INS_DEBR = 373;
  static const int SYSZ_INS_DL = 374;
  static const int SYSZ_INS_DLG = 375;
  static const int SYSZ_INS_DLGR = 376;
  static const int SYSZ_INS_DLR = 377;
  static const int SYSZ_INS_DSG = 378;
  static const int SYSZ_INS_DSGF = 379;
  static const int SYSZ_INS_DSGFR = 380;
  static const int SYSZ_INS_DSGR = 381;
  static const int SYSZ_INS_DXBR = 382;
  static const int SYSZ_INS_EAR = 383;
  static const int SYSZ_INS_FIDBR = 384;
  static const int SYSZ_INS_FIDBRA = 385;
  static const int SYSZ_INS_FIEBR = 386;
  static const int SYSZ_INS_FIEBRA = 387;
  static const int SYSZ_INS_FIXBR = 388;
  static const int SYSZ_INS_FIXBRA = 389;
  static const int SYSZ_INS_FLOGR = 390;
  static const int SYSZ_INS_IC = 391;
  static const int SYSZ_INS_ICY = 392;
  static const int SYSZ_INS_IIHF = 393;
  static const int SYSZ_INS_IIHH = 394;
  static const int SYSZ_INS_IIHL = 395;
  static const int SYSZ_INS_IILF = 396;
  static const int SYSZ_INS_IILH = 397;
  static const int SYSZ_INS_IILL = 398;
  static const int SYSZ_INS_IPM = 399;
  static const int SYSZ_INS_L = 400;
  static const int SYSZ_INS_LA = 401;
  static const int SYSZ_INS_LAA = 402;
  static const int SYSZ_INS_LAAG = 403;
  static const int SYSZ_INS_LAAL = 404;
  static const int SYSZ_INS_LAALG = 405;
  static const int SYSZ_INS_LAN = 406;
  static const int SYSZ_INS_LANG = 407;
  static const int SYSZ_INS_LAO = 408;
  static const int SYSZ_INS_LAOG = 409;
  static const int SYSZ_INS_LARL = 410;
  static const int SYSZ_INS_LAX = 411;
  static const int SYSZ_INS_LAXG = 412;
  static const int SYSZ_INS_LAY = 413;
  static const int SYSZ_INS_LB = 414;
  static const int SYSZ_INS_LBH = 415;
  static const int SYSZ_INS_LBR = 416;
  static const int SYSZ_INS_LCDBR = 417;
  static const int SYSZ_INS_LCEBR = 418;
  static const int SYSZ_INS_LCGFR = 419;
  static const int SYSZ_INS_LCGR = 420;
  static const int SYSZ_INS_LCR = 421;
  static const int SYSZ_INS_LCXBR = 422;
  static const int SYSZ_INS_LD = 423;
  static const int SYSZ_INS_LDEB = 424;
  static const int SYSZ_INS_LDEBR = 425;
  static const int SYSZ_INS_LDGR = 426;
  static const int SYSZ_INS_LDR = 427;
  static const int SYSZ_INS_LDXBR = 428;
  static const int SYSZ_INS_LDXBRA = 429;
  static const int SYSZ_INS_LDY = 430;
  static const int SYSZ_INS_LE = 431;
  static const int SYSZ_INS_LEDBR = 432;
  static const int SYSZ_INS_LEDBRA = 433;
  static const int SYSZ_INS_LER = 434;
  static const int SYSZ_INS_LEXBR = 435;
  static const int SYSZ_INS_LEXBRA = 436;
  static const int SYSZ_INS_LEY = 437;
  static const int SYSZ_INS_LFH = 438;
  static const int SYSZ_INS_LG = 439;
  static const int SYSZ_INS_LGB = 440;
  static const int SYSZ_INS_LGBR = 441;
  static const int SYSZ_INS_LGDR = 442;
  static const int SYSZ_INS_LGF = 443;
  static const int SYSZ_INS_LGFI = 444;
  static const int SYSZ_INS_LGFR = 445;
  static const int SYSZ_INS_LGFRL = 446;
  static const int SYSZ_INS_LGH = 447;
  static const int SYSZ_INS_LGHI = 448;
  static const int SYSZ_INS_LGHR = 449;
  static const int SYSZ_INS_LGHRL = 450;
  static const int SYSZ_INS_LGR = 451;
  static const int SYSZ_INS_LGRL = 452;
  static const int SYSZ_INS_LH = 453;
  static const int SYSZ_INS_LHH = 454;
  static const int SYSZ_INS_LHI = 455;
  static const int SYSZ_INS_LHR = 456;
  static const int SYSZ_INS_LHRL = 457;
  static const int SYSZ_INS_LHY = 458;
  static const int SYSZ_INS_LLC = 459;
  static const int SYSZ_INS_LLCH = 460;
  static const int SYSZ_INS_LLCR = 461;
  static const int SYSZ_INS_LLGC = 462;
  static const int SYSZ_INS_LLGCR = 463;
  static const int SYSZ_INS_LLGF = 464;
  static const int SYSZ_INS_LLGFR = 465;
  static const int SYSZ_INS_LLGFRL = 466;
  static const int SYSZ_INS_LLGH = 467;
  static const int SYSZ_INS_LLGHR = 468;
  static const int SYSZ_INS_LLGHRL = 469;
  static const int SYSZ_INS_LLH = 470;
  static const int SYSZ_INS_LLHH = 471;
  static const int SYSZ_INS_LLHR = 472;
  static const int SYSZ_INS_LLHRL = 473;
  static const int SYSZ_INS_LLIHF = 474;
  static const int SYSZ_INS_LLIHH = 475;
  static const int SYSZ_INS_LLIHL = 476;
  static const int SYSZ_INS_LLILF = 477;
  static const int SYSZ_INS_LLILH = 478;
  static const int SYSZ_INS_LLILL = 479;
  static const int SYSZ_INS_LMG = 480;
  static const int SYSZ_INS_LNDBR = 481;
  static const int SYSZ_INS_LNEBR = 482;
  static const int SYSZ_INS_LNGFR = 483;
  static const int SYSZ_INS_LNGR = 484;
  static const int SYSZ_INS_LNR = 485;
  static const int SYSZ_INS_LNXBR = 486;
  static const int SYSZ_INS_LPDBR = 487;
  static const int SYSZ_INS_LPEBR = 488;
  static const int SYSZ_INS_LPGFR = 489;
  static const int SYSZ_INS_LPGR = 490;
  static const int SYSZ_INS_LPR = 491;
  static const int SYSZ_INS_LPXBR = 492;
  static const int SYSZ_INS_LR = 493;
  static const int SYSZ_INS_LRL = 494;
  static const int SYSZ_INS_LRV = 495;
  static const int SYSZ_INS_LRVG = 496;
  static const int SYSZ_INS_LRVGR = 497;
  static const int SYSZ_INS_LRVR = 498;
  static const int SYSZ_INS_LT = 499;
  static const int SYSZ_INS_LTDBR = 500;
  static const int SYSZ_INS_LTEBR = 501;
  static const int SYSZ_INS_LTG = 502;
  static const int SYSZ_INS_LTGF = 503;
  static const int SYSZ_INS_LTGFR = 504;
  static const int SYSZ_INS_LTGR = 505;
  static const int SYSZ_INS_LTR = 506;
  static const int SYSZ_INS_LTXBR = 507;
  static const int SYSZ_INS_LXDB = 508;
  static const int SYSZ_INS_LXDBR = 509;
  static const int SYSZ_INS_LXEB = 510;
  static const int SYSZ_INS_LXEBR = 511;
  static const int SYSZ_INS_LXR = 512;
  static const int SYSZ_INS_LY = 513;
  static const int SYSZ_INS_LZDR = 514;
  static const int SYSZ_INS_LZER = 515;
  static const int SYSZ_INS_LZXR = 516;
  static const int SYSZ_INS_MADB = 517;
  static const int SYSZ_INS_MADBR = 518;
  static const int SYSZ_INS_MAEB = 519;
  static const int SYSZ_INS_MAEBR = 520;
  static const int SYSZ_INS_MDB = 521;
  static const int SYSZ_INS_MDBR = 522;
  static const int SYSZ_INS_MDEB = 523;
  static const int SYSZ_INS_MDEBR = 524;
  static const int SYSZ_INS_MEEB = 525;
  static const int SYSZ_INS_MEEBR = 526;
  static const int SYSZ_INS_MGHI = 527;
  static const int SYSZ_INS_MH = 528;
  static const int SYSZ_INS_MHI = 529;
  static const int SYSZ_INS_MHY = 530;
  static const int SYSZ_INS_MLG = 531;
  static const int SYSZ_INS_MLGR = 532;
  static const int SYSZ_INS_MS = 533;
  static const int SYSZ_INS_MSDB = 534;
  static const int SYSZ_INS_MSDBR = 535;
  static const int SYSZ_INS_MSEB = 536;
  static const int SYSZ_INS_MSEBR = 537;
  static const int SYSZ_INS_MSFI = 538;
  static const int SYSZ_INS_MSG = 539;
  static const int SYSZ_INS_MSGF = 540;
  static const int SYSZ_INS_MSGFI = 541;
  static const int SYSZ_INS_MSGFR = 542;
  static const int SYSZ_INS_MSGR = 543;
  static const int SYSZ_INS_MSR = 544;
  static const int SYSZ_INS_MSY = 545;
  static const int SYSZ_INS_MVC = 546;
  static const int SYSZ_INS_MVGHI = 547;
  static const int SYSZ_INS_MVHHI = 548;
  static const int SYSZ_INS_MVHI = 549;
  static const int SYSZ_INS_MVI = 550;
  static const int SYSZ_INS_MVIY = 551;
  static const int SYSZ_INS_MVST = 552;
  static const int SYSZ_INS_MXBR = 553;
  static const int SYSZ_INS_MXDB = 554;
  static const int SYSZ_INS_MXDBR = 555;
  static const int SYSZ_INS_N = 556;
  static const int SYSZ_INS_NC = 557;
  static const int SYSZ_INS_NG = 558;
  static const int SYSZ_INS_NGR = 559;
  static const int SYSZ_INS_NGRK = 560;
  static const int SYSZ_INS_NI = 561;
  static const int SYSZ_INS_NIHF = 562;
  static const int SYSZ_INS_NIHH = 563;
  static const int SYSZ_INS_NIHL = 564;
  static const int SYSZ_INS_NILF = 565;
  static const int SYSZ_INS_NILH = 566;
  static const int SYSZ_INS_NILL = 567;
  static const int SYSZ_INS_NIY = 568;
  static const int SYSZ_INS_NR = 569;
  static const int SYSZ_INS_NRK = 570;
  static const int SYSZ_INS_NY = 571;
  static const int SYSZ_INS_O = 572;
  static const int SYSZ_INS_OC = 573;
  static const int SYSZ_INS_OG = 574;
  static const int SYSZ_INS_OGR = 575;
  static const int SYSZ_INS_OGRK = 576;
  static const int SYSZ_INS_OI = 577;
  static const int SYSZ_INS_OIHF = 578;
  static const int SYSZ_INS_OIHH = 579;
  static const int SYSZ_INS_OIHL = 580;
  static const int SYSZ_INS_OILF = 581;
  static const int SYSZ_INS_OILH = 582;
  static const int SYSZ_INS_OILL = 583;
  static const int SYSZ_INS_OIY = 584;
  static const int SYSZ_INS_OR = 585;
  static const int SYSZ_INS_ORK = 586;
  static const int SYSZ_INS_OY = 587;
  static const int SYSZ_INS_PFD = 588;
  static const int SYSZ_INS_PFDRL = 589;
  static const int SYSZ_INS_RISBG = 590;
  static const int SYSZ_INS_RISBHG = 591;
  static const int SYSZ_INS_RISBLG = 592;
  static const int SYSZ_INS_RLL = 593;
  static const int SYSZ_INS_RLLG = 594;
  static const int SYSZ_INS_RNSBG = 595;
  static const int SYSZ_INS_ROSBG = 596;
  static const int SYSZ_INS_RXSBG = 597;
  static const int SYSZ_INS_S = 598;
  static const int SYSZ_INS_SDB = 599;
  static const int SYSZ_INS_SDBR = 600;
  static const int SYSZ_INS_SEB = 601;
  static const int SYSZ_INS_SEBR = 602;
  static const int SYSZ_INS_SG = 603;
  static const int SYSZ_INS_SGF = 604;
  static const int SYSZ_INS_SGFR = 605;
  static const int SYSZ_INS_SGR = 606;
  static const int SYSZ_INS_SGRK = 607;
  static const int SYSZ_INS_SH = 608;
  static const int SYSZ_INS_SHY = 609;
  static const int SYSZ_INS_SL = 610;
  static const int SYSZ_INS_SLB = 611;
  static const int SYSZ_INS_SLBG = 612;
  static const int SYSZ_INS_SLBR = 613;
  static const int SYSZ_INS_SLFI = 614;
  static const int SYSZ_INS_SLG = 615;
  static const int SYSZ_INS_SLBGR = 616;
  static const int SYSZ_INS_SLGF = 617;
  static const int SYSZ_INS_SLGFI = 618;
  static const int SYSZ_INS_SLGFR = 619;
  static const int SYSZ_INS_SLGR = 620;
  static const int SYSZ_INS_SLGRK = 621;
  static const int SYSZ_INS_SLL = 622;
  static const int SYSZ_INS_SLLG = 623;
  static const int SYSZ_INS_SLLK = 624;
  static const int SYSZ_INS_SLR = 625;
  static const int SYSZ_INS_SLRK = 626;
  static const int SYSZ_INS_SLY = 627;
  static const int SYSZ_INS_SQDB = 628;
  static const int SYSZ_INS_SQDBR = 629;
  static const int SYSZ_INS_SQEB = 630;
  static const int SYSZ_INS_SQEBR = 631;
  static const int SYSZ_INS_SQXBR = 632;
  static const int SYSZ_INS_SR = 633;
  static const int SYSZ_INS_SRA = 634;
  static const int SYSZ_INS_SRAG = 635;
  static const int SYSZ_INS_SRAK = 636;
  static const int SYSZ_INS_SRK = 637;
  static const int SYSZ_INS_SRL = 638;
  static const int SYSZ_INS_SRLG = 639;
  static const int SYSZ_INS_SRLK = 640;
  static const int SYSZ_INS_SRST = 641;
  static const int SYSZ_INS_ST = 642;
  static const int SYSZ_INS_STC = 643;
  static const int SYSZ_INS_STCH = 644;
  static const int SYSZ_INS_STCY = 645;
  static const int SYSZ_INS_STD = 646;
  static const int SYSZ_INS_STDY = 647;
  static const int SYSZ_INS_STE = 648;
  static const int SYSZ_INS_STEY = 649;
  static const int SYSZ_INS_STFH = 650;
  static const int SYSZ_INS_STG = 651;
  static const int SYSZ_INS_STGRL = 652;
  static const int SYSZ_INS_STH = 653;
  static const int SYSZ_INS_STHH = 654;
  static const int SYSZ_INS_STHRL = 655;
  static const int SYSZ_INS_STHY = 656;
  static const int SYSZ_INS_STMG = 657;
  static const int SYSZ_INS_STRL = 658;
  static const int SYSZ_INS_STRV = 659;
  static const int SYSZ_INS_STRVG = 660;
  static const int SYSZ_INS_STY = 661;
  static const int SYSZ_INS_SXBR = 662;
  static const int SYSZ_INS_SY = 663;
  static const int SYSZ_INS_TM = 664;
  static const int SYSZ_INS_TMHH = 665;
  static const int SYSZ_INS_TMHL = 666;
  static const int SYSZ_INS_TMLH = 667;
  static const int SYSZ_INS_TMLL = 668;
  static const int SYSZ_INS_TMY = 669;
  static const int SYSZ_INS_X = 670;
  static const int SYSZ_INS_XC = 671;
  static const int SYSZ_INS_XG = 672;
  static const int SYSZ_INS_XGR = 673;
  static const int SYSZ_INS_XGRK = 674;
  static const int SYSZ_INS_XI = 675;
  static const int SYSZ_INS_XIHF = 676;
  static const int SYSZ_INS_XILF = 677;
  static const int SYSZ_INS_XIY = 678;
  static const int SYSZ_INS_XR = 679;
  static const int SYSZ_INS_XRK = 680;
  static const int SYSZ_INS_XY = 681;
  static const int SYSZ_INS_ENDING = 682;
}

/// Group of SystemZ instructions
abstract class sysz_insn_group {
  /// < = CS_GRP_INVALID
  static const int SYSZ_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int SYSZ_GRP_JUMP = 1;
  static const int SYSZ_GRP_DISTINCTOPS = 128;
  static const int SYSZ_GRP_FPEXTENSION = 129;
  static const int SYSZ_GRP_HIGHWORD = 130;
  static const int SYSZ_GRP_INTERLOCKEDACCESS1 = 131;
  static const int SYSZ_GRP_LOADSTOREONCOND = 132;
  static const int SYSZ_GRP_ENDING = 133;
}

/// X86 registers
abstract class x86_reg {
  static const int X86_REG_INVALID = 0;
  static const int X86_REG_AH = 1;
  static const int X86_REG_AL = 2;
  static const int X86_REG_AX = 3;
  static const int X86_REG_BH = 4;
  static const int X86_REG_BL = 5;
  static const int X86_REG_BP = 6;
  static const int X86_REG_BPL = 7;
  static const int X86_REG_BX = 8;
  static const int X86_REG_CH = 9;
  static const int X86_REG_CL = 10;
  static const int X86_REG_CS = 11;
  static const int X86_REG_CX = 12;
  static const int X86_REG_DH = 13;
  static const int X86_REG_DI = 14;
  static const int X86_REG_DIL = 15;
  static const int X86_REG_DL = 16;
  static const int X86_REG_DS = 17;
  static const int X86_REG_DX = 18;
  static const int X86_REG_EAX = 19;
  static const int X86_REG_EBP = 20;
  static const int X86_REG_EBX = 21;
  static const int X86_REG_ECX = 22;
  static const int X86_REG_EDI = 23;
  static const int X86_REG_EDX = 24;
  static const int X86_REG_EFLAGS = 25;
  static const int X86_REG_EIP = 26;
  static const int X86_REG_EIZ = 27;
  static const int X86_REG_ES = 28;
  static const int X86_REG_ESI = 29;
  static const int X86_REG_ESP = 30;
  static const int X86_REG_FPSW = 31;
  static const int X86_REG_FS = 32;
  static const int X86_REG_GS = 33;
  static const int X86_REG_IP = 34;
  static const int X86_REG_RAX = 35;
  static const int X86_REG_RBP = 36;
  static const int X86_REG_RBX = 37;
  static const int X86_REG_RCX = 38;
  static const int X86_REG_RDI = 39;
  static const int X86_REG_RDX = 40;
  static const int X86_REG_RIP = 41;
  static const int X86_REG_RIZ = 42;
  static const int X86_REG_RSI = 43;
  static const int X86_REG_RSP = 44;
  static const int X86_REG_SI = 45;
  static const int X86_REG_SIL = 46;
  static const int X86_REG_SP = 47;
  static const int X86_REG_SPL = 48;
  static const int X86_REG_SS = 49;
  static const int X86_REG_CR0 = 50;
  static const int X86_REG_CR1 = 51;
  static const int X86_REG_CR2 = 52;
  static const int X86_REG_CR3 = 53;
  static const int X86_REG_CR4 = 54;
  static const int X86_REG_CR5 = 55;
  static const int X86_REG_CR6 = 56;
  static const int X86_REG_CR7 = 57;
  static const int X86_REG_CR8 = 58;
  static const int X86_REG_CR9 = 59;
  static const int X86_REG_CR10 = 60;
  static const int X86_REG_CR11 = 61;
  static const int X86_REG_CR12 = 62;
  static const int X86_REG_CR13 = 63;
  static const int X86_REG_CR14 = 64;
  static const int X86_REG_CR15 = 65;
  static const int X86_REG_DR0 = 66;
  static const int X86_REG_DR1 = 67;
  static const int X86_REG_DR2 = 68;
  static const int X86_REG_DR3 = 69;
  static const int X86_REG_DR4 = 70;
  static const int X86_REG_DR5 = 71;
  static const int X86_REG_DR6 = 72;
  static const int X86_REG_DR7 = 73;
  static const int X86_REG_DR8 = 74;
  static const int X86_REG_DR9 = 75;
  static const int X86_REG_DR10 = 76;
  static const int X86_REG_DR11 = 77;
  static const int X86_REG_DR12 = 78;
  static const int X86_REG_DR13 = 79;
  static const int X86_REG_DR14 = 80;
  static const int X86_REG_DR15 = 81;
  static const int X86_REG_FP0 = 82;
  static const int X86_REG_FP1 = 83;
  static const int X86_REG_FP2 = 84;
  static const int X86_REG_FP3 = 85;
  static const int X86_REG_FP4 = 86;
  static const int X86_REG_FP5 = 87;
  static const int X86_REG_FP6 = 88;
  static const int X86_REG_FP7 = 89;
  static const int X86_REG_K0 = 90;
  static const int X86_REG_K1 = 91;
  static const int X86_REG_K2 = 92;
  static const int X86_REG_K3 = 93;
  static const int X86_REG_K4 = 94;
  static const int X86_REG_K5 = 95;
  static const int X86_REG_K6 = 96;
  static const int X86_REG_K7 = 97;
  static const int X86_REG_MM0 = 98;
  static const int X86_REG_MM1 = 99;
  static const int X86_REG_MM2 = 100;
  static const int X86_REG_MM3 = 101;
  static const int X86_REG_MM4 = 102;
  static const int X86_REG_MM5 = 103;
  static const int X86_REG_MM6 = 104;
  static const int X86_REG_MM7 = 105;
  static const int X86_REG_R8 = 106;
  static const int X86_REG_R9 = 107;
  static const int X86_REG_R10 = 108;
  static const int X86_REG_R11 = 109;
  static const int X86_REG_R12 = 110;
  static const int X86_REG_R13 = 111;
  static const int X86_REG_R14 = 112;
  static const int X86_REG_R15 = 113;
  static const int X86_REG_ST0 = 114;
  static const int X86_REG_ST1 = 115;
  static const int X86_REG_ST2 = 116;
  static const int X86_REG_ST3 = 117;
  static const int X86_REG_ST4 = 118;
  static const int X86_REG_ST5 = 119;
  static const int X86_REG_ST6 = 120;
  static const int X86_REG_ST7 = 121;
  static const int X86_REG_XMM0 = 122;
  static const int X86_REG_XMM1 = 123;
  static const int X86_REG_XMM2 = 124;
  static const int X86_REG_XMM3 = 125;
  static const int X86_REG_XMM4 = 126;
  static const int X86_REG_XMM5 = 127;
  static const int X86_REG_XMM6 = 128;
  static const int X86_REG_XMM7 = 129;
  static const int X86_REG_XMM8 = 130;
  static const int X86_REG_XMM9 = 131;
  static const int X86_REG_XMM10 = 132;
  static const int X86_REG_XMM11 = 133;
  static const int X86_REG_XMM12 = 134;
  static const int X86_REG_XMM13 = 135;
  static const int X86_REG_XMM14 = 136;
  static const int X86_REG_XMM15 = 137;
  static const int X86_REG_XMM16 = 138;
  static const int X86_REG_XMM17 = 139;
  static const int X86_REG_XMM18 = 140;
  static const int X86_REG_XMM19 = 141;
  static const int X86_REG_XMM20 = 142;
  static const int X86_REG_XMM21 = 143;
  static const int X86_REG_XMM22 = 144;
  static const int X86_REG_XMM23 = 145;
  static const int X86_REG_XMM24 = 146;
  static const int X86_REG_XMM25 = 147;
  static const int X86_REG_XMM26 = 148;
  static const int X86_REG_XMM27 = 149;
  static const int X86_REG_XMM28 = 150;
  static const int X86_REG_XMM29 = 151;
  static const int X86_REG_XMM30 = 152;
  static const int X86_REG_XMM31 = 153;
  static const int X86_REG_YMM0 = 154;
  static const int X86_REG_YMM1 = 155;
  static const int X86_REG_YMM2 = 156;
  static const int X86_REG_YMM3 = 157;
  static const int X86_REG_YMM4 = 158;
  static const int X86_REG_YMM5 = 159;
  static const int X86_REG_YMM6 = 160;
  static const int X86_REG_YMM7 = 161;
  static const int X86_REG_YMM8 = 162;
  static const int X86_REG_YMM9 = 163;
  static const int X86_REG_YMM10 = 164;
  static const int X86_REG_YMM11 = 165;
  static const int X86_REG_YMM12 = 166;
  static const int X86_REG_YMM13 = 167;
  static const int X86_REG_YMM14 = 168;
  static const int X86_REG_YMM15 = 169;
  static const int X86_REG_YMM16 = 170;
  static const int X86_REG_YMM17 = 171;
  static const int X86_REG_YMM18 = 172;
  static const int X86_REG_YMM19 = 173;
  static const int X86_REG_YMM20 = 174;
  static const int X86_REG_YMM21 = 175;
  static const int X86_REG_YMM22 = 176;
  static const int X86_REG_YMM23 = 177;
  static const int X86_REG_YMM24 = 178;
  static const int X86_REG_YMM25 = 179;
  static const int X86_REG_YMM26 = 180;
  static const int X86_REG_YMM27 = 181;
  static const int X86_REG_YMM28 = 182;
  static const int X86_REG_YMM29 = 183;
  static const int X86_REG_YMM30 = 184;
  static const int X86_REG_YMM31 = 185;
  static const int X86_REG_ZMM0 = 186;
  static const int X86_REG_ZMM1 = 187;
  static const int X86_REG_ZMM2 = 188;
  static const int X86_REG_ZMM3 = 189;
  static const int X86_REG_ZMM4 = 190;
  static const int X86_REG_ZMM5 = 191;
  static const int X86_REG_ZMM6 = 192;
  static const int X86_REG_ZMM7 = 193;
  static const int X86_REG_ZMM8 = 194;
  static const int X86_REG_ZMM9 = 195;
  static const int X86_REG_ZMM10 = 196;
  static const int X86_REG_ZMM11 = 197;
  static const int X86_REG_ZMM12 = 198;
  static const int X86_REG_ZMM13 = 199;
  static const int X86_REG_ZMM14 = 200;
  static const int X86_REG_ZMM15 = 201;
  static const int X86_REG_ZMM16 = 202;
  static const int X86_REG_ZMM17 = 203;
  static const int X86_REG_ZMM18 = 204;
  static const int X86_REG_ZMM19 = 205;
  static const int X86_REG_ZMM20 = 206;
  static const int X86_REG_ZMM21 = 207;
  static const int X86_REG_ZMM22 = 208;
  static const int X86_REG_ZMM23 = 209;
  static const int X86_REG_ZMM24 = 210;
  static const int X86_REG_ZMM25 = 211;
  static const int X86_REG_ZMM26 = 212;
  static const int X86_REG_ZMM27 = 213;
  static const int X86_REG_ZMM28 = 214;
  static const int X86_REG_ZMM29 = 215;
  static const int X86_REG_ZMM30 = 216;
  static const int X86_REG_ZMM31 = 217;
  static const int X86_REG_R8B = 218;
  static const int X86_REG_R9B = 219;
  static const int X86_REG_R10B = 220;
  static const int X86_REG_R11B = 221;
  static const int X86_REG_R12B = 222;
  static const int X86_REG_R13B = 223;
  static const int X86_REG_R14B = 224;
  static const int X86_REG_R15B = 225;
  static const int X86_REG_R8D = 226;
  static const int X86_REG_R9D = 227;
  static const int X86_REG_R10D = 228;
  static const int X86_REG_R11D = 229;
  static const int X86_REG_R12D = 230;
  static const int X86_REG_R13D = 231;
  static const int X86_REG_R14D = 232;
  static const int X86_REG_R15D = 233;
  static const int X86_REG_R8W = 234;
  static const int X86_REG_R9W = 235;
  static const int X86_REG_R10W = 236;
  static const int X86_REG_R11W = 237;
  static const int X86_REG_R12W = 238;
  static const int X86_REG_R13W = 239;
  static const int X86_REG_R14W = 240;
  static const int X86_REG_R15W = 241;
  static const int X86_REG_ENDING = 242;
}

/// Operand type for instruction's operands
abstract class x86_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int X86_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int X86_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int X86_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int X86_OP_MEM = 3;
}

/// XOP Code Condition type
abstract class x86_xop_cc {
  /// < Uninitialized.
  static const int X86_XOP_CC_INVALID = 0;
  static const int X86_XOP_CC_LT = 1;
  static const int X86_XOP_CC_LE = 2;
  static const int X86_XOP_CC_GT = 3;
  static const int X86_XOP_CC_GE = 4;
  static const int X86_XOP_CC_EQ = 5;
  static const int X86_XOP_CC_NEQ = 6;
  static const int X86_XOP_CC_FALSE = 7;
  static const int X86_XOP_CC_TRUE = 8;
}

/// AVX broadcast type
abstract class x86_avx_bcast {
  /// < Uninitialized.
  static const int X86_AVX_BCAST_INVALID = 0;

  /// < AVX512 broadcast type {1to2}
  static const int X86_AVX_BCAST_2 = 1;

  /// < AVX512 broadcast type {1to4}
  static const int X86_AVX_BCAST_4 = 2;

  /// < AVX512 broadcast type {1to8}
  static const int X86_AVX_BCAST_8 = 3;

  /// < AVX512 broadcast type {1to16}
  static const int X86_AVX_BCAST_16 = 4;
}

/// SSE Code Condition type
abstract class x86_sse_cc {
  /// < Uninitialized.
  static const int X86_SSE_CC_INVALID = 0;
  static const int X86_SSE_CC_EQ = 1;
  static const int X86_SSE_CC_LT = 2;
  static const int X86_SSE_CC_LE = 3;
  static const int X86_SSE_CC_UNORD = 4;
  static const int X86_SSE_CC_NEQ = 5;
  static const int X86_SSE_CC_NLT = 6;
  static const int X86_SSE_CC_NLE = 7;
  static const int X86_SSE_CC_ORD = 8;
}

/// AVX Code Condition type
abstract class x86_avx_cc {
  /// < Uninitialized.
  static const int X86_AVX_CC_INVALID = 0;
  static const int X86_AVX_CC_EQ = 1;
  static const int X86_AVX_CC_LT = 2;
  static const int X86_AVX_CC_LE = 3;
  static const int X86_AVX_CC_UNORD = 4;
  static const int X86_AVX_CC_NEQ = 5;
  static const int X86_AVX_CC_NLT = 6;
  static const int X86_AVX_CC_NLE = 7;
  static const int X86_AVX_CC_ORD = 8;
  static const int X86_AVX_CC_EQ_UQ = 9;
  static const int X86_AVX_CC_NGE = 10;
  static const int X86_AVX_CC_NGT = 11;
  static const int X86_AVX_CC_FALSE = 12;
  static const int X86_AVX_CC_NEQ_OQ = 13;
  static const int X86_AVX_CC_GE = 14;
  static const int X86_AVX_CC_GT = 15;
  static const int X86_AVX_CC_TRUE = 16;
  static const int X86_AVX_CC_EQ_OS = 17;
  static const int X86_AVX_CC_LT_OQ = 18;
  static const int X86_AVX_CC_LE_OQ = 19;
  static const int X86_AVX_CC_UNORD_S = 20;
  static const int X86_AVX_CC_NEQ_US = 21;
  static const int X86_AVX_CC_NLT_UQ = 22;
  static const int X86_AVX_CC_NLE_UQ = 23;
  static const int X86_AVX_CC_ORD_S = 24;
  static const int X86_AVX_CC_EQ_US = 25;
  static const int X86_AVX_CC_NGE_UQ = 26;
  static const int X86_AVX_CC_NGT_UQ = 27;
  static const int X86_AVX_CC_FALSE_OS = 28;
  static const int X86_AVX_CC_NEQ_OS = 29;
  static const int X86_AVX_CC_GE_OQ = 30;
  static const int X86_AVX_CC_GT_OQ = 31;
  static const int X86_AVX_CC_TRUE_US = 32;
}

/// AVX static rounding mode type
abstract class x86_avx_rm {
  /// < Uninitialized.
  static const int X86_AVX_RM_INVALID = 0;

  /// < Round to nearest
  static const int X86_AVX_RM_RN = 1;

  /// < Round down
  static const int X86_AVX_RM_RD = 2;

  /// < Round up
  static const int X86_AVX_RM_RU = 3;

  /// < Round toward zero
  static const int X86_AVX_RM_RZ = 4;
}

/// Instruction prefixes - to be used in cs_x86.prefix[]
abstract class x86_prefix {
  /// < lock (cs_x86.prefix[0]
  static const int X86_PREFIX_LOCK = 240;

  /// < rep (cs_x86.prefix[0]
  static const int X86_PREFIX_REP = 243;

  /// < repe/repz (cs_x86.prefix[0]
  static const int X86_PREFIX_REPE = 243;

  /// < repne/repnz (cs_x86.prefix[0]
  static const int X86_PREFIX_REPNE = 242;

  /// < segment override CS (cs_x86.prefix[1]
  static const int X86_PREFIX_CS = 46;

  /// < segment override SS (cs_x86.prefix[1]
  static const int X86_PREFIX_SS = 54;

  /// < segment override DS (cs_x86.prefix[1]
  static const int X86_PREFIX_DS = 62;

  /// < segment override ES (cs_x86.prefix[1]
  static const int X86_PREFIX_ES = 38;

  /// < segment override FS (cs_x86.prefix[1]
  static const int X86_PREFIX_FS = 100;

  /// < segment override GS (cs_x86.prefix[1]
  static const int X86_PREFIX_GS = 101;

  /// < operand-size override (cs_x86.prefix[2]
  static const int X86_PREFIX_OPSIZE = 102;

  /// < address-size override (cs_x86.prefix[3]
  static const int X86_PREFIX_ADDRSIZE = 103;
}

/// Instruction's operand referring to memory
/// This is associated with X86_OP_MEM operand type above
class x86_op_mem extends ffi.Struct {
  /// < segment register (or X86_REG_INVALID if irrelevant)
  @ffi.Int32()
  external int segment;

  /// < base register (or X86_REG_INVALID if irrelevant)
  @ffi.Int32()
  external int base;

  /// < index register (or X86_REG_INVALID if irrelevant)
  @ffi.Int32()
  external int index;

  /// < scale for index register
  @ffi.Int()
  external int scale;

  /// < displacement value
  @ffi.Int64()
  external int disp;
}

/// Instruction operand
class cs_x86_op extends ffi.Struct {
  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion9 unnamed;

  /// size of this operand (in bytes).
  @ffi.Uint8()
  external int size;

  /// How is this operand accessed? (READ, WRITE or READ|WRITE)
  /// This field is combined of cs_ac_type.
  /// NOTE: this field is irrelevant if engine is compiled in DIET mode.
  @ffi.Uint8()
  external int access;

  /// AVX broadcast type, or 0 if irrelevant
  @ffi.Int32()
  external int avx_bcast;

  /// AVX zero opmask {z}
  @ffi.Bool()
  external bool avx_zero_opmask;
}

class UnnamedUnion9 extends ffi.Union {
  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < immediate value for IMM operand
  @ffi.Int64()
  external int imm;

  /// < base/index/scale/disp value for MEM operand
  external x86_op_mem mem;
}

class cs_x86_encoding extends ffi.Struct {
  /// ModR/M offset, or 0 when irrelevant
  @ffi.Uint8()
  external int modrm_offset;

  /// Displacement offset, or 0 when irrelevant.
  @ffi.Uint8()
  external int disp_offset;

  @ffi.Uint8()
  external int disp_size;

  /// Immediate offset, or 0 when irrelevant.
  @ffi.Uint8()
  external int imm_offset;

  @ffi.Uint8()
  external int imm_size;
}

/// Instruction structure
class cs_x86 extends ffi.Struct {
  @ffi.Array.multi([4])
  external ffi.Array<ffi.Uint8> prefix;

  @ffi.Array.multi([4])
  external ffi.Array<ffi.Uint8> opcode;

  /// REX prefix: only a non-zero value is relevant for x86_64
  @ffi.Uint8()
  external int rex;

  /// Address size, which can be overridden with above prefix[5].
  @ffi.Uint8()
  external int addr_size;

  /// ModR/M byte
  @ffi.Uint8()
  external int modrm;

  /// SIB value, or 0 when irrelevant.
  @ffi.Uint8()
  external int sib;

  /// Displacement value, valid if encoding.disp_offset != 0
  @ffi.Int64()
  external int disp;

  /// SIB index register, or X86_REG_INVALID when irrelevant.
  @ffi.Int32()
  external int sib_index;

  /// SIB scale, only applicable if sib_index is valid.
  @ffi.Int8()
  external int sib_scale;

  /// SIB base register, or X86_REG_INVALID when irrelevant.
  @ffi.Int32()
  external int sib_base;

  /// XOP Code Condition
  @ffi.Int32()
  external int xop_cc;

  /// SSE Code Condition
  @ffi.Int32()
  external int sse_cc;

  /// AVX Code Condition
  @ffi.Int32()
  external int avx_cc;

  /// AVX Suppress all Exception
  @ffi.Bool()
  external bool avx_sae;

  /// AVX static rounding mode
  @ffi.Int32()
  external int avx_rm;

  external UnnamedUnion10 unnamed;

  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([8])
  external ffi.Array<cs_x86_op> operands;

  /// < encoding information
  external cs_x86_encoding encoding;
}

class UnnamedUnion10 extends ffi.Union {
  /// EFLAGS updated by this instruction.
  /// This can be formed from OR combination of X86_EFLAGS_* symbols in x86.h
  @ffi.Uint64()
  external int eflags;

  /// FPU_FLAGS updated by this instruction.
  /// This can be formed from OR combination of X86_FPU_FLAGS_* symbols in x86.h
  @ffi.Uint64()
  external int fpu_flags;
}

/// X86 instructions
abstract class x86_insn {
  static const int X86_INS_INVALID = 0;
  static const int X86_INS_AAA = 1;
  static const int X86_INS_AAD = 2;
  static const int X86_INS_AAM = 3;
  static const int X86_INS_AAS = 4;
  static const int X86_INS_FABS = 5;
  static const int X86_INS_ADC = 6;
  static const int X86_INS_ADCX = 7;
  static const int X86_INS_ADD = 8;
  static const int X86_INS_ADDPD = 9;
  static const int X86_INS_ADDPS = 10;
  static const int X86_INS_ADDSD = 11;
  static const int X86_INS_ADDSS = 12;
  static const int X86_INS_ADDSUBPD = 13;
  static const int X86_INS_ADDSUBPS = 14;
  static const int X86_INS_FADD = 15;
  static const int X86_INS_FIADD = 16;
  static const int X86_INS_FADDP = 17;
  static const int X86_INS_ADOX = 18;
  static const int X86_INS_AESDECLAST = 19;
  static const int X86_INS_AESDEC = 20;
  static const int X86_INS_AESENCLAST = 21;
  static const int X86_INS_AESENC = 22;
  static const int X86_INS_AESIMC = 23;
  static const int X86_INS_AESKEYGENASSIST = 24;
  static const int X86_INS_AND = 25;
  static const int X86_INS_ANDN = 26;
  static const int X86_INS_ANDNPD = 27;
  static const int X86_INS_ANDNPS = 28;
  static const int X86_INS_ANDPD = 29;
  static const int X86_INS_ANDPS = 30;
  static const int X86_INS_ARPL = 31;
  static const int X86_INS_BEXTR = 32;
  static const int X86_INS_BLCFILL = 33;
  static const int X86_INS_BLCI = 34;
  static const int X86_INS_BLCIC = 35;
  static const int X86_INS_BLCMSK = 36;
  static const int X86_INS_BLCS = 37;
  static const int X86_INS_BLENDPD = 38;
  static const int X86_INS_BLENDPS = 39;
  static const int X86_INS_BLENDVPD = 40;
  static const int X86_INS_BLENDVPS = 41;
  static const int X86_INS_BLSFILL = 42;
  static const int X86_INS_BLSI = 43;
  static const int X86_INS_BLSIC = 44;
  static const int X86_INS_BLSMSK = 45;
  static const int X86_INS_BLSR = 46;
  static const int X86_INS_BOUND = 47;
  static const int X86_INS_BSF = 48;
  static const int X86_INS_BSR = 49;
  static const int X86_INS_BSWAP = 50;
  static const int X86_INS_BT = 51;
  static const int X86_INS_BTC = 52;
  static const int X86_INS_BTR = 53;
  static const int X86_INS_BTS = 54;
  static const int X86_INS_BZHI = 55;
  static const int X86_INS_CALL = 56;
  static const int X86_INS_CBW = 57;
  static const int X86_INS_CDQ = 58;
  static const int X86_INS_CDQE = 59;
  static const int X86_INS_FCHS = 60;
  static const int X86_INS_CLAC = 61;
  static const int X86_INS_CLC = 62;
  static const int X86_INS_CLD = 63;
  static const int X86_INS_CLFLUSH = 64;
  static const int X86_INS_CLFLUSHOPT = 65;
  static const int X86_INS_CLGI = 66;
  static const int X86_INS_CLI = 67;
  static const int X86_INS_CLTS = 68;
  static const int X86_INS_CLWB = 69;
  static const int X86_INS_CMC = 70;
  static const int X86_INS_CMOVA = 71;
  static const int X86_INS_CMOVAE = 72;
  static const int X86_INS_CMOVB = 73;
  static const int X86_INS_CMOVBE = 74;
  static const int X86_INS_FCMOVBE = 75;
  static const int X86_INS_FCMOVB = 76;
  static const int X86_INS_CMOVE = 77;
  static const int X86_INS_FCMOVE = 78;
  static const int X86_INS_CMOVG = 79;
  static const int X86_INS_CMOVGE = 80;
  static const int X86_INS_CMOVL = 81;
  static const int X86_INS_CMOVLE = 82;
  static const int X86_INS_FCMOVNBE = 83;
  static const int X86_INS_FCMOVNB = 84;
  static const int X86_INS_CMOVNE = 85;
  static const int X86_INS_FCMOVNE = 86;
  static const int X86_INS_CMOVNO = 87;
  static const int X86_INS_CMOVNP = 88;
  static const int X86_INS_FCMOVNU = 89;
  static const int X86_INS_CMOVNS = 90;
  static const int X86_INS_CMOVO = 91;
  static const int X86_INS_CMOVP = 92;
  static const int X86_INS_FCMOVU = 93;
  static const int X86_INS_CMOVS = 94;
  static const int X86_INS_CMP = 95;
  static const int X86_INS_CMPSB = 96;
  static const int X86_INS_CMPSQ = 97;
  static const int X86_INS_CMPSW = 98;
  static const int X86_INS_CMPXCHG16B = 99;
  static const int X86_INS_CMPXCHG = 100;
  static const int X86_INS_CMPXCHG8B = 101;
  static const int X86_INS_COMISD = 102;
  static const int X86_INS_COMISS = 103;
  static const int X86_INS_FCOMP = 104;
  static const int X86_INS_FCOMIP = 105;
  static const int X86_INS_FCOMI = 106;
  static const int X86_INS_FCOM = 107;
  static const int X86_INS_FCOS = 108;
  static const int X86_INS_CPUID = 109;
  static const int X86_INS_CQO = 110;
  static const int X86_INS_CRC32 = 111;
  static const int X86_INS_CVTDQ2PD = 112;
  static const int X86_INS_CVTDQ2PS = 113;
  static const int X86_INS_CVTPD2DQ = 114;
  static const int X86_INS_CVTPD2PS = 115;
  static const int X86_INS_CVTPS2DQ = 116;
  static const int X86_INS_CVTPS2PD = 117;
  static const int X86_INS_CVTSD2SI = 118;
  static const int X86_INS_CVTSD2SS = 119;
  static const int X86_INS_CVTSI2SD = 120;
  static const int X86_INS_CVTSI2SS = 121;
  static const int X86_INS_CVTSS2SD = 122;
  static const int X86_INS_CVTSS2SI = 123;
  static const int X86_INS_CVTTPD2DQ = 124;
  static const int X86_INS_CVTTPS2DQ = 125;
  static const int X86_INS_CVTTSD2SI = 126;
  static const int X86_INS_CVTTSS2SI = 127;
  static const int X86_INS_CWD = 128;
  static const int X86_INS_CWDE = 129;
  static const int X86_INS_DAA = 130;
  static const int X86_INS_DAS = 131;
  static const int X86_INS_DATA16 = 132;
  static const int X86_INS_DEC = 133;
  static const int X86_INS_DIV = 134;
  static const int X86_INS_DIVPD = 135;
  static const int X86_INS_DIVPS = 136;
  static const int X86_INS_FDIVR = 137;
  static const int X86_INS_FIDIVR = 138;
  static const int X86_INS_FDIVRP = 139;
  static const int X86_INS_DIVSD = 140;
  static const int X86_INS_DIVSS = 141;
  static const int X86_INS_FDIV = 142;
  static const int X86_INS_FIDIV = 143;
  static const int X86_INS_FDIVP = 144;
  static const int X86_INS_DPPD = 145;
  static const int X86_INS_DPPS = 146;
  static const int X86_INS_RET = 147;
  static const int X86_INS_ENCLS = 148;
  static const int X86_INS_ENCLU = 149;
  static const int X86_INS_ENTER = 150;
  static const int X86_INS_EXTRACTPS = 151;
  static const int X86_INS_EXTRQ = 152;
  static const int X86_INS_F2XM1 = 153;
  static const int X86_INS_LCALL = 154;
  static const int X86_INS_LJMP = 155;
  static const int X86_INS_FBLD = 156;
  static const int X86_INS_FBSTP = 157;
  static const int X86_INS_FCOMPP = 158;
  static const int X86_INS_FDECSTP = 159;
  static const int X86_INS_FEMMS = 160;
  static const int X86_INS_FFREE = 161;
  static const int X86_INS_FICOM = 162;
  static const int X86_INS_FICOMP = 163;
  static const int X86_INS_FINCSTP = 164;
  static const int X86_INS_FLDCW = 165;
  static const int X86_INS_FLDENV = 166;
  static const int X86_INS_FLDL2E = 167;
  static const int X86_INS_FLDL2T = 168;
  static const int X86_INS_FLDLG2 = 169;
  static const int X86_INS_FLDLN2 = 170;
  static const int X86_INS_FLDPI = 171;
  static const int X86_INS_FNCLEX = 172;
  static const int X86_INS_FNINIT = 173;
  static const int X86_INS_FNOP = 174;
  static const int X86_INS_FNSTCW = 175;
  static const int X86_INS_FNSTSW = 176;
  static const int X86_INS_FPATAN = 177;
  static const int X86_INS_FPREM = 178;
  static const int X86_INS_FPREM1 = 179;
  static const int X86_INS_FPTAN = 180;
  static const int X86_INS_FFREEP = 181;
  static const int X86_INS_FRNDINT = 182;
  static const int X86_INS_FRSTOR = 183;
  static const int X86_INS_FNSAVE = 184;
  static const int X86_INS_FSCALE = 185;
  static const int X86_INS_FSETPM = 186;
  static const int X86_INS_FSINCOS = 187;
  static const int X86_INS_FNSTENV = 188;
  static const int X86_INS_FXAM = 189;
  static const int X86_INS_FXRSTOR = 190;
  static const int X86_INS_FXRSTOR64 = 191;
  static const int X86_INS_FXSAVE = 192;
  static const int X86_INS_FXSAVE64 = 193;
  static const int X86_INS_FXTRACT = 194;
  static const int X86_INS_FYL2X = 195;
  static const int X86_INS_FYL2XP1 = 196;
  static const int X86_INS_MOVAPD = 197;
  static const int X86_INS_MOVAPS = 198;
  static const int X86_INS_ORPD = 199;
  static const int X86_INS_ORPS = 200;
  static const int X86_INS_VMOVAPD = 201;
  static const int X86_INS_VMOVAPS = 202;
  static const int X86_INS_XORPD = 203;
  static const int X86_INS_XORPS = 204;
  static const int X86_INS_GETSEC = 205;
  static const int X86_INS_HADDPD = 206;
  static const int X86_INS_HADDPS = 207;
  static const int X86_INS_HLT = 208;
  static const int X86_INS_HSUBPD = 209;
  static const int X86_INS_HSUBPS = 210;
  static const int X86_INS_IDIV = 211;
  static const int X86_INS_FILD = 212;
  static const int X86_INS_IMUL = 213;
  static const int X86_INS_IN = 214;
  static const int X86_INS_INC = 215;
  static const int X86_INS_INSB = 216;
  static const int X86_INS_INSERTPS = 217;
  static const int X86_INS_INSERTQ = 218;
  static const int X86_INS_INSD = 219;
  static const int X86_INS_INSW = 220;
  static const int X86_INS_INT = 221;
  static const int X86_INS_INT1 = 222;
  static const int X86_INS_INT3 = 223;
  static const int X86_INS_INTO = 224;
  static const int X86_INS_INVD = 225;
  static const int X86_INS_INVEPT = 226;
  static const int X86_INS_INVLPG = 227;
  static const int X86_INS_INVLPGA = 228;
  static const int X86_INS_INVPCID = 229;
  static const int X86_INS_INVVPID = 230;
  static const int X86_INS_IRET = 231;
  static const int X86_INS_IRETD = 232;
  static const int X86_INS_IRETQ = 233;
  static const int X86_INS_FISTTP = 234;
  static const int X86_INS_FIST = 235;
  static const int X86_INS_FISTP = 236;
  static const int X86_INS_UCOMISD = 237;
  static const int X86_INS_UCOMISS = 238;
  static const int X86_INS_VCOMISD = 239;
  static const int X86_INS_VCOMISS = 240;
  static const int X86_INS_VCVTSD2SS = 241;
  static const int X86_INS_VCVTSI2SD = 242;
  static const int X86_INS_VCVTSI2SS = 243;
  static const int X86_INS_VCVTSS2SD = 244;
  static const int X86_INS_VCVTTSD2SI = 245;
  static const int X86_INS_VCVTTSD2USI = 246;
  static const int X86_INS_VCVTTSS2SI = 247;
  static const int X86_INS_VCVTTSS2USI = 248;
  static const int X86_INS_VCVTUSI2SD = 249;
  static const int X86_INS_VCVTUSI2SS = 250;
  static const int X86_INS_VUCOMISD = 251;
  static const int X86_INS_VUCOMISS = 252;
  static const int X86_INS_JAE = 253;
  static const int X86_INS_JA = 254;
  static const int X86_INS_JBE = 255;
  static const int X86_INS_JB = 256;
  static const int X86_INS_JCXZ = 257;
  static const int X86_INS_JECXZ = 258;
  static const int X86_INS_JE = 259;
  static const int X86_INS_JGE = 260;
  static const int X86_INS_JG = 261;
  static const int X86_INS_JLE = 262;
  static const int X86_INS_JL = 263;
  static const int X86_INS_JMP = 264;
  static const int X86_INS_JNE = 265;
  static const int X86_INS_JNO = 266;
  static const int X86_INS_JNP = 267;
  static const int X86_INS_JNS = 268;
  static const int X86_INS_JO = 269;
  static const int X86_INS_JP = 270;
  static const int X86_INS_JRCXZ = 271;
  static const int X86_INS_JS = 272;
  static const int X86_INS_KANDB = 273;
  static const int X86_INS_KANDD = 274;
  static const int X86_INS_KANDNB = 275;
  static const int X86_INS_KANDND = 276;
  static const int X86_INS_KANDNQ = 277;
  static const int X86_INS_KANDNW = 278;
  static const int X86_INS_KANDQ = 279;
  static const int X86_INS_KANDW = 280;
  static const int X86_INS_KMOVB = 281;
  static const int X86_INS_KMOVD = 282;
  static const int X86_INS_KMOVQ = 283;
  static const int X86_INS_KMOVW = 284;
  static const int X86_INS_KNOTB = 285;
  static const int X86_INS_KNOTD = 286;
  static const int X86_INS_KNOTQ = 287;
  static const int X86_INS_KNOTW = 288;
  static const int X86_INS_KORB = 289;
  static const int X86_INS_KORD = 290;
  static const int X86_INS_KORQ = 291;
  static const int X86_INS_KORTESTB = 292;
  static const int X86_INS_KORTESTD = 293;
  static const int X86_INS_KORTESTQ = 294;
  static const int X86_INS_KORTESTW = 295;
  static const int X86_INS_KORW = 296;
  static const int X86_INS_KSHIFTLB = 297;
  static const int X86_INS_KSHIFTLD = 298;
  static const int X86_INS_KSHIFTLQ = 299;
  static const int X86_INS_KSHIFTLW = 300;
  static const int X86_INS_KSHIFTRB = 301;
  static const int X86_INS_KSHIFTRD = 302;
  static const int X86_INS_KSHIFTRQ = 303;
  static const int X86_INS_KSHIFTRW = 304;
  static const int X86_INS_KUNPCKBW = 305;
  static const int X86_INS_KXNORB = 306;
  static const int X86_INS_KXNORD = 307;
  static const int X86_INS_KXNORQ = 308;
  static const int X86_INS_KXNORW = 309;
  static const int X86_INS_KXORB = 310;
  static const int X86_INS_KXORD = 311;
  static const int X86_INS_KXORQ = 312;
  static const int X86_INS_KXORW = 313;
  static const int X86_INS_LAHF = 314;
  static const int X86_INS_LAR = 315;
  static const int X86_INS_LDDQU = 316;
  static const int X86_INS_LDMXCSR = 317;
  static const int X86_INS_LDS = 318;
  static const int X86_INS_FLDZ = 319;
  static const int X86_INS_FLD1 = 320;
  static const int X86_INS_FLD = 321;
  static const int X86_INS_LEA = 322;
  static const int X86_INS_LEAVE = 323;
  static const int X86_INS_LES = 324;
  static const int X86_INS_LFENCE = 325;
  static const int X86_INS_LFS = 326;
  static const int X86_INS_LGDT = 327;
  static const int X86_INS_LGS = 328;
  static const int X86_INS_LIDT = 329;
  static const int X86_INS_LLDT = 330;
  static const int X86_INS_LMSW = 331;
  static const int X86_INS_OR = 332;
  static const int X86_INS_SUB = 333;
  static const int X86_INS_XOR = 334;
  static const int X86_INS_LODSB = 335;
  static const int X86_INS_LODSD = 336;
  static const int X86_INS_LODSQ = 337;
  static const int X86_INS_LODSW = 338;
  static const int X86_INS_LOOP = 339;
  static const int X86_INS_LOOPE = 340;
  static const int X86_INS_LOOPNE = 341;
  static const int X86_INS_RETF = 342;
  static const int X86_INS_RETFQ = 343;
  static const int X86_INS_LSL = 344;
  static const int X86_INS_LSS = 345;
  static const int X86_INS_LTR = 346;
  static const int X86_INS_XADD = 347;
  static const int X86_INS_LZCNT = 348;
  static const int X86_INS_MASKMOVDQU = 349;
  static const int X86_INS_MAXPD = 350;
  static const int X86_INS_MAXPS = 351;
  static const int X86_INS_MAXSD = 352;
  static const int X86_INS_MAXSS = 353;
  static const int X86_INS_MFENCE = 354;
  static const int X86_INS_MINPD = 355;
  static const int X86_INS_MINPS = 356;
  static const int X86_INS_MINSD = 357;
  static const int X86_INS_MINSS = 358;
  static const int X86_INS_CVTPD2PI = 359;
  static const int X86_INS_CVTPI2PD = 360;
  static const int X86_INS_CVTPI2PS = 361;
  static const int X86_INS_CVTPS2PI = 362;
  static const int X86_INS_CVTTPD2PI = 363;
  static const int X86_INS_CVTTPS2PI = 364;
  static const int X86_INS_EMMS = 365;
  static const int X86_INS_MASKMOVQ = 366;
  static const int X86_INS_MOVD = 367;
  static const int X86_INS_MOVDQ2Q = 368;
  static const int X86_INS_MOVNTQ = 369;
  static const int X86_INS_MOVQ2DQ = 370;
  static const int X86_INS_MOVQ = 371;
  static const int X86_INS_PABSB = 372;
  static const int X86_INS_PABSD = 373;
  static const int X86_INS_PABSW = 374;
  static const int X86_INS_PACKSSDW = 375;
  static const int X86_INS_PACKSSWB = 376;
  static const int X86_INS_PACKUSWB = 377;
  static const int X86_INS_PADDB = 378;
  static const int X86_INS_PADDD = 379;
  static const int X86_INS_PADDQ = 380;
  static const int X86_INS_PADDSB = 381;
  static const int X86_INS_PADDSW = 382;
  static const int X86_INS_PADDUSB = 383;
  static const int X86_INS_PADDUSW = 384;
  static const int X86_INS_PADDW = 385;
  static const int X86_INS_PALIGNR = 386;
  static const int X86_INS_PANDN = 387;
  static const int X86_INS_PAND = 388;
  static const int X86_INS_PAVGB = 389;
  static const int X86_INS_PAVGW = 390;
  static const int X86_INS_PCMPEQB = 391;
  static const int X86_INS_PCMPEQD = 392;
  static const int X86_INS_PCMPEQW = 393;
  static const int X86_INS_PCMPGTB = 394;
  static const int X86_INS_PCMPGTD = 395;
  static const int X86_INS_PCMPGTW = 396;
  static const int X86_INS_PEXTRW = 397;
  static const int X86_INS_PHADDSW = 398;
  static const int X86_INS_PHADDW = 399;
  static const int X86_INS_PHADDD = 400;
  static const int X86_INS_PHSUBD = 401;
  static const int X86_INS_PHSUBSW = 402;
  static const int X86_INS_PHSUBW = 403;
  static const int X86_INS_PINSRW = 404;
  static const int X86_INS_PMADDUBSW = 405;
  static const int X86_INS_PMADDWD = 406;
  static const int X86_INS_PMAXSW = 407;
  static const int X86_INS_PMAXUB = 408;
  static const int X86_INS_PMINSW = 409;
  static const int X86_INS_PMINUB = 410;
  static const int X86_INS_PMOVMSKB = 411;
  static const int X86_INS_PMULHRSW = 412;
  static const int X86_INS_PMULHUW = 413;
  static const int X86_INS_PMULHW = 414;
  static const int X86_INS_PMULLW = 415;
  static const int X86_INS_PMULUDQ = 416;
  static const int X86_INS_POR = 417;
  static const int X86_INS_PSADBW = 418;
  static const int X86_INS_PSHUFB = 419;
  static const int X86_INS_PSHUFW = 420;
  static const int X86_INS_PSIGNB = 421;
  static const int X86_INS_PSIGND = 422;
  static const int X86_INS_PSIGNW = 423;
  static const int X86_INS_PSLLD = 424;
  static const int X86_INS_PSLLQ = 425;
  static const int X86_INS_PSLLW = 426;
  static const int X86_INS_PSRAD = 427;
  static const int X86_INS_PSRAW = 428;
  static const int X86_INS_PSRLD = 429;
  static const int X86_INS_PSRLQ = 430;
  static const int X86_INS_PSRLW = 431;
  static const int X86_INS_PSUBB = 432;
  static const int X86_INS_PSUBD = 433;
  static const int X86_INS_PSUBQ = 434;
  static const int X86_INS_PSUBSB = 435;
  static const int X86_INS_PSUBSW = 436;
  static const int X86_INS_PSUBUSB = 437;
  static const int X86_INS_PSUBUSW = 438;
  static const int X86_INS_PSUBW = 439;
  static const int X86_INS_PUNPCKHBW = 440;
  static const int X86_INS_PUNPCKHDQ = 441;
  static const int X86_INS_PUNPCKHWD = 442;
  static const int X86_INS_PUNPCKLBW = 443;
  static const int X86_INS_PUNPCKLDQ = 444;
  static const int X86_INS_PUNPCKLWD = 445;
  static const int X86_INS_PXOR = 446;
  static const int X86_INS_MONITOR = 447;
  static const int X86_INS_MONTMUL = 448;
  static const int X86_INS_MOV = 449;
  static const int X86_INS_MOVABS = 450;
  static const int X86_INS_MOVBE = 451;
  static const int X86_INS_MOVDDUP = 452;
  static const int X86_INS_MOVDQA = 453;
  static const int X86_INS_MOVDQU = 454;
  static const int X86_INS_MOVHLPS = 455;
  static const int X86_INS_MOVHPD = 456;
  static const int X86_INS_MOVHPS = 457;
  static const int X86_INS_MOVLHPS = 458;
  static const int X86_INS_MOVLPD = 459;
  static const int X86_INS_MOVLPS = 460;
  static const int X86_INS_MOVMSKPD = 461;
  static const int X86_INS_MOVMSKPS = 462;
  static const int X86_INS_MOVNTDQA = 463;
  static const int X86_INS_MOVNTDQ = 464;
  static const int X86_INS_MOVNTI = 465;
  static const int X86_INS_MOVNTPD = 466;
  static const int X86_INS_MOVNTPS = 467;
  static const int X86_INS_MOVNTSD = 468;
  static const int X86_INS_MOVNTSS = 469;
  static const int X86_INS_MOVSB = 470;
  static const int X86_INS_MOVSD = 471;
  static const int X86_INS_MOVSHDUP = 472;
  static const int X86_INS_MOVSLDUP = 473;
  static const int X86_INS_MOVSQ = 474;
  static const int X86_INS_MOVSS = 475;
  static const int X86_INS_MOVSW = 476;
  static const int X86_INS_MOVSX = 477;
  static const int X86_INS_MOVSXD = 478;
  static const int X86_INS_MOVUPD = 479;
  static const int X86_INS_MOVUPS = 480;
  static const int X86_INS_MOVZX = 481;
  static const int X86_INS_MPSADBW = 482;
  static const int X86_INS_MUL = 483;
  static const int X86_INS_MULPD = 484;
  static const int X86_INS_MULPS = 485;
  static const int X86_INS_MULSD = 486;
  static const int X86_INS_MULSS = 487;
  static const int X86_INS_MULX = 488;
  static const int X86_INS_FMUL = 489;
  static const int X86_INS_FIMUL = 490;
  static const int X86_INS_FMULP = 491;
  static const int X86_INS_MWAIT = 492;
  static const int X86_INS_NEG = 493;
  static const int X86_INS_NOP = 494;
  static const int X86_INS_NOT = 495;
  static const int X86_INS_OUT = 496;
  static const int X86_INS_OUTSB = 497;
  static const int X86_INS_OUTSD = 498;
  static const int X86_INS_OUTSW = 499;
  static const int X86_INS_PACKUSDW = 500;
  static const int X86_INS_PAUSE = 501;
  static const int X86_INS_PAVGUSB = 502;
  static const int X86_INS_PBLENDVB = 503;
  static const int X86_INS_PBLENDW = 504;
  static const int X86_INS_PCLMULQDQ = 505;
  static const int X86_INS_PCMPEQQ = 506;
  static const int X86_INS_PCMPESTRI = 507;
  static const int X86_INS_PCMPESTRM = 508;
  static const int X86_INS_PCMPGTQ = 509;
  static const int X86_INS_PCMPISTRI = 510;
  static const int X86_INS_PCMPISTRM = 511;
  static const int X86_INS_PCOMMIT = 512;
  static const int X86_INS_PDEP = 513;
  static const int X86_INS_PEXT = 514;
  static const int X86_INS_PEXTRB = 515;
  static const int X86_INS_PEXTRD = 516;
  static const int X86_INS_PEXTRQ = 517;
  static const int X86_INS_PF2ID = 518;
  static const int X86_INS_PF2IW = 519;
  static const int X86_INS_PFACC = 520;
  static const int X86_INS_PFADD = 521;
  static const int X86_INS_PFCMPEQ = 522;
  static const int X86_INS_PFCMPGE = 523;
  static const int X86_INS_PFCMPGT = 524;
  static const int X86_INS_PFMAX = 525;
  static const int X86_INS_PFMIN = 526;
  static const int X86_INS_PFMUL = 527;
  static const int X86_INS_PFNACC = 528;
  static const int X86_INS_PFPNACC = 529;
  static const int X86_INS_PFRCPIT1 = 530;
  static const int X86_INS_PFRCPIT2 = 531;
  static const int X86_INS_PFRCP = 532;
  static const int X86_INS_PFRSQIT1 = 533;
  static const int X86_INS_PFRSQRT = 534;
  static const int X86_INS_PFSUBR = 535;
  static const int X86_INS_PFSUB = 536;
  static const int X86_INS_PHMINPOSUW = 537;
  static const int X86_INS_PI2FD = 538;
  static const int X86_INS_PI2FW = 539;
  static const int X86_INS_PINSRB = 540;
  static const int X86_INS_PINSRD = 541;
  static const int X86_INS_PINSRQ = 542;
  static const int X86_INS_PMAXSB = 543;
  static const int X86_INS_PMAXSD = 544;
  static const int X86_INS_PMAXUD = 545;
  static const int X86_INS_PMAXUW = 546;
  static const int X86_INS_PMINSB = 547;
  static const int X86_INS_PMINSD = 548;
  static const int X86_INS_PMINUD = 549;
  static const int X86_INS_PMINUW = 550;
  static const int X86_INS_PMOVSXBD = 551;
  static const int X86_INS_PMOVSXBQ = 552;
  static const int X86_INS_PMOVSXBW = 553;
  static const int X86_INS_PMOVSXDQ = 554;
  static const int X86_INS_PMOVSXWD = 555;
  static const int X86_INS_PMOVSXWQ = 556;
  static const int X86_INS_PMOVZXBD = 557;
  static const int X86_INS_PMOVZXBQ = 558;
  static const int X86_INS_PMOVZXBW = 559;
  static const int X86_INS_PMOVZXDQ = 560;
  static const int X86_INS_PMOVZXWD = 561;
  static const int X86_INS_PMOVZXWQ = 562;
  static const int X86_INS_PMULDQ = 563;
  static const int X86_INS_PMULHRW = 564;
  static const int X86_INS_PMULLD = 565;
  static const int X86_INS_POP = 566;
  static const int X86_INS_POPAW = 567;
  static const int X86_INS_POPAL = 568;
  static const int X86_INS_POPCNT = 569;
  static const int X86_INS_POPF = 570;
  static const int X86_INS_POPFD = 571;
  static const int X86_INS_POPFQ = 572;
  static const int X86_INS_PREFETCH = 573;
  static const int X86_INS_PREFETCHNTA = 574;
  static const int X86_INS_PREFETCHT0 = 575;
  static const int X86_INS_PREFETCHT1 = 576;
  static const int X86_INS_PREFETCHT2 = 577;
  static const int X86_INS_PREFETCHW = 578;
  static const int X86_INS_PSHUFD = 579;
  static const int X86_INS_PSHUFHW = 580;
  static const int X86_INS_PSHUFLW = 581;
  static const int X86_INS_PSLLDQ = 582;
  static const int X86_INS_PSRLDQ = 583;
  static const int X86_INS_PSWAPD = 584;
  static const int X86_INS_PTEST = 585;
  static const int X86_INS_PUNPCKHQDQ = 586;
  static const int X86_INS_PUNPCKLQDQ = 587;
  static const int X86_INS_PUSH = 588;
  static const int X86_INS_PUSHAW = 589;
  static const int X86_INS_PUSHAL = 590;
  static const int X86_INS_PUSHF = 591;
  static const int X86_INS_PUSHFD = 592;
  static const int X86_INS_PUSHFQ = 593;
  static const int X86_INS_RCL = 594;
  static const int X86_INS_RCPPS = 595;
  static const int X86_INS_RCPSS = 596;
  static const int X86_INS_RCR = 597;
  static const int X86_INS_RDFSBASE = 598;
  static const int X86_INS_RDGSBASE = 599;
  static const int X86_INS_RDMSR = 600;
  static const int X86_INS_RDPMC = 601;
  static const int X86_INS_RDRAND = 602;
  static const int X86_INS_RDSEED = 603;
  static const int X86_INS_RDTSC = 604;
  static const int X86_INS_RDTSCP = 605;
  static const int X86_INS_ROL = 606;
  static const int X86_INS_ROR = 607;
  static const int X86_INS_RORX = 608;
  static const int X86_INS_ROUNDPD = 609;
  static const int X86_INS_ROUNDPS = 610;
  static const int X86_INS_ROUNDSD = 611;
  static const int X86_INS_ROUNDSS = 612;
  static const int X86_INS_RSM = 613;
  static const int X86_INS_RSQRTPS = 614;
  static const int X86_INS_RSQRTSS = 615;
  static const int X86_INS_SAHF = 616;
  static const int X86_INS_SAL = 617;
  static const int X86_INS_SALC = 618;
  static const int X86_INS_SAR = 619;
  static const int X86_INS_SARX = 620;
  static const int X86_INS_SBB = 621;
  static const int X86_INS_SCASB = 622;
  static const int X86_INS_SCASD = 623;
  static const int X86_INS_SCASQ = 624;
  static const int X86_INS_SCASW = 625;
  static const int X86_INS_SETAE = 626;
  static const int X86_INS_SETA = 627;
  static const int X86_INS_SETBE = 628;
  static const int X86_INS_SETB = 629;
  static const int X86_INS_SETE = 630;
  static const int X86_INS_SETGE = 631;
  static const int X86_INS_SETG = 632;
  static const int X86_INS_SETLE = 633;
  static const int X86_INS_SETL = 634;
  static const int X86_INS_SETNE = 635;
  static const int X86_INS_SETNO = 636;
  static const int X86_INS_SETNP = 637;
  static const int X86_INS_SETNS = 638;
  static const int X86_INS_SETO = 639;
  static const int X86_INS_SETP = 640;
  static const int X86_INS_SETS = 641;
  static const int X86_INS_SFENCE = 642;
  static const int X86_INS_SGDT = 643;
  static const int X86_INS_SHA1MSG1 = 644;
  static const int X86_INS_SHA1MSG2 = 645;
  static const int X86_INS_SHA1NEXTE = 646;
  static const int X86_INS_SHA1RNDS4 = 647;
  static const int X86_INS_SHA256MSG1 = 648;
  static const int X86_INS_SHA256MSG2 = 649;
  static const int X86_INS_SHA256RNDS2 = 650;
  static const int X86_INS_SHL = 651;
  static const int X86_INS_SHLD = 652;
  static const int X86_INS_SHLX = 653;
  static const int X86_INS_SHR = 654;
  static const int X86_INS_SHRD = 655;
  static const int X86_INS_SHRX = 656;
  static const int X86_INS_SHUFPD = 657;
  static const int X86_INS_SHUFPS = 658;
  static const int X86_INS_SIDT = 659;
  static const int X86_INS_FSIN = 660;
  static const int X86_INS_SKINIT = 661;
  static const int X86_INS_SLDT = 662;
  static const int X86_INS_SMSW = 663;
  static const int X86_INS_SQRTPD = 664;
  static const int X86_INS_SQRTPS = 665;
  static const int X86_INS_SQRTSD = 666;
  static const int X86_INS_SQRTSS = 667;
  static const int X86_INS_FSQRT = 668;
  static const int X86_INS_STAC = 669;
  static const int X86_INS_STC = 670;
  static const int X86_INS_STD = 671;
  static const int X86_INS_STGI = 672;
  static const int X86_INS_STI = 673;
  static const int X86_INS_STMXCSR = 674;
  static const int X86_INS_STOSB = 675;
  static const int X86_INS_STOSD = 676;
  static const int X86_INS_STOSQ = 677;
  static const int X86_INS_STOSW = 678;
  static const int X86_INS_STR = 679;
  static const int X86_INS_FST = 680;
  static const int X86_INS_FSTP = 681;
  static const int X86_INS_FSTPNCE = 682;
  static const int X86_INS_FXCH = 683;
  static const int X86_INS_SUBPD = 684;
  static const int X86_INS_SUBPS = 685;
  static const int X86_INS_FSUBR = 686;
  static const int X86_INS_FISUBR = 687;
  static const int X86_INS_FSUBRP = 688;
  static const int X86_INS_SUBSD = 689;
  static const int X86_INS_SUBSS = 690;
  static const int X86_INS_FSUB = 691;
  static const int X86_INS_FISUB = 692;
  static const int X86_INS_FSUBP = 693;
  static const int X86_INS_SWAPGS = 694;
  static const int X86_INS_SYSCALL = 695;
  static const int X86_INS_SYSENTER = 696;
  static const int X86_INS_SYSEXIT = 697;
  static const int X86_INS_SYSRET = 698;
  static const int X86_INS_T1MSKC = 699;
  static const int X86_INS_TEST = 700;
  static const int X86_INS_UD2 = 701;
  static const int X86_INS_FTST = 702;
  static const int X86_INS_TZCNT = 703;
  static const int X86_INS_TZMSK = 704;
  static const int X86_INS_FUCOMIP = 705;
  static const int X86_INS_FUCOMI = 706;
  static const int X86_INS_FUCOMPP = 707;
  static const int X86_INS_FUCOMP = 708;
  static const int X86_INS_FUCOM = 709;
  static const int X86_INS_UD2B = 710;
  static const int X86_INS_UNPCKHPD = 711;
  static const int X86_INS_UNPCKHPS = 712;
  static const int X86_INS_UNPCKLPD = 713;
  static const int X86_INS_UNPCKLPS = 714;
  static const int X86_INS_VADDPD = 715;
  static const int X86_INS_VADDPS = 716;
  static const int X86_INS_VADDSD = 717;
  static const int X86_INS_VADDSS = 718;
  static const int X86_INS_VADDSUBPD = 719;
  static const int X86_INS_VADDSUBPS = 720;
  static const int X86_INS_VAESDECLAST = 721;
  static const int X86_INS_VAESDEC = 722;
  static const int X86_INS_VAESENCLAST = 723;
  static const int X86_INS_VAESENC = 724;
  static const int X86_INS_VAESIMC = 725;
  static const int X86_INS_VAESKEYGENASSIST = 726;
  static const int X86_INS_VALIGND = 727;
  static const int X86_INS_VALIGNQ = 728;
  static const int X86_INS_VANDNPD = 729;
  static const int X86_INS_VANDNPS = 730;
  static const int X86_INS_VANDPD = 731;
  static const int X86_INS_VANDPS = 732;
  static const int X86_INS_VBLENDMPD = 733;
  static const int X86_INS_VBLENDMPS = 734;
  static const int X86_INS_VBLENDPD = 735;
  static const int X86_INS_VBLENDPS = 736;
  static const int X86_INS_VBLENDVPD = 737;
  static const int X86_INS_VBLENDVPS = 738;
  static const int X86_INS_VBROADCASTF128 = 739;
  static const int X86_INS_VBROADCASTI32X4 = 740;
  static const int X86_INS_VBROADCASTI64X4 = 741;
  static const int X86_INS_VBROADCASTSD = 742;
  static const int X86_INS_VBROADCASTSS = 743;
  static const int X86_INS_VCOMPRESSPD = 744;
  static const int X86_INS_VCOMPRESSPS = 745;
  static const int X86_INS_VCVTDQ2PD = 746;
  static const int X86_INS_VCVTDQ2PS = 747;
  static const int X86_INS_VCVTPD2DQX = 748;
  static const int X86_INS_VCVTPD2DQ = 749;
  static const int X86_INS_VCVTPD2PSX = 750;
  static const int X86_INS_VCVTPD2PS = 751;
  static const int X86_INS_VCVTPD2UDQ = 752;
  static const int X86_INS_VCVTPH2PS = 753;
  static const int X86_INS_VCVTPS2DQ = 754;
  static const int X86_INS_VCVTPS2PD = 755;
  static const int X86_INS_VCVTPS2PH = 756;
  static const int X86_INS_VCVTPS2UDQ = 757;
  static const int X86_INS_VCVTSD2SI = 758;
  static const int X86_INS_VCVTSD2USI = 759;
  static const int X86_INS_VCVTSS2SI = 760;
  static const int X86_INS_VCVTSS2USI = 761;
  static const int X86_INS_VCVTTPD2DQX = 762;
  static const int X86_INS_VCVTTPD2DQ = 763;
  static const int X86_INS_VCVTTPD2UDQ = 764;
  static const int X86_INS_VCVTTPS2DQ = 765;
  static const int X86_INS_VCVTTPS2UDQ = 766;
  static const int X86_INS_VCVTUDQ2PD = 767;
  static const int X86_INS_VCVTUDQ2PS = 768;
  static const int X86_INS_VDIVPD = 769;
  static const int X86_INS_VDIVPS = 770;
  static const int X86_INS_VDIVSD = 771;
  static const int X86_INS_VDIVSS = 772;
  static const int X86_INS_VDPPD = 773;
  static const int X86_INS_VDPPS = 774;
  static const int X86_INS_VERR = 775;
  static const int X86_INS_VERW = 776;
  static const int X86_INS_VEXP2PD = 777;
  static const int X86_INS_VEXP2PS = 778;
  static const int X86_INS_VEXPANDPD = 779;
  static const int X86_INS_VEXPANDPS = 780;
  static const int X86_INS_VEXTRACTF128 = 781;
  static const int X86_INS_VEXTRACTF32X4 = 782;
  static const int X86_INS_VEXTRACTF64X4 = 783;
  static const int X86_INS_VEXTRACTI128 = 784;
  static const int X86_INS_VEXTRACTI32X4 = 785;
  static const int X86_INS_VEXTRACTI64X4 = 786;
  static const int X86_INS_VEXTRACTPS = 787;
  static const int X86_INS_VFMADD132PD = 788;
  static const int X86_INS_VFMADD132PS = 789;
  static const int X86_INS_VFMADDPD = 790;
  static const int X86_INS_VFMADD213PD = 791;
  static const int X86_INS_VFMADD231PD = 792;
  static const int X86_INS_VFMADDPS = 793;
  static const int X86_INS_VFMADD213PS = 794;
  static const int X86_INS_VFMADD231PS = 795;
  static const int X86_INS_VFMADDSD = 796;
  static const int X86_INS_VFMADD213SD = 797;
  static const int X86_INS_VFMADD132SD = 798;
  static const int X86_INS_VFMADD231SD = 799;
  static const int X86_INS_VFMADDSS = 800;
  static const int X86_INS_VFMADD213SS = 801;
  static const int X86_INS_VFMADD132SS = 802;
  static const int X86_INS_VFMADD231SS = 803;
  static const int X86_INS_VFMADDSUB132PD = 804;
  static const int X86_INS_VFMADDSUB132PS = 805;
  static const int X86_INS_VFMADDSUBPD = 806;
  static const int X86_INS_VFMADDSUB213PD = 807;
  static const int X86_INS_VFMADDSUB231PD = 808;
  static const int X86_INS_VFMADDSUBPS = 809;
  static const int X86_INS_VFMADDSUB213PS = 810;
  static const int X86_INS_VFMADDSUB231PS = 811;
  static const int X86_INS_VFMSUB132PD = 812;
  static const int X86_INS_VFMSUB132PS = 813;
  static const int X86_INS_VFMSUBADD132PD = 814;
  static const int X86_INS_VFMSUBADD132PS = 815;
  static const int X86_INS_VFMSUBADDPD = 816;
  static const int X86_INS_VFMSUBADD213PD = 817;
  static const int X86_INS_VFMSUBADD231PD = 818;
  static const int X86_INS_VFMSUBADDPS = 819;
  static const int X86_INS_VFMSUBADD213PS = 820;
  static const int X86_INS_VFMSUBADD231PS = 821;
  static const int X86_INS_VFMSUBPD = 822;
  static const int X86_INS_VFMSUB213PD = 823;
  static const int X86_INS_VFMSUB231PD = 824;
  static const int X86_INS_VFMSUBPS = 825;
  static const int X86_INS_VFMSUB213PS = 826;
  static const int X86_INS_VFMSUB231PS = 827;
  static const int X86_INS_VFMSUBSD = 828;
  static const int X86_INS_VFMSUB213SD = 829;
  static const int X86_INS_VFMSUB132SD = 830;
  static const int X86_INS_VFMSUB231SD = 831;
  static const int X86_INS_VFMSUBSS = 832;
  static const int X86_INS_VFMSUB213SS = 833;
  static const int X86_INS_VFMSUB132SS = 834;
  static const int X86_INS_VFMSUB231SS = 835;
  static const int X86_INS_VFNMADD132PD = 836;
  static const int X86_INS_VFNMADD132PS = 837;
  static const int X86_INS_VFNMADDPD = 838;
  static const int X86_INS_VFNMADD213PD = 839;
  static const int X86_INS_VFNMADD231PD = 840;
  static const int X86_INS_VFNMADDPS = 841;
  static const int X86_INS_VFNMADD213PS = 842;
  static const int X86_INS_VFNMADD231PS = 843;
  static const int X86_INS_VFNMADDSD = 844;
  static const int X86_INS_VFNMADD213SD = 845;
  static const int X86_INS_VFNMADD132SD = 846;
  static const int X86_INS_VFNMADD231SD = 847;
  static const int X86_INS_VFNMADDSS = 848;
  static const int X86_INS_VFNMADD213SS = 849;
  static const int X86_INS_VFNMADD132SS = 850;
  static const int X86_INS_VFNMADD231SS = 851;
  static const int X86_INS_VFNMSUB132PD = 852;
  static const int X86_INS_VFNMSUB132PS = 853;
  static const int X86_INS_VFNMSUBPD = 854;
  static const int X86_INS_VFNMSUB213PD = 855;
  static const int X86_INS_VFNMSUB231PD = 856;
  static const int X86_INS_VFNMSUBPS = 857;
  static const int X86_INS_VFNMSUB213PS = 858;
  static const int X86_INS_VFNMSUB231PS = 859;
  static const int X86_INS_VFNMSUBSD = 860;
  static const int X86_INS_VFNMSUB213SD = 861;
  static const int X86_INS_VFNMSUB132SD = 862;
  static const int X86_INS_VFNMSUB231SD = 863;
  static const int X86_INS_VFNMSUBSS = 864;
  static const int X86_INS_VFNMSUB213SS = 865;
  static const int X86_INS_VFNMSUB132SS = 866;
  static const int X86_INS_VFNMSUB231SS = 867;
  static const int X86_INS_VFRCZPD = 868;
  static const int X86_INS_VFRCZPS = 869;
  static const int X86_INS_VFRCZSD = 870;
  static const int X86_INS_VFRCZSS = 871;
  static const int X86_INS_VORPD = 872;
  static const int X86_INS_VORPS = 873;
  static const int X86_INS_VXORPD = 874;
  static const int X86_INS_VXORPS = 875;
  static const int X86_INS_VGATHERDPD = 876;
  static const int X86_INS_VGATHERDPS = 877;
  static const int X86_INS_VGATHERPF0DPD = 878;
  static const int X86_INS_VGATHERPF0DPS = 879;
  static const int X86_INS_VGATHERPF0QPD = 880;
  static const int X86_INS_VGATHERPF0QPS = 881;
  static const int X86_INS_VGATHERPF1DPD = 882;
  static const int X86_INS_VGATHERPF1DPS = 883;
  static const int X86_INS_VGATHERPF1QPD = 884;
  static const int X86_INS_VGATHERPF1QPS = 885;
  static const int X86_INS_VGATHERQPD = 886;
  static const int X86_INS_VGATHERQPS = 887;
  static const int X86_INS_VHADDPD = 888;
  static const int X86_INS_VHADDPS = 889;
  static const int X86_INS_VHSUBPD = 890;
  static const int X86_INS_VHSUBPS = 891;
  static const int X86_INS_VINSERTF128 = 892;
  static const int X86_INS_VINSERTF32X4 = 893;
  static const int X86_INS_VINSERTF32X8 = 894;
  static const int X86_INS_VINSERTF64X2 = 895;
  static const int X86_INS_VINSERTF64X4 = 896;
  static const int X86_INS_VINSERTI128 = 897;
  static const int X86_INS_VINSERTI32X4 = 898;
  static const int X86_INS_VINSERTI32X8 = 899;
  static const int X86_INS_VINSERTI64X2 = 900;
  static const int X86_INS_VINSERTI64X4 = 901;
  static const int X86_INS_VINSERTPS = 902;
  static const int X86_INS_VLDDQU = 903;
  static const int X86_INS_VLDMXCSR = 904;
  static const int X86_INS_VMASKMOVDQU = 905;
  static const int X86_INS_VMASKMOVPD = 906;
  static const int X86_INS_VMASKMOVPS = 907;
  static const int X86_INS_VMAXPD = 908;
  static const int X86_INS_VMAXPS = 909;
  static const int X86_INS_VMAXSD = 910;
  static const int X86_INS_VMAXSS = 911;
  static const int X86_INS_VMCALL = 912;
  static const int X86_INS_VMCLEAR = 913;
  static const int X86_INS_VMFUNC = 914;
  static const int X86_INS_VMINPD = 915;
  static const int X86_INS_VMINPS = 916;
  static const int X86_INS_VMINSD = 917;
  static const int X86_INS_VMINSS = 918;
  static const int X86_INS_VMLAUNCH = 919;
  static const int X86_INS_VMLOAD = 920;
  static const int X86_INS_VMMCALL = 921;
  static const int X86_INS_VMOVQ = 922;
  static const int X86_INS_VMOVDDUP = 923;
  static const int X86_INS_VMOVD = 924;
  static const int X86_INS_VMOVDQA32 = 925;
  static const int X86_INS_VMOVDQA64 = 926;
  static const int X86_INS_VMOVDQA = 927;
  static const int X86_INS_VMOVDQU16 = 928;
  static const int X86_INS_VMOVDQU32 = 929;
  static const int X86_INS_VMOVDQU64 = 930;
  static const int X86_INS_VMOVDQU8 = 931;
  static const int X86_INS_VMOVDQU = 932;
  static const int X86_INS_VMOVHLPS = 933;
  static const int X86_INS_VMOVHPD = 934;
  static const int X86_INS_VMOVHPS = 935;
  static const int X86_INS_VMOVLHPS = 936;
  static const int X86_INS_VMOVLPD = 937;
  static const int X86_INS_VMOVLPS = 938;
  static const int X86_INS_VMOVMSKPD = 939;
  static const int X86_INS_VMOVMSKPS = 940;
  static const int X86_INS_VMOVNTDQA = 941;
  static const int X86_INS_VMOVNTDQ = 942;
  static const int X86_INS_VMOVNTPD = 943;
  static const int X86_INS_VMOVNTPS = 944;
  static const int X86_INS_VMOVSD = 945;
  static const int X86_INS_VMOVSHDUP = 946;
  static const int X86_INS_VMOVSLDUP = 947;
  static const int X86_INS_VMOVSS = 948;
  static const int X86_INS_VMOVUPD = 949;
  static const int X86_INS_VMOVUPS = 950;
  static const int X86_INS_VMPSADBW = 951;
  static const int X86_INS_VMPTRLD = 952;
  static const int X86_INS_VMPTRST = 953;
  static const int X86_INS_VMREAD = 954;
  static const int X86_INS_VMRESUME = 955;
  static const int X86_INS_VMRUN = 956;
  static const int X86_INS_VMSAVE = 957;
  static const int X86_INS_VMULPD = 958;
  static const int X86_INS_VMULPS = 959;
  static const int X86_INS_VMULSD = 960;
  static const int X86_INS_VMULSS = 961;
  static const int X86_INS_VMWRITE = 962;
  static const int X86_INS_VMXOFF = 963;
  static const int X86_INS_VMXON = 964;
  static const int X86_INS_VPABSB = 965;
  static const int X86_INS_VPABSD = 966;
  static const int X86_INS_VPABSQ = 967;
  static const int X86_INS_VPABSW = 968;
  static const int X86_INS_VPACKSSDW = 969;
  static const int X86_INS_VPACKSSWB = 970;
  static const int X86_INS_VPACKUSDW = 971;
  static const int X86_INS_VPACKUSWB = 972;
  static const int X86_INS_VPADDB = 973;
  static const int X86_INS_VPADDD = 974;
  static const int X86_INS_VPADDQ = 975;
  static const int X86_INS_VPADDSB = 976;
  static const int X86_INS_VPADDSW = 977;
  static const int X86_INS_VPADDUSB = 978;
  static const int X86_INS_VPADDUSW = 979;
  static const int X86_INS_VPADDW = 980;
  static const int X86_INS_VPALIGNR = 981;
  static const int X86_INS_VPANDD = 982;
  static const int X86_INS_VPANDND = 983;
  static const int X86_INS_VPANDNQ = 984;
  static const int X86_INS_VPANDN = 985;
  static const int X86_INS_VPANDQ = 986;
  static const int X86_INS_VPAND = 987;
  static const int X86_INS_VPAVGB = 988;
  static const int X86_INS_VPAVGW = 989;
  static const int X86_INS_VPBLENDD = 990;
  static const int X86_INS_VPBLENDMB = 991;
  static const int X86_INS_VPBLENDMD = 992;
  static const int X86_INS_VPBLENDMQ = 993;
  static const int X86_INS_VPBLENDMW = 994;
  static const int X86_INS_VPBLENDVB = 995;
  static const int X86_INS_VPBLENDW = 996;
  static const int X86_INS_VPBROADCASTB = 997;
  static const int X86_INS_VPBROADCASTD = 998;
  static const int X86_INS_VPBROADCASTMB2Q = 999;
  static const int X86_INS_VPBROADCASTMW2D = 1000;
  static const int X86_INS_VPBROADCASTQ = 1001;
  static const int X86_INS_VPBROADCASTW = 1002;
  static const int X86_INS_VPCLMULQDQ = 1003;
  static const int X86_INS_VPCMOV = 1004;
  static const int X86_INS_VPCMPB = 1005;
  static const int X86_INS_VPCMPD = 1006;
  static const int X86_INS_VPCMPEQB = 1007;
  static const int X86_INS_VPCMPEQD = 1008;
  static const int X86_INS_VPCMPEQQ = 1009;
  static const int X86_INS_VPCMPEQW = 1010;
  static const int X86_INS_VPCMPESTRI = 1011;
  static const int X86_INS_VPCMPESTRM = 1012;
  static const int X86_INS_VPCMPGTB = 1013;
  static const int X86_INS_VPCMPGTD = 1014;
  static const int X86_INS_VPCMPGTQ = 1015;
  static const int X86_INS_VPCMPGTW = 1016;
  static const int X86_INS_VPCMPISTRI = 1017;
  static const int X86_INS_VPCMPISTRM = 1018;
  static const int X86_INS_VPCMPQ = 1019;
  static const int X86_INS_VPCMPUB = 1020;
  static const int X86_INS_VPCMPUD = 1021;
  static const int X86_INS_VPCMPUQ = 1022;
  static const int X86_INS_VPCMPUW = 1023;
  static const int X86_INS_VPCMPW = 1024;
  static const int X86_INS_VPCOMB = 1025;
  static const int X86_INS_VPCOMD = 1026;
  static const int X86_INS_VPCOMPRESSD = 1027;
  static const int X86_INS_VPCOMPRESSQ = 1028;
  static const int X86_INS_VPCOMQ = 1029;
  static const int X86_INS_VPCOMUB = 1030;
  static const int X86_INS_VPCOMUD = 1031;
  static const int X86_INS_VPCOMUQ = 1032;
  static const int X86_INS_VPCOMUW = 1033;
  static const int X86_INS_VPCOMW = 1034;
  static const int X86_INS_VPCONFLICTD = 1035;
  static const int X86_INS_VPCONFLICTQ = 1036;
  static const int X86_INS_VPERM2F128 = 1037;
  static const int X86_INS_VPERM2I128 = 1038;
  static const int X86_INS_VPERMD = 1039;
  static const int X86_INS_VPERMI2D = 1040;
  static const int X86_INS_VPERMI2PD = 1041;
  static const int X86_INS_VPERMI2PS = 1042;
  static const int X86_INS_VPERMI2Q = 1043;
  static const int X86_INS_VPERMIL2PD = 1044;
  static const int X86_INS_VPERMIL2PS = 1045;
  static const int X86_INS_VPERMILPD = 1046;
  static const int X86_INS_VPERMILPS = 1047;
  static const int X86_INS_VPERMPD = 1048;
  static const int X86_INS_VPERMPS = 1049;
  static const int X86_INS_VPERMQ = 1050;
  static const int X86_INS_VPERMT2D = 1051;
  static const int X86_INS_VPERMT2PD = 1052;
  static const int X86_INS_VPERMT2PS = 1053;
  static const int X86_INS_VPERMT2Q = 1054;
  static const int X86_INS_VPEXPANDD = 1055;
  static const int X86_INS_VPEXPANDQ = 1056;
  static const int X86_INS_VPEXTRB = 1057;
  static const int X86_INS_VPEXTRD = 1058;
  static const int X86_INS_VPEXTRQ = 1059;
  static const int X86_INS_VPEXTRW = 1060;
  static const int X86_INS_VPGATHERDD = 1061;
  static const int X86_INS_VPGATHERDQ = 1062;
  static const int X86_INS_VPGATHERQD = 1063;
  static const int X86_INS_VPGATHERQQ = 1064;
  static const int X86_INS_VPHADDBD = 1065;
  static const int X86_INS_VPHADDBQ = 1066;
  static const int X86_INS_VPHADDBW = 1067;
  static const int X86_INS_VPHADDDQ = 1068;
  static const int X86_INS_VPHADDD = 1069;
  static const int X86_INS_VPHADDSW = 1070;
  static const int X86_INS_VPHADDUBD = 1071;
  static const int X86_INS_VPHADDUBQ = 1072;
  static const int X86_INS_VPHADDUBW = 1073;
  static const int X86_INS_VPHADDUDQ = 1074;
  static const int X86_INS_VPHADDUWD = 1075;
  static const int X86_INS_VPHADDUWQ = 1076;
  static const int X86_INS_VPHADDWD = 1077;
  static const int X86_INS_VPHADDWQ = 1078;
  static const int X86_INS_VPHADDW = 1079;
  static const int X86_INS_VPHMINPOSUW = 1080;
  static const int X86_INS_VPHSUBBW = 1081;
  static const int X86_INS_VPHSUBDQ = 1082;
  static const int X86_INS_VPHSUBD = 1083;
  static const int X86_INS_VPHSUBSW = 1084;
  static const int X86_INS_VPHSUBWD = 1085;
  static const int X86_INS_VPHSUBW = 1086;
  static const int X86_INS_VPINSRB = 1087;
  static const int X86_INS_VPINSRD = 1088;
  static const int X86_INS_VPINSRQ = 1089;
  static const int X86_INS_VPINSRW = 1090;
  static const int X86_INS_VPLZCNTD = 1091;
  static const int X86_INS_VPLZCNTQ = 1092;
  static const int X86_INS_VPMACSDD = 1093;
  static const int X86_INS_VPMACSDQH = 1094;
  static const int X86_INS_VPMACSDQL = 1095;
  static const int X86_INS_VPMACSSDD = 1096;
  static const int X86_INS_VPMACSSDQH = 1097;
  static const int X86_INS_VPMACSSDQL = 1098;
  static const int X86_INS_VPMACSSWD = 1099;
  static const int X86_INS_VPMACSSWW = 1100;
  static const int X86_INS_VPMACSWD = 1101;
  static const int X86_INS_VPMACSWW = 1102;
  static const int X86_INS_VPMADCSSWD = 1103;
  static const int X86_INS_VPMADCSWD = 1104;
  static const int X86_INS_VPMADDUBSW = 1105;
  static const int X86_INS_VPMADDWD = 1106;
  static const int X86_INS_VPMASKMOVD = 1107;
  static const int X86_INS_VPMASKMOVQ = 1108;
  static const int X86_INS_VPMAXSB = 1109;
  static const int X86_INS_VPMAXSD = 1110;
  static const int X86_INS_VPMAXSQ = 1111;
  static const int X86_INS_VPMAXSW = 1112;
  static const int X86_INS_VPMAXUB = 1113;
  static const int X86_INS_VPMAXUD = 1114;
  static const int X86_INS_VPMAXUQ = 1115;
  static const int X86_INS_VPMAXUW = 1116;
  static const int X86_INS_VPMINSB = 1117;
  static const int X86_INS_VPMINSD = 1118;
  static const int X86_INS_VPMINSQ = 1119;
  static const int X86_INS_VPMINSW = 1120;
  static const int X86_INS_VPMINUB = 1121;
  static const int X86_INS_VPMINUD = 1122;
  static const int X86_INS_VPMINUQ = 1123;
  static const int X86_INS_VPMINUW = 1124;
  static const int X86_INS_VPMOVDB = 1125;
  static const int X86_INS_VPMOVDW = 1126;
  static const int X86_INS_VPMOVM2B = 1127;
  static const int X86_INS_VPMOVM2D = 1128;
  static const int X86_INS_VPMOVM2Q = 1129;
  static const int X86_INS_VPMOVM2W = 1130;
  static const int X86_INS_VPMOVMSKB = 1131;
  static const int X86_INS_VPMOVQB = 1132;
  static const int X86_INS_VPMOVQD = 1133;
  static const int X86_INS_VPMOVQW = 1134;
  static const int X86_INS_VPMOVSDB = 1135;
  static const int X86_INS_VPMOVSDW = 1136;
  static const int X86_INS_VPMOVSQB = 1137;
  static const int X86_INS_VPMOVSQD = 1138;
  static const int X86_INS_VPMOVSQW = 1139;
  static const int X86_INS_VPMOVSXBD = 1140;
  static const int X86_INS_VPMOVSXBQ = 1141;
  static const int X86_INS_VPMOVSXBW = 1142;
  static const int X86_INS_VPMOVSXDQ = 1143;
  static const int X86_INS_VPMOVSXWD = 1144;
  static const int X86_INS_VPMOVSXWQ = 1145;
  static const int X86_INS_VPMOVUSDB = 1146;
  static const int X86_INS_VPMOVUSDW = 1147;
  static const int X86_INS_VPMOVUSQB = 1148;
  static const int X86_INS_VPMOVUSQD = 1149;
  static const int X86_INS_VPMOVUSQW = 1150;
  static const int X86_INS_VPMOVZXBD = 1151;
  static const int X86_INS_VPMOVZXBQ = 1152;
  static const int X86_INS_VPMOVZXBW = 1153;
  static const int X86_INS_VPMOVZXDQ = 1154;
  static const int X86_INS_VPMOVZXWD = 1155;
  static const int X86_INS_VPMOVZXWQ = 1156;
  static const int X86_INS_VPMULDQ = 1157;
  static const int X86_INS_VPMULHRSW = 1158;
  static const int X86_INS_VPMULHUW = 1159;
  static const int X86_INS_VPMULHW = 1160;
  static const int X86_INS_VPMULLD = 1161;
  static const int X86_INS_VPMULLQ = 1162;
  static const int X86_INS_VPMULLW = 1163;
  static const int X86_INS_VPMULUDQ = 1164;
  static const int X86_INS_VPORD = 1165;
  static const int X86_INS_VPORQ = 1166;
  static const int X86_INS_VPOR = 1167;
  static const int X86_INS_VPPERM = 1168;
  static const int X86_INS_VPROTB = 1169;
  static const int X86_INS_VPROTD = 1170;
  static const int X86_INS_VPROTQ = 1171;
  static const int X86_INS_VPROTW = 1172;
  static const int X86_INS_VPSADBW = 1173;
  static const int X86_INS_VPSCATTERDD = 1174;
  static const int X86_INS_VPSCATTERDQ = 1175;
  static const int X86_INS_VPSCATTERQD = 1176;
  static const int X86_INS_VPSCATTERQQ = 1177;
  static const int X86_INS_VPSHAB = 1178;
  static const int X86_INS_VPSHAD = 1179;
  static const int X86_INS_VPSHAQ = 1180;
  static const int X86_INS_VPSHAW = 1181;
  static const int X86_INS_VPSHLB = 1182;
  static const int X86_INS_VPSHLD = 1183;
  static const int X86_INS_VPSHLQ = 1184;
  static const int X86_INS_VPSHLW = 1185;
  static const int X86_INS_VPSHUFB = 1186;
  static const int X86_INS_VPSHUFD = 1187;
  static const int X86_INS_VPSHUFHW = 1188;
  static const int X86_INS_VPSHUFLW = 1189;
  static const int X86_INS_VPSIGNB = 1190;
  static const int X86_INS_VPSIGND = 1191;
  static const int X86_INS_VPSIGNW = 1192;
  static const int X86_INS_VPSLLDQ = 1193;
  static const int X86_INS_VPSLLD = 1194;
  static const int X86_INS_VPSLLQ = 1195;
  static const int X86_INS_VPSLLVD = 1196;
  static const int X86_INS_VPSLLVQ = 1197;
  static const int X86_INS_VPSLLW = 1198;
  static const int X86_INS_VPSRAD = 1199;
  static const int X86_INS_VPSRAQ = 1200;
  static const int X86_INS_VPSRAVD = 1201;
  static const int X86_INS_VPSRAVQ = 1202;
  static const int X86_INS_VPSRAW = 1203;
  static const int X86_INS_VPSRLDQ = 1204;
  static const int X86_INS_VPSRLD = 1205;
  static const int X86_INS_VPSRLQ = 1206;
  static const int X86_INS_VPSRLVD = 1207;
  static const int X86_INS_VPSRLVQ = 1208;
  static const int X86_INS_VPSRLW = 1209;
  static const int X86_INS_VPSUBB = 1210;
  static const int X86_INS_VPSUBD = 1211;
  static const int X86_INS_VPSUBQ = 1212;
  static const int X86_INS_VPSUBSB = 1213;
  static const int X86_INS_VPSUBSW = 1214;
  static const int X86_INS_VPSUBUSB = 1215;
  static const int X86_INS_VPSUBUSW = 1216;
  static const int X86_INS_VPSUBW = 1217;
  static const int X86_INS_VPTESTMD = 1218;
  static const int X86_INS_VPTESTMQ = 1219;
  static const int X86_INS_VPTESTNMD = 1220;
  static const int X86_INS_VPTESTNMQ = 1221;
  static const int X86_INS_VPTEST = 1222;
  static const int X86_INS_VPUNPCKHBW = 1223;
  static const int X86_INS_VPUNPCKHDQ = 1224;
  static const int X86_INS_VPUNPCKHQDQ = 1225;
  static const int X86_INS_VPUNPCKHWD = 1226;
  static const int X86_INS_VPUNPCKLBW = 1227;
  static const int X86_INS_VPUNPCKLDQ = 1228;
  static const int X86_INS_VPUNPCKLQDQ = 1229;
  static const int X86_INS_VPUNPCKLWD = 1230;
  static const int X86_INS_VPXORD = 1231;
  static const int X86_INS_VPXORQ = 1232;
  static const int X86_INS_VPXOR = 1233;
  static const int X86_INS_VRCP14PD = 1234;
  static const int X86_INS_VRCP14PS = 1235;
  static const int X86_INS_VRCP14SD = 1236;
  static const int X86_INS_VRCP14SS = 1237;
  static const int X86_INS_VRCP28PD = 1238;
  static const int X86_INS_VRCP28PS = 1239;
  static const int X86_INS_VRCP28SD = 1240;
  static const int X86_INS_VRCP28SS = 1241;
  static const int X86_INS_VRCPPS = 1242;
  static const int X86_INS_VRCPSS = 1243;
  static const int X86_INS_VRNDSCALEPD = 1244;
  static const int X86_INS_VRNDSCALEPS = 1245;
  static const int X86_INS_VRNDSCALESD = 1246;
  static const int X86_INS_VRNDSCALESS = 1247;
  static const int X86_INS_VROUNDPD = 1248;
  static const int X86_INS_VROUNDPS = 1249;
  static const int X86_INS_VROUNDSD = 1250;
  static const int X86_INS_VROUNDSS = 1251;
  static const int X86_INS_VRSQRT14PD = 1252;
  static const int X86_INS_VRSQRT14PS = 1253;
  static const int X86_INS_VRSQRT14SD = 1254;
  static const int X86_INS_VRSQRT14SS = 1255;
  static const int X86_INS_VRSQRT28PD = 1256;
  static const int X86_INS_VRSQRT28PS = 1257;
  static const int X86_INS_VRSQRT28SD = 1258;
  static const int X86_INS_VRSQRT28SS = 1259;
  static const int X86_INS_VRSQRTPS = 1260;
  static const int X86_INS_VRSQRTSS = 1261;
  static const int X86_INS_VSCATTERDPD = 1262;
  static const int X86_INS_VSCATTERDPS = 1263;
  static const int X86_INS_VSCATTERPF0DPD = 1264;
  static const int X86_INS_VSCATTERPF0DPS = 1265;
  static const int X86_INS_VSCATTERPF0QPD = 1266;
  static const int X86_INS_VSCATTERPF0QPS = 1267;
  static const int X86_INS_VSCATTERPF1DPD = 1268;
  static const int X86_INS_VSCATTERPF1DPS = 1269;
  static const int X86_INS_VSCATTERPF1QPD = 1270;
  static const int X86_INS_VSCATTERPF1QPS = 1271;
  static const int X86_INS_VSCATTERQPD = 1272;
  static const int X86_INS_VSCATTERQPS = 1273;
  static const int X86_INS_VSHUFPD = 1274;
  static const int X86_INS_VSHUFPS = 1275;
  static const int X86_INS_VSQRTPD = 1276;
  static const int X86_INS_VSQRTPS = 1277;
  static const int X86_INS_VSQRTSD = 1278;
  static const int X86_INS_VSQRTSS = 1279;
  static const int X86_INS_VSTMXCSR = 1280;
  static const int X86_INS_VSUBPD = 1281;
  static const int X86_INS_VSUBPS = 1282;
  static const int X86_INS_VSUBSD = 1283;
  static const int X86_INS_VSUBSS = 1284;
  static const int X86_INS_VTESTPD = 1285;
  static const int X86_INS_VTESTPS = 1286;
  static const int X86_INS_VUNPCKHPD = 1287;
  static const int X86_INS_VUNPCKHPS = 1288;
  static const int X86_INS_VUNPCKLPD = 1289;
  static const int X86_INS_VUNPCKLPS = 1290;
  static const int X86_INS_VZEROALL = 1291;
  static const int X86_INS_VZEROUPPER = 1292;
  static const int X86_INS_WAIT = 1293;
  static const int X86_INS_WBINVD = 1294;
  static const int X86_INS_WRFSBASE = 1295;
  static const int X86_INS_WRGSBASE = 1296;
  static const int X86_INS_WRMSR = 1297;
  static const int X86_INS_XABORT = 1298;
  static const int X86_INS_XACQUIRE = 1299;
  static const int X86_INS_XBEGIN = 1300;
  static const int X86_INS_XCHG = 1301;
  static const int X86_INS_XCRYPTCBC = 1302;
  static const int X86_INS_XCRYPTCFB = 1303;
  static const int X86_INS_XCRYPTCTR = 1304;
  static const int X86_INS_XCRYPTECB = 1305;
  static const int X86_INS_XCRYPTOFB = 1306;
  static const int X86_INS_XEND = 1307;
  static const int X86_INS_XGETBV = 1308;
  static const int X86_INS_XLATB = 1309;
  static const int X86_INS_XRELEASE = 1310;
  static const int X86_INS_XRSTOR = 1311;
  static const int X86_INS_XRSTOR64 = 1312;
  static const int X86_INS_XRSTORS = 1313;
  static const int X86_INS_XRSTORS64 = 1314;
  static const int X86_INS_XSAVE = 1315;
  static const int X86_INS_XSAVE64 = 1316;
  static const int X86_INS_XSAVEC = 1317;
  static const int X86_INS_XSAVEC64 = 1318;
  static const int X86_INS_XSAVEOPT = 1319;
  static const int X86_INS_XSAVEOPT64 = 1320;
  static const int X86_INS_XSAVES = 1321;
  static const int X86_INS_XSAVES64 = 1322;
  static const int X86_INS_XSETBV = 1323;
  static const int X86_INS_XSHA1 = 1324;
  static const int X86_INS_XSHA256 = 1325;
  static const int X86_INS_XSTORE = 1326;
  static const int X86_INS_XTEST = 1327;
  static const int X86_INS_FDISI8087_NOP = 1328;
  static const int X86_INS_FENI8087_NOP = 1329;
  static const int X86_INS_CMPSS = 1330;
  static const int X86_INS_CMPEQSS = 1331;
  static const int X86_INS_CMPLTSS = 1332;
  static const int X86_INS_CMPLESS = 1333;
  static const int X86_INS_CMPUNORDSS = 1334;
  static const int X86_INS_CMPNEQSS = 1335;
  static const int X86_INS_CMPNLTSS = 1336;
  static const int X86_INS_CMPNLESS = 1337;
  static const int X86_INS_CMPORDSS = 1338;
  static const int X86_INS_CMPSD = 1339;
  static const int X86_INS_CMPEQSD = 1340;
  static const int X86_INS_CMPLTSD = 1341;
  static const int X86_INS_CMPLESD = 1342;
  static const int X86_INS_CMPUNORDSD = 1343;
  static const int X86_INS_CMPNEQSD = 1344;
  static const int X86_INS_CMPNLTSD = 1345;
  static const int X86_INS_CMPNLESD = 1346;
  static const int X86_INS_CMPORDSD = 1347;
  static const int X86_INS_CMPPS = 1348;
  static const int X86_INS_CMPEQPS = 1349;
  static const int X86_INS_CMPLTPS = 1350;
  static const int X86_INS_CMPLEPS = 1351;
  static const int X86_INS_CMPUNORDPS = 1352;
  static const int X86_INS_CMPNEQPS = 1353;
  static const int X86_INS_CMPNLTPS = 1354;
  static const int X86_INS_CMPNLEPS = 1355;
  static const int X86_INS_CMPORDPS = 1356;
  static const int X86_INS_CMPPD = 1357;
  static const int X86_INS_CMPEQPD = 1358;
  static const int X86_INS_CMPLTPD = 1359;
  static const int X86_INS_CMPLEPD = 1360;
  static const int X86_INS_CMPUNORDPD = 1361;
  static const int X86_INS_CMPNEQPD = 1362;
  static const int X86_INS_CMPNLTPD = 1363;
  static const int X86_INS_CMPNLEPD = 1364;
  static const int X86_INS_CMPORDPD = 1365;
  static const int X86_INS_VCMPSS = 1366;
  static const int X86_INS_VCMPEQSS = 1367;
  static const int X86_INS_VCMPLTSS = 1368;
  static const int X86_INS_VCMPLESS = 1369;
  static const int X86_INS_VCMPUNORDSS = 1370;
  static const int X86_INS_VCMPNEQSS = 1371;
  static const int X86_INS_VCMPNLTSS = 1372;
  static const int X86_INS_VCMPNLESS = 1373;
  static const int X86_INS_VCMPORDSS = 1374;
  static const int X86_INS_VCMPEQ_UQSS = 1375;
  static const int X86_INS_VCMPNGESS = 1376;
  static const int X86_INS_VCMPNGTSS = 1377;
  static const int X86_INS_VCMPFALSESS = 1378;
  static const int X86_INS_VCMPNEQ_OQSS = 1379;
  static const int X86_INS_VCMPGESS = 1380;
  static const int X86_INS_VCMPGTSS = 1381;
  static const int X86_INS_VCMPTRUESS = 1382;
  static const int X86_INS_VCMPEQ_OSSS = 1383;
  static const int X86_INS_VCMPLT_OQSS = 1384;
  static const int X86_INS_VCMPLE_OQSS = 1385;
  static const int X86_INS_VCMPUNORD_SSS = 1386;
  static const int X86_INS_VCMPNEQ_USSS = 1387;
  static const int X86_INS_VCMPNLT_UQSS = 1388;
  static const int X86_INS_VCMPNLE_UQSS = 1389;
  static const int X86_INS_VCMPORD_SSS = 1390;
  static const int X86_INS_VCMPEQ_USSS = 1391;
  static const int X86_INS_VCMPNGE_UQSS = 1392;
  static const int X86_INS_VCMPNGT_UQSS = 1393;
  static const int X86_INS_VCMPFALSE_OSSS = 1394;
  static const int X86_INS_VCMPNEQ_OSSS = 1395;
  static const int X86_INS_VCMPGE_OQSS = 1396;
  static const int X86_INS_VCMPGT_OQSS = 1397;
  static const int X86_INS_VCMPTRUE_USSS = 1398;
  static const int X86_INS_VCMPSD = 1399;
  static const int X86_INS_VCMPEQSD = 1400;
  static const int X86_INS_VCMPLTSD = 1401;
  static const int X86_INS_VCMPLESD = 1402;
  static const int X86_INS_VCMPUNORDSD = 1403;
  static const int X86_INS_VCMPNEQSD = 1404;
  static const int X86_INS_VCMPNLTSD = 1405;
  static const int X86_INS_VCMPNLESD = 1406;
  static const int X86_INS_VCMPORDSD = 1407;
  static const int X86_INS_VCMPEQ_UQSD = 1408;
  static const int X86_INS_VCMPNGESD = 1409;
  static const int X86_INS_VCMPNGTSD = 1410;
  static const int X86_INS_VCMPFALSESD = 1411;
  static const int X86_INS_VCMPNEQ_OQSD = 1412;
  static const int X86_INS_VCMPGESD = 1413;
  static const int X86_INS_VCMPGTSD = 1414;
  static const int X86_INS_VCMPTRUESD = 1415;
  static const int X86_INS_VCMPEQ_OSSD = 1416;
  static const int X86_INS_VCMPLT_OQSD = 1417;
  static const int X86_INS_VCMPLE_OQSD = 1418;
  static const int X86_INS_VCMPUNORD_SSD = 1419;
  static const int X86_INS_VCMPNEQ_USSD = 1420;
  static const int X86_INS_VCMPNLT_UQSD = 1421;
  static const int X86_INS_VCMPNLE_UQSD = 1422;
  static const int X86_INS_VCMPORD_SSD = 1423;
  static const int X86_INS_VCMPEQ_USSD = 1424;
  static const int X86_INS_VCMPNGE_UQSD = 1425;
  static const int X86_INS_VCMPNGT_UQSD = 1426;
  static const int X86_INS_VCMPFALSE_OSSD = 1427;
  static const int X86_INS_VCMPNEQ_OSSD = 1428;
  static const int X86_INS_VCMPGE_OQSD = 1429;
  static const int X86_INS_VCMPGT_OQSD = 1430;
  static const int X86_INS_VCMPTRUE_USSD = 1431;
  static const int X86_INS_VCMPPS = 1432;
  static const int X86_INS_VCMPEQPS = 1433;
  static const int X86_INS_VCMPLTPS = 1434;
  static const int X86_INS_VCMPLEPS = 1435;
  static const int X86_INS_VCMPUNORDPS = 1436;
  static const int X86_INS_VCMPNEQPS = 1437;
  static const int X86_INS_VCMPNLTPS = 1438;
  static const int X86_INS_VCMPNLEPS = 1439;
  static const int X86_INS_VCMPORDPS = 1440;
  static const int X86_INS_VCMPEQ_UQPS = 1441;
  static const int X86_INS_VCMPNGEPS = 1442;
  static const int X86_INS_VCMPNGTPS = 1443;
  static const int X86_INS_VCMPFALSEPS = 1444;
  static const int X86_INS_VCMPNEQ_OQPS = 1445;
  static const int X86_INS_VCMPGEPS = 1446;
  static const int X86_INS_VCMPGTPS = 1447;
  static const int X86_INS_VCMPTRUEPS = 1448;
  static const int X86_INS_VCMPEQ_OSPS = 1449;
  static const int X86_INS_VCMPLT_OQPS = 1450;
  static const int X86_INS_VCMPLE_OQPS = 1451;
  static const int X86_INS_VCMPUNORD_SPS = 1452;
  static const int X86_INS_VCMPNEQ_USPS = 1453;
  static const int X86_INS_VCMPNLT_UQPS = 1454;
  static const int X86_INS_VCMPNLE_UQPS = 1455;
  static const int X86_INS_VCMPORD_SPS = 1456;
  static const int X86_INS_VCMPEQ_USPS = 1457;
  static const int X86_INS_VCMPNGE_UQPS = 1458;
  static const int X86_INS_VCMPNGT_UQPS = 1459;
  static const int X86_INS_VCMPFALSE_OSPS = 1460;
  static const int X86_INS_VCMPNEQ_OSPS = 1461;
  static const int X86_INS_VCMPGE_OQPS = 1462;
  static const int X86_INS_VCMPGT_OQPS = 1463;
  static const int X86_INS_VCMPTRUE_USPS = 1464;
  static const int X86_INS_VCMPPD = 1465;
  static const int X86_INS_VCMPEQPD = 1466;
  static const int X86_INS_VCMPLTPD = 1467;
  static const int X86_INS_VCMPLEPD = 1468;
  static const int X86_INS_VCMPUNORDPD = 1469;
  static const int X86_INS_VCMPNEQPD = 1470;
  static const int X86_INS_VCMPNLTPD = 1471;
  static const int X86_INS_VCMPNLEPD = 1472;
  static const int X86_INS_VCMPORDPD = 1473;
  static const int X86_INS_VCMPEQ_UQPD = 1474;
  static const int X86_INS_VCMPNGEPD = 1475;
  static const int X86_INS_VCMPNGTPD = 1476;
  static const int X86_INS_VCMPFALSEPD = 1477;
  static const int X86_INS_VCMPNEQ_OQPD = 1478;
  static const int X86_INS_VCMPGEPD = 1479;
  static const int X86_INS_VCMPGTPD = 1480;
  static const int X86_INS_VCMPTRUEPD = 1481;
  static const int X86_INS_VCMPEQ_OSPD = 1482;
  static const int X86_INS_VCMPLT_OQPD = 1483;
  static const int X86_INS_VCMPLE_OQPD = 1484;
  static const int X86_INS_VCMPUNORD_SPD = 1485;
  static const int X86_INS_VCMPNEQ_USPD = 1486;
  static const int X86_INS_VCMPNLT_UQPD = 1487;
  static const int X86_INS_VCMPNLE_UQPD = 1488;
  static const int X86_INS_VCMPORD_SPD = 1489;
  static const int X86_INS_VCMPEQ_USPD = 1490;
  static const int X86_INS_VCMPNGE_UQPD = 1491;
  static const int X86_INS_VCMPNGT_UQPD = 1492;
  static const int X86_INS_VCMPFALSE_OSPD = 1493;
  static const int X86_INS_VCMPNEQ_OSPD = 1494;
  static const int X86_INS_VCMPGE_OQPD = 1495;
  static const int X86_INS_VCMPGT_OQPD = 1496;
  static const int X86_INS_VCMPTRUE_USPD = 1497;
  static const int X86_INS_UD0 = 1498;
  static const int X86_INS_ENDBR32 = 1499;
  static const int X86_INS_ENDBR64 = 1500;
  static const int X86_INS_ENDING = 1501;
}

/// Group of X86 instructions
abstract class x86_insn_group {
  /// < = CS_GRP_INVALID
  static const int X86_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int X86_GRP_JUMP = 1;

  /// < = CS_GRP_CALL
  static const int X86_GRP_CALL = 2;

  /// < = CS_GRP_RET
  static const int X86_GRP_RET = 3;

  /// < = CS_GRP_INT
  static const int X86_GRP_INT = 4;

  /// < = CS_GRP_IRET
  static const int X86_GRP_IRET = 5;

  /// < = CS_GRP_PRIVILEGE
  static const int X86_GRP_PRIVILEGE = 6;

  /// < = CS_GRP_BRANCH_RELATIVE
  static const int X86_GRP_BRANCH_RELATIVE = 7;

  /// < all virtualization instructions (VT-x + AMD-V)
  static const int X86_GRP_VM = 128;
  static const int X86_GRP_3DNOW = 129;
  static const int X86_GRP_AES = 130;
  static const int X86_GRP_ADX = 131;
  static const int X86_GRP_AVX = 132;
  static const int X86_GRP_AVX2 = 133;
  static const int X86_GRP_AVX512 = 134;
  static const int X86_GRP_BMI = 135;
  static const int X86_GRP_BMI2 = 136;
  static const int X86_GRP_CMOV = 137;
  static const int X86_GRP_F16C = 138;
  static const int X86_GRP_FMA = 139;
  static const int X86_GRP_FMA4 = 140;
  static const int X86_GRP_FSGSBASE = 141;
  static const int X86_GRP_HLE = 142;
  static const int X86_GRP_MMX = 143;
  static const int X86_GRP_MODE32 = 144;
  static const int X86_GRP_MODE64 = 145;
  static const int X86_GRP_RTM = 146;
  static const int X86_GRP_SHA = 147;
  static const int X86_GRP_SSE1 = 148;
  static const int X86_GRP_SSE2 = 149;
  static const int X86_GRP_SSE3 = 150;
  static const int X86_GRP_SSE41 = 151;
  static const int X86_GRP_SSE42 = 152;
  static const int X86_GRP_SSE4A = 153;
  static const int X86_GRP_SSSE3 = 154;
  static const int X86_GRP_PCLMUL = 155;
  static const int X86_GRP_XOP = 156;
  static const int X86_GRP_CDI = 157;
  static const int X86_GRP_ERI = 158;
  static const int X86_GRP_TBM = 159;
  static const int X86_GRP_16BITMODE = 160;
  static const int X86_GRP_NOT64BITMODE = 161;
  static const int X86_GRP_SGX = 162;
  static const int X86_GRP_DQI = 163;
  static const int X86_GRP_BWI = 164;
  static const int X86_GRP_PFI = 165;
  static const int X86_GRP_VLX = 166;
  static const int X86_GRP_SMAP = 167;
  static const int X86_GRP_NOVLX = 168;
  static const int X86_GRP_FPU = 169;
  static const int X86_GRP_ENDING = 170;
}

/// Operand type for instruction's operands
abstract class xcore_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int XCORE_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int XCORE_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int XCORE_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int XCORE_OP_MEM = 3;
}

/// XCore registers
abstract class xcore_reg {
  static const int XCORE_REG_INVALID = 0;
  static const int XCORE_REG_CP = 1;
  static const int XCORE_REG_DP = 2;
  static const int XCORE_REG_LR = 3;
  static const int XCORE_REG_SP = 4;
  static const int XCORE_REG_R0 = 5;
  static const int XCORE_REG_R1 = 6;
  static const int XCORE_REG_R2 = 7;
  static const int XCORE_REG_R3 = 8;
  static const int XCORE_REG_R4 = 9;
  static const int XCORE_REG_R5 = 10;
  static const int XCORE_REG_R6 = 11;
  static const int XCORE_REG_R7 = 12;
  static const int XCORE_REG_R8 = 13;
  static const int XCORE_REG_R9 = 14;
  static const int XCORE_REG_R10 = 15;
  static const int XCORE_REG_R11 = 16;

  /// < pc
  static const int XCORE_REG_PC = 17;

  /// < save pc
  static const int XCORE_REG_SCP = 18;
  static const int XCORE_REG_SSR = 19;
  static const int XCORE_REG_ET = 20;
  static const int XCORE_REG_ED = 21;
  static const int XCORE_REG_SED = 22;
  static const int XCORE_REG_KEP = 23;
  static const int XCORE_REG_KSP = 24;
  static const int XCORE_REG_ID = 25;
  static const int XCORE_REG_ENDING = 26;
}

/// Instruction's operand referring to memory
/// This is associated with XCORE_OP_MEM operand type above
class xcore_op_mem extends ffi.Struct {
  /// < base register, can be safely interpreted as
  /// < a value of type `xcore_reg`, but it is only
  /// < one byte wide
  @ffi.Uint8()
  external int base;

  /// < index register, same conditions apply here
  @ffi.Uint8()
  external int index;

  /// < displacement/offset value
  @ffi.Int32()
  external int disp;

  /// < +1: forward, -1: backward
  @ffi.Int()
  external int direct;
}

/// Instruction operand
class cs_xcore_op extends ffi.Struct {
  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion11 unnamed;
}

class UnnamedUnion11 extends ffi.Union {
  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < immediate value for IMM operand
  @ffi.Int32()
  external int imm;

  /// < base/disp value for MEM operand
  external xcore_op_mem mem;
}

/// Instruction structure
class cs_xcore extends ffi.Struct {
  /// Number of operands of this instruction,
  /// or 0 when instruction has no operand.
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([8])
  external ffi.Array<cs_xcore_op> operands;
}

/// XCore instruction
abstract class xcore_insn {
  static const int XCORE_INS_INVALID = 0;
  static const int XCORE_INS_ADD = 1;
  static const int XCORE_INS_ANDNOT = 2;
  static const int XCORE_INS_AND = 3;
  static const int XCORE_INS_ASHR = 4;
  static const int XCORE_INS_BAU = 5;
  static const int XCORE_INS_BITREV = 6;
  static const int XCORE_INS_BLA = 7;
  static const int XCORE_INS_BLAT = 8;
  static const int XCORE_INS_BL = 9;
  static const int XCORE_INS_BF = 10;
  static const int XCORE_INS_BT = 11;
  static const int XCORE_INS_BU = 12;
  static const int XCORE_INS_BRU = 13;
  static const int XCORE_INS_BYTEREV = 14;
  static const int XCORE_INS_CHKCT = 15;
  static const int XCORE_INS_CLRE = 16;
  static const int XCORE_INS_CLRPT = 17;
  static const int XCORE_INS_CLRSR = 18;
  static const int XCORE_INS_CLZ = 19;
  static const int XCORE_INS_CRC8 = 20;
  static const int XCORE_INS_CRC32 = 21;
  static const int XCORE_INS_DCALL = 22;
  static const int XCORE_INS_DENTSP = 23;
  static const int XCORE_INS_DGETREG = 24;
  static const int XCORE_INS_DIVS = 25;
  static const int XCORE_INS_DIVU = 26;
  static const int XCORE_INS_DRESTSP = 27;
  static const int XCORE_INS_DRET = 28;
  static const int XCORE_INS_ECALLF = 29;
  static const int XCORE_INS_ECALLT = 30;
  static const int XCORE_INS_EDU = 31;
  static const int XCORE_INS_EEF = 32;
  static const int XCORE_INS_EET = 33;
  static const int XCORE_INS_EEU = 34;
  static const int XCORE_INS_ENDIN = 35;
  static const int XCORE_INS_ENTSP = 36;
  static const int XCORE_INS_EQ = 37;
  static const int XCORE_INS_EXTDP = 38;
  static const int XCORE_INS_EXTSP = 39;
  static const int XCORE_INS_FREER = 40;
  static const int XCORE_INS_FREET = 41;
  static const int XCORE_INS_GETD = 42;
  static const int XCORE_INS_GET = 43;
  static const int XCORE_INS_GETN = 44;
  static const int XCORE_INS_GETR = 45;
  static const int XCORE_INS_GETSR = 46;
  static const int XCORE_INS_GETST = 47;
  static const int XCORE_INS_GETTS = 48;
  static const int XCORE_INS_INCT = 49;
  static const int XCORE_INS_INIT = 50;
  static const int XCORE_INS_INPW = 51;
  static const int XCORE_INS_INSHR = 52;
  static const int XCORE_INS_INT = 53;
  static const int XCORE_INS_IN = 54;
  static const int XCORE_INS_KCALL = 55;
  static const int XCORE_INS_KENTSP = 56;
  static const int XCORE_INS_KRESTSP = 57;
  static const int XCORE_INS_KRET = 58;
  static const int XCORE_INS_LADD = 59;
  static const int XCORE_INS_LD16S = 60;
  static const int XCORE_INS_LD8U = 61;
  static const int XCORE_INS_LDA16 = 62;
  static const int XCORE_INS_LDAP = 63;
  static const int XCORE_INS_LDAW = 64;
  static const int XCORE_INS_LDC = 65;
  static const int XCORE_INS_LDW = 66;
  static const int XCORE_INS_LDIVU = 67;
  static const int XCORE_INS_LMUL = 68;
  static const int XCORE_INS_LSS = 69;
  static const int XCORE_INS_LSUB = 70;
  static const int XCORE_INS_LSU = 71;
  static const int XCORE_INS_MACCS = 72;
  static const int XCORE_INS_MACCU = 73;
  static const int XCORE_INS_MJOIN = 74;
  static const int XCORE_INS_MKMSK = 75;
  static const int XCORE_INS_MSYNC = 76;
  static const int XCORE_INS_MUL = 77;
  static const int XCORE_INS_NEG = 78;
  static const int XCORE_INS_NOT = 79;
  static const int XCORE_INS_OR = 80;
  static const int XCORE_INS_OUTCT = 81;
  static const int XCORE_INS_OUTPW = 82;
  static const int XCORE_INS_OUTSHR = 83;
  static const int XCORE_INS_OUTT = 84;
  static const int XCORE_INS_OUT = 85;
  static const int XCORE_INS_PEEK = 86;
  static const int XCORE_INS_REMS = 87;
  static const int XCORE_INS_REMU = 88;
  static const int XCORE_INS_RETSP = 89;
  static const int XCORE_INS_SETCLK = 90;
  static const int XCORE_INS_SET = 91;
  static const int XCORE_INS_SETC = 92;
  static const int XCORE_INS_SETD = 93;
  static const int XCORE_INS_SETEV = 94;
  static const int XCORE_INS_SETN = 95;
  static const int XCORE_INS_SETPSC = 96;
  static const int XCORE_INS_SETPT = 97;
  static const int XCORE_INS_SETRDY = 98;
  static const int XCORE_INS_SETSR = 99;
  static const int XCORE_INS_SETTW = 100;
  static const int XCORE_INS_SETV = 101;
  static const int XCORE_INS_SEXT = 102;
  static const int XCORE_INS_SHL = 103;
  static const int XCORE_INS_SHR = 104;
  static const int XCORE_INS_SSYNC = 105;
  static const int XCORE_INS_ST16 = 106;
  static const int XCORE_INS_ST8 = 107;
  static const int XCORE_INS_STW = 108;
  static const int XCORE_INS_SUB = 109;
  static const int XCORE_INS_SYNCR = 110;
  static const int XCORE_INS_TESTCT = 111;
  static const int XCORE_INS_TESTLCL = 112;
  static const int XCORE_INS_TESTWCT = 113;
  static const int XCORE_INS_TSETMR = 114;
  static const int XCORE_INS_START = 115;
  static const int XCORE_INS_WAITEF = 116;
  static const int XCORE_INS_WAITET = 117;
  static const int XCORE_INS_WAITEU = 118;
  static const int XCORE_INS_XOR = 119;
  static const int XCORE_INS_ZEXT = 120;
  static const int XCORE_INS_ENDING = 121;
}

/// Group of XCore instructions
abstract class xcore_insn_group {
  /// < = CS_GRP_INVALID
  static const int XCORE_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int XCORE_GRP_JUMP = 1;
  static const int XCORE_GRP_ENDING = 2;
}

abstract class tms320c64x_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int TMS320C64X_OP_INVALID = 0;

  /// < = CS_OP_REG (Register operand).
  static const int TMS320C64X_OP_REG = 1;

  /// < = CS_OP_IMM (Immediate operand).
  static const int TMS320C64X_OP_IMM = 2;

  /// < = CS_OP_MEM (Memory operand).
  static const int TMS320C64X_OP_MEM = 3;

  /// < Register pair for double word ops
  static const int TMS320C64X_OP_REGPAIR = 64;
}

abstract class tms320c64x_mem_disp {
  static const int TMS320C64X_MEM_DISP_INVALID = 0;
  static const int TMS320C64X_MEM_DISP_CONSTANT = 1;
  static const int TMS320C64X_MEM_DISP_REGISTER = 2;
}

abstract class tms320c64x_mem_dir {
  static const int TMS320C64X_MEM_DIR_INVALID = 0;
  static const int TMS320C64X_MEM_DIR_FW = 1;
  static const int TMS320C64X_MEM_DIR_BW = 2;
}

abstract class tms320c64x_mem_mod {
  static const int TMS320C64X_MEM_MOD_INVALID = 0;
  static const int TMS320C64X_MEM_MOD_NO = 1;
  static const int TMS320C64X_MEM_MOD_PRE = 2;
  static const int TMS320C64X_MEM_MOD_POST = 3;
}

class tms320c64x_op_mem extends ffi.Struct {
  /// < base register
  @ffi.UnsignedInt()
  external int base;

  /// < displacement/offset value
  @ffi.UnsignedInt()
  external int disp;

  /// < unit of base and offset register
  @ffi.UnsignedInt()
  external int unit;

  /// < offset scaled
  @ffi.UnsignedInt()
  external int scaled;

  /// < displacement type
  @ffi.UnsignedInt()
  external int disptype;

  /// < direction
  @ffi.UnsignedInt()
  external int direction;

  /// < modification
  @ffi.UnsignedInt()
  external int modify;
}

class cs_tms320c64x_op extends ffi.Struct {
  /// < operand type
  @ffi.Int32()
  external int type;

  external UnnamedUnion12 unnamed;
}

class UnnamedUnion12 extends ffi.Union {
  /// < register value for REG operand or first register for REGPAIR operand
  @ffi.UnsignedInt()
  external int reg;

  /// < immediate value for IMM operand
  @ffi.Int32()
  external int imm;

  /// < base/disp value for MEM operand
  external tms320c64x_op_mem mem;
}

class cs_tms320c64x extends ffi.Struct {
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([8])
  external ffi.Array<cs_tms320c64x_op> operands;

  external UnnamedStruct3 condition;

  external UnnamedStruct4 funit;

  @ffi.UnsignedInt()
  external int parallel;
}

class UnnamedStruct3 extends ffi.Struct {
  @ffi.UnsignedInt()
  external int reg;

  @ffi.UnsignedInt()
  external int zero;
}

class UnnamedStruct4 extends ffi.Struct {
  @ffi.UnsignedInt()
  external int unit;

  @ffi.UnsignedInt()
  external int side;

  @ffi.UnsignedInt()
  external int crosspath;
}

abstract class tms320c64x_reg {
  static const int TMS320C64X_REG_INVALID = 0;
  static const int TMS320C64X_REG_AMR = 1;
  static const int TMS320C64X_REG_CSR = 2;
  static const int TMS320C64X_REG_DIER = 3;
  static const int TMS320C64X_REG_DNUM = 4;
  static const int TMS320C64X_REG_ECR = 5;
  static const int TMS320C64X_REG_GFPGFR = 6;
  static const int TMS320C64X_REG_GPLYA = 7;
  static const int TMS320C64X_REG_GPLYB = 8;
  static const int TMS320C64X_REG_ICR = 9;
  static const int TMS320C64X_REG_IER = 10;
  static const int TMS320C64X_REG_IERR = 11;
  static const int TMS320C64X_REG_ILC = 12;
  static const int TMS320C64X_REG_IRP = 13;
  static const int TMS320C64X_REG_ISR = 14;
  static const int TMS320C64X_REG_ISTP = 15;
  static const int TMS320C64X_REG_ITSR = 16;
  static const int TMS320C64X_REG_NRP = 17;
  static const int TMS320C64X_REG_NTSR = 18;
  static const int TMS320C64X_REG_REP = 19;
  static const int TMS320C64X_REG_RILC = 20;
  static const int TMS320C64X_REG_SSR = 21;
  static const int TMS320C64X_REG_TSCH = 22;
  static const int TMS320C64X_REG_TSCL = 23;
  static const int TMS320C64X_REG_TSR = 24;
  static const int TMS320C64X_REG_A0 = 25;
  static const int TMS320C64X_REG_A1 = 26;
  static const int TMS320C64X_REG_A2 = 27;
  static const int TMS320C64X_REG_A3 = 28;
  static const int TMS320C64X_REG_A4 = 29;
  static const int TMS320C64X_REG_A5 = 30;
  static const int TMS320C64X_REG_A6 = 31;
  static const int TMS320C64X_REG_A7 = 32;
  static const int TMS320C64X_REG_A8 = 33;
  static const int TMS320C64X_REG_A9 = 34;
  static const int TMS320C64X_REG_A10 = 35;
  static const int TMS320C64X_REG_A11 = 36;
  static const int TMS320C64X_REG_A12 = 37;
  static const int TMS320C64X_REG_A13 = 38;
  static const int TMS320C64X_REG_A14 = 39;
  static const int TMS320C64X_REG_A15 = 40;
  static const int TMS320C64X_REG_A16 = 41;
  static const int TMS320C64X_REG_A17 = 42;
  static const int TMS320C64X_REG_A18 = 43;
  static const int TMS320C64X_REG_A19 = 44;
  static const int TMS320C64X_REG_A20 = 45;
  static const int TMS320C64X_REG_A21 = 46;
  static const int TMS320C64X_REG_A22 = 47;
  static const int TMS320C64X_REG_A23 = 48;
  static const int TMS320C64X_REG_A24 = 49;
  static const int TMS320C64X_REG_A25 = 50;
  static const int TMS320C64X_REG_A26 = 51;
  static const int TMS320C64X_REG_A27 = 52;
  static const int TMS320C64X_REG_A28 = 53;
  static const int TMS320C64X_REG_A29 = 54;
  static const int TMS320C64X_REG_A30 = 55;
  static const int TMS320C64X_REG_A31 = 56;
  static const int TMS320C64X_REG_B0 = 57;
  static const int TMS320C64X_REG_B1 = 58;
  static const int TMS320C64X_REG_B2 = 59;
  static const int TMS320C64X_REG_B3 = 60;
  static const int TMS320C64X_REG_B4 = 61;
  static const int TMS320C64X_REG_B5 = 62;
  static const int TMS320C64X_REG_B6 = 63;
  static const int TMS320C64X_REG_B7 = 64;
  static const int TMS320C64X_REG_B8 = 65;
  static const int TMS320C64X_REG_B9 = 66;
  static const int TMS320C64X_REG_B10 = 67;
  static const int TMS320C64X_REG_B11 = 68;
  static const int TMS320C64X_REG_B12 = 69;
  static const int TMS320C64X_REG_B13 = 70;
  static const int TMS320C64X_REG_B14 = 71;
  static const int TMS320C64X_REG_B15 = 72;
  static const int TMS320C64X_REG_B16 = 73;
  static const int TMS320C64X_REG_B17 = 74;
  static const int TMS320C64X_REG_B18 = 75;
  static const int TMS320C64X_REG_B19 = 76;
  static const int TMS320C64X_REG_B20 = 77;
  static const int TMS320C64X_REG_B21 = 78;
  static const int TMS320C64X_REG_B22 = 79;
  static const int TMS320C64X_REG_B23 = 80;
  static const int TMS320C64X_REG_B24 = 81;
  static const int TMS320C64X_REG_B25 = 82;
  static const int TMS320C64X_REG_B26 = 83;
  static const int TMS320C64X_REG_B27 = 84;
  static const int TMS320C64X_REG_B28 = 85;
  static const int TMS320C64X_REG_B29 = 86;
  static const int TMS320C64X_REG_B30 = 87;
  static const int TMS320C64X_REG_B31 = 88;
  static const int TMS320C64X_REG_PCE1 = 89;
  static const int TMS320C64X_REG_ENDING = 90;
  static const int TMS320C64X_REG_EFR = 5;
  static const int TMS320C64X_REG_IFR = 14;
}

abstract class tms320c64x_insn {
  static const int TMS320C64X_INS_INVALID = 0;
  static const int TMS320C64X_INS_ABS = 1;
  static const int TMS320C64X_INS_ABS2 = 2;
  static const int TMS320C64X_INS_ADD = 3;
  static const int TMS320C64X_INS_ADD2 = 4;
  static const int TMS320C64X_INS_ADD4 = 5;
  static const int TMS320C64X_INS_ADDAB = 6;
  static const int TMS320C64X_INS_ADDAD = 7;
  static const int TMS320C64X_INS_ADDAH = 8;
  static const int TMS320C64X_INS_ADDAW = 9;
  static const int TMS320C64X_INS_ADDK = 10;
  static const int TMS320C64X_INS_ADDKPC = 11;
  static const int TMS320C64X_INS_ADDU = 12;
  static const int TMS320C64X_INS_AND = 13;
  static const int TMS320C64X_INS_ANDN = 14;
  static const int TMS320C64X_INS_AVG2 = 15;
  static const int TMS320C64X_INS_AVGU4 = 16;
  static const int TMS320C64X_INS_B = 17;
  static const int TMS320C64X_INS_BDEC = 18;
  static const int TMS320C64X_INS_BITC4 = 19;
  static const int TMS320C64X_INS_BNOP = 20;
  static const int TMS320C64X_INS_BPOS = 21;
  static const int TMS320C64X_INS_CLR = 22;
  static const int TMS320C64X_INS_CMPEQ = 23;
  static const int TMS320C64X_INS_CMPEQ2 = 24;
  static const int TMS320C64X_INS_CMPEQ4 = 25;
  static const int TMS320C64X_INS_CMPGT = 26;
  static const int TMS320C64X_INS_CMPGT2 = 27;
  static const int TMS320C64X_INS_CMPGTU4 = 28;
  static const int TMS320C64X_INS_CMPLT = 29;
  static const int TMS320C64X_INS_CMPLTU = 30;
  static const int TMS320C64X_INS_DEAL = 31;
  static const int TMS320C64X_INS_DOTP2 = 32;
  static const int TMS320C64X_INS_DOTPN2 = 33;
  static const int TMS320C64X_INS_DOTPNRSU2 = 34;
  static const int TMS320C64X_INS_DOTPRSU2 = 35;
  static const int TMS320C64X_INS_DOTPSU4 = 36;
  static const int TMS320C64X_INS_DOTPU4 = 37;
  static const int TMS320C64X_INS_EXT = 38;
  static const int TMS320C64X_INS_EXTU = 39;
  static const int TMS320C64X_INS_GMPGTU = 40;
  static const int TMS320C64X_INS_GMPY4 = 41;
  static const int TMS320C64X_INS_LDB = 42;
  static const int TMS320C64X_INS_LDBU = 43;
  static const int TMS320C64X_INS_LDDW = 44;
  static const int TMS320C64X_INS_LDH = 45;
  static const int TMS320C64X_INS_LDHU = 46;
  static const int TMS320C64X_INS_LDNDW = 47;
  static const int TMS320C64X_INS_LDNW = 48;
  static const int TMS320C64X_INS_LDW = 49;
  static const int TMS320C64X_INS_LMBD = 50;
  static const int TMS320C64X_INS_MAX2 = 51;
  static const int TMS320C64X_INS_MAXU4 = 52;
  static const int TMS320C64X_INS_MIN2 = 53;
  static const int TMS320C64X_INS_MINU4 = 54;
  static const int TMS320C64X_INS_MPY = 55;
  static const int TMS320C64X_INS_MPY2 = 56;
  static const int TMS320C64X_INS_MPYH = 57;
  static const int TMS320C64X_INS_MPYHI = 58;
  static const int TMS320C64X_INS_MPYHIR = 59;
  static const int TMS320C64X_INS_MPYHL = 60;
  static const int TMS320C64X_INS_MPYHLU = 61;
  static const int TMS320C64X_INS_MPYHSLU = 62;
  static const int TMS320C64X_INS_MPYHSU = 63;
  static const int TMS320C64X_INS_MPYHU = 64;
  static const int TMS320C64X_INS_MPYHULS = 65;
  static const int TMS320C64X_INS_MPYHUS = 66;
  static const int TMS320C64X_INS_MPYLH = 67;
  static const int TMS320C64X_INS_MPYLHU = 68;
  static const int TMS320C64X_INS_MPYLI = 69;
  static const int TMS320C64X_INS_MPYLIR = 70;
  static const int TMS320C64X_INS_MPYLSHU = 71;
  static const int TMS320C64X_INS_MPYLUHS = 72;
  static const int TMS320C64X_INS_MPYSU = 73;
  static const int TMS320C64X_INS_MPYSU4 = 74;
  static const int TMS320C64X_INS_MPYU = 75;
  static const int TMS320C64X_INS_MPYU4 = 76;
  static const int TMS320C64X_INS_MPYUS = 77;
  static const int TMS320C64X_INS_MVC = 78;
  static const int TMS320C64X_INS_MVD = 79;
  static const int TMS320C64X_INS_MVK = 80;
  static const int TMS320C64X_INS_MVKL = 81;
  static const int TMS320C64X_INS_MVKLH = 82;
  static const int TMS320C64X_INS_NOP = 83;
  static const int TMS320C64X_INS_NORM = 84;
  static const int TMS320C64X_INS_OR = 85;
  static const int TMS320C64X_INS_PACK2 = 86;
  static const int TMS320C64X_INS_PACKH2 = 87;
  static const int TMS320C64X_INS_PACKH4 = 88;
  static const int TMS320C64X_INS_PACKHL2 = 89;
  static const int TMS320C64X_INS_PACKL4 = 90;
  static const int TMS320C64X_INS_PACKLH2 = 91;
  static const int TMS320C64X_INS_ROTL = 92;
  static const int TMS320C64X_INS_SADD = 93;
  static const int TMS320C64X_INS_SADD2 = 94;
  static const int TMS320C64X_INS_SADDU4 = 95;
  static const int TMS320C64X_INS_SADDUS2 = 96;
  static const int TMS320C64X_INS_SAT = 97;
  static const int TMS320C64X_INS_SET = 98;
  static const int TMS320C64X_INS_SHFL = 99;
  static const int TMS320C64X_INS_SHL = 100;
  static const int TMS320C64X_INS_SHLMB = 101;
  static const int TMS320C64X_INS_SHR = 102;
  static const int TMS320C64X_INS_SHR2 = 103;
  static const int TMS320C64X_INS_SHRMB = 104;
  static const int TMS320C64X_INS_SHRU = 105;
  static const int TMS320C64X_INS_SHRU2 = 106;
  static const int TMS320C64X_INS_SMPY = 107;
  static const int TMS320C64X_INS_SMPY2 = 108;
  static const int TMS320C64X_INS_SMPYH = 109;
  static const int TMS320C64X_INS_SMPYHL = 110;
  static const int TMS320C64X_INS_SMPYLH = 111;
  static const int TMS320C64X_INS_SPACK2 = 112;
  static const int TMS320C64X_INS_SPACKU4 = 113;
  static const int TMS320C64X_INS_SSHL = 114;
  static const int TMS320C64X_INS_SSHVL = 115;
  static const int TMS320C64X_INS_SSHVR = 116;
  static const int TMS320C64X_INS_SSUB = 117;
  static const int TMS320C64X_INS_STB = 118;
  static const int TMS320C64X_INS_STDW = 119;
  static const int TMS320C64X_INS_STH = 120;
  static const int TMS320C64X_INS_STNDW = 121;
  static const int TMS320C64X_INS_STNW = 122;
  static const int TMS320C64X_INS_STW = 123;
  static const int TMS320C64X_INS_SUB = 124;
  static const int TMS320C64X_INS_SUB2 = 125;
  static const int TMS320C64X_INS_SUB4 = 126;
  static const int TMS320C64X_INS_SUBAB = 127;
  static const int TMS320C64X_INS_SUBABS4 = 128;
  static const int TMS320C64X_INS_SUBAH = 129;
  static const int TMS320C64X_INS_SUBAW = 130;
  static const int TMS320C64X_INS_SUBC = 131;
  static const int TMS320C64X_INS_SUBU = 132;
  static const int TMS320C64X_INS_SWAP4 = 133;
  static const int TMS320C64X_INS_UNPKHU4 = 134;
  static const int TMS320C64X_INS_UNPKLU4 = 135;
  static const int TMS320C64X_INS_XOR = 136;
  static const int TMS320C64X_INS_XPND2 = 137;
  static const int TMS320C64X_INS_XPND4 = 138;
  static const int TMS320C64X_INS_IDLE = 139;
  static const int TMS320C64X_INS_MV = 140;
  static const int TMS320C64X_INS_NEG = 141;
  static const int TMS320C64X_INS_NOT = 142;
  static const int TMS320C64X_INS_SWAP2 = 143;
  static const int TMS320C64X_INS_ZERO = 144;
  static const int TMS320C64X_INS_ENDING = 145;
}

abstract class tms320c64x_insn_group {
  /// < = CS_GRP_INVALID
  static const int TMS320C64X_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int TMS320C64X_GRP_JUMP = 1;
  static const int TMS320C64X_GRP_FUNIT_D = 128;
  static const int TMS320C64X_GRP_FUNIT_L = 129;
  static const int TMS320C64X_GRP_FUNIT_M = 130;
  static const int TMS320C64X_GRP_FUNIT_S = 131;
  static const int TMS320C64X_GRP_FUNIT_NO = 132;
  static const int TMS320C64X_GRP_ENDING = 133;
}

abstract class tms320c64x_funit {
  static const int TMS320C64X_FUNIT_INVALID = 0;
  static const int TMS320C64X_FUNIT_D = 1;
  static const int TMS320C64X_FUNIT_L = 2;
  static const int TMS320C64X_FUNIT_M = 3;
  static const int TMS320C64X_FUNIT_S = 4;
  static const int TMS320C64X_FUNIT_NO = 5;
}

/// M680X registers and special registers
abstract class m680x_reg {
  static const int M680X_REG_INVALID = 0;

  /// < M6800/1/2/3/9, HD6301/9
  static const int M680X_REG_A = 1;

  /// < M6800/1/2/3/9, HD6301/9
  static const int M680X_REG_B = 2;

  /// < HD6309
  static const int M680X_REG_E = 3;

  /// < HD6309
  static const int M680X_REG_F = 4;

  /// < HD6309
  static const int M680X_REG_0 = 5;

  /// < M6801/3/9, HD6301/9
  static const int M680X_REG_D = 6;

  /// < HD6309
  static const int M680X_REG_W = 7;

  /// < M6800/1/2/3/9, M6301/9
  static const int M680X_REG_CC = 8;

  /// < M6809/M6309
  static const int M680X_REG_DP = 9;

  /// < M6309
  static const int M680X_REG_MD = 10;

  /// < M6808
  static const int M680X_REG_HX = 11;

  /// < M6808
  static const int M680X_REG_H = 12;

  /// < M6800/1/2/3/9, M6301/9
  static const int M680X_REG_X = 13;

  /// < M6809/M6309
  static const int M680X_REG_Y = 14;

  /// < M6809/M6309
  static const int M680X_REG_S = 15;

  /// < M6809/M6309
  static const int M680X_REG_U = 16;

  /// < M6309
  static const int M680X_REG_V = 17;

  /// < M6309
  static const int M680X_REG_Q = 18;

  /// < M6800/1/2/3/9, M6301/9
  static const int M680X_REG_PC = 19;

  /// < CPU12
  static const int M680X_REG_TMP2 = 20;

  /// < CPU12
  static const int M680X_REG_TMP3 = 21;

  /// < <-- mark the end of the list of registers
  static const int M680X_REG_ENDING = 22;
}

/// Operand type for instruction's operands
abstract class m680x_op_type {
  /// < = CS_OP_INVALID (Uninitialized).
  static const int M680X_OP_INVALID = 0;

  /// < = Register operand.
  static const int M680X_OP_REGISTER = 1;

  /// < = Immediate operand.
  static const int M680X_OP_IMMEDIATE = 2;

  /// < = Indexed addressing operand.
  static const int M680X_OP_INDEXED = 3;

  /// < = Extended addressing operand.
  static const int M680X_OP_EXTENDED = 4;

  /// < = Direct addressing operand.
  static const int M680X_OP_DIRECT = 5;

  /// < = Relative addressing operand.
  static const int M680X_OP_RELATIVE = 6;

  /// < = constant operand (Displayed as number only).
  /// < Used e.g. for a bit index or page number.
  static const int M680X_OP_CONSTANT = 7;
}

/// Instruction's operand referring to indexed addressing
class m680x_op_idx extends ffi.Struct {
  /// < base register (or M680X_REG_INVALID if
  /// < irrelevant)
  @ffi.Int32()
  external int base_reg;

  /// < offset register (or M680X_REG_INVALID if
  /// < irrelevant)
  @ffi.Int32()
  external int offset_reg;

  /// < 5-,8- or 16-bit offset. See also offset_bits.
  @ffi.Int16()
  external int offset;

  /// < = offset addr. if base_reg == M680X_REG_PC.
  /// < calculated as offset + PC
  @ffi.Uint16()
  external int offset_addr;

  /// < offset width in bits for indexed addressing
  @ffi.Uint8()
  external int offset_bits;

  /// < inc. or dec. value:
  /// <    0: no inc-/decrement
  /// <    1 .. 8: increment by 1 .. 8
  /// <    -1 .. -8: decrement by 1 .. 8
  /// < if flag M680X_IDX_POST_INC_DEC set it is post
  /// < inc-/decrement otherwise pre inc-/decrement
  @ffi.Int8()
  external int inc_dec;

  /// < 8-bit flags (see above)
  @ffi.Uint8()
  external int flags;
}

/// Instruction's memory operand referring to relative addressing (Bcc/LBcc)
class m680x_op_rel extends ffi.Struct {
  /// < The absolute address.
  /// < calculated as PC + offset. PC is the first
  /// < address after the instruction.
  @ffi.Uint16()
  external int address;

  /// < the offset/displacement value
  @ffi.Int16()
  external int offset;
}

/// Instruction's operand referring to extended addressing
class m680x_op_ext extends ffi.Struct {
  /// < The absolute address
  @ffi.Uint16()
  external int address;

  /// < true if extended indirect addressing
  @ffi.Bool()
  external bool indirect;
}

/// Instruction operand
class cs_m680x_op extends ffi.Struct {
  @ffi.Int32()
  external int type;

  external UnnamedUnion13 unnamed;

  /// < size of this operand (in bytes)
  @ffi.Uint8()
  external int size;

  /// How is this operand accessed? (READ, WRITE or READ|WRITE)
  /// This field is combined of cs_ac_type.
  /// NOTE: this field is irrelevant if engine is compiled in DIET
  @ffi.Uint8()
  external int access;
}

class UnnamedUnion13 extends ffi.Union {
  /// < immediate value for IMM operand
  @ffi.Int32()
  external int imm;

  /// < register value for REG operand
  @ffi.Int32()
  external int reg;

  /// < Indexed addressing operand
  external m680x_op_idx idx;

  /// < Relative address. operand (Bcc/LBcc)
  external m680x_op_rel rel;

  /// < Extended address
  external m680x_op_ext ext;

  /// <</ Direct address (lower 8-bit)
  @ffi.Uint8()
  external int direct_addr;

  /// < constant value (bit index, page nr.)
  @ffi.Uint8()
  external int const_val;
}

/// Group of M680X instructions
abstract class m680x_group_type {
  static const int M680X_GRP_INVALID = 0;

  /// < = CS_GRP_JUMP
  static const int M680X_GRP_JUMP = 1;

  /// < = CS_GRP_CALL
  static const int M680X_GRP_CALL = 2;

  /// < = CS_GRP_RET
  static const int M680X_GRP_RET = 3;

  /// < = CS_GRP_INT
  static const int M680X_GRP_INT = 4;

  /// < = CS_GRP_IRET
  static const int M680X_GRP_IRET = 5;

  /// < = CS_GRP_PRIVILEDGE; not used
  static const int M680X_GRP_PRIV = 6;

  /// < = CS_GRP_BRANCH_RELATIVE
  static const int M680X_GRP_BRAREL = 7;
  static const int M680X_GRP_ENDING = 8;
}

/// The M680X instruction and it's operands
class cs_m680x extends ffi.Struct {
  /// < See: M680X instruction flags
  @ffi.Uint8()
  external int flags;

  /// < number of operands for the instruction or 0
  @ffi.Uint8()
  external int op_count;

  @ffi.Array.multi([9])
  external ffi.Array<cs_m680x_op> operands;
}

/// M680X instruction IDs
abstract class m680x_insn {
  static const int M680X_INS_INVLD = 0;

  /// < M6800/1/2/3
  static const int M680X_INS_ABA = 1;
  static const int M680X_INS_ABX = 2;
  static const int M680X_INS_ABY = 3;
  static const int M680X_INS_ADC = 4;
  static const int M680X_INS_ADCA = 5;
  static const int M680X_INS_ADCB = 6;
  static const int M680X_INS_ADCD = 7;
  static const int M680X_INS_ADCR = 8;
  static const int M680X_INS_ADD = 9;
  static const int M680X_INS_ADDA = 10;
  static const int M680X_INS_ADDB = 11;
  static const int M680X_INS_ADDD = 12;
  static const int M680X_INS_ADDE = 13;
  static const int M680X_INS_ADDF = 14;
  static const int M680X_INS_ADDR = 15;
  static const int M680X_INS_ADDW = 16;
  static const int M680X_INS_AIM = 17;
  static const int M680X_INS_AIS = 18;
  static const int M680X_INS_AIX = 19;
  static const int M680X_INS_AND = 20;
  static const int M680X_INS_ANDA = 21;
  static const int M680X_INS_ANDB = 22;
  static const int M680X_INS_ANDCC = 23;
  static const int M680X_INS_ANDD = 24;
  static const int M680X_INS_ANDR = 25;
  static const int M680X_INS_ASL = 26;
  static const int M680X_INS_ASLA = 27;
  static const int M680X_INS_ASLB = 28;

  /// < or LSLD
  static const int M680X_INS_ASLD = 29;
  static const int M680X_INS_ASR = 30;
  static const int M680X_INS_ASRA = 31;
  static const int M680X_INS_ASRB = 32;
  static const int M680X_INS_ASRD = 33;
  static const int M680X_INS_ASRX = 34;
  static const int M680X_INS_BAND = 35;

  /// < or BHS
  static const int M680X_INS_BCC = 36;
  static const int M680X_INS_BCLR = 37;

  /// < or BLO
  static const int M680X_INS_BCS = 38;
  static const int M680X_INS_BEOR = 39;
  static const int M680X_INS_BEQ = 40;
  static const int M680X_INS_BGE = 41;
  static const int M680X_INS_BGND = 42;
  static const int M680X_INS_BGT = 43;
  static const int M680X_INS_BHCC = 44;
  static const int M680X_INS_BHCS = 45;
  static const int M680X_INS_BHI = 46;
  static const int M680X_INS_BIAND = 47;
  static const int M680X_INS_BIEOR = 48;
  static const int M680X_INS_BIH = 49;
  static const int M680X_INS_BIL = 50;
  static const int M680X_INS_BIOR = 51;
  static const int M680X_INS_BIT = 52;
  static const int M680X_INS_BITA = 53;
  static const int M680X_INS_BITB = 54;
  static const int M680X_INS_BITD = 55;
  static const int M680X_INS_BITMD = 56;
  static const int M680X_INS_BLE = 57;
  static const int M680X_INS_BLS = 58;
  static const int M680X_INS_BLT = 59;
  static const int M680X_INS_BMC = 60;
  static const int M680X_INS_BMI = 61;
  static const int M680X_INS_BMS = 62;
  static const int M680X_INS_BNE = 63;
  static const int M680X_INS_BOR = 64;
  static const int M680X_INS_BPL = 65;
  static const int M680X_INS_BRCLR = 66;
  static const int M680X_INS_BRSET = 67;
  static const int M680X_INS_BRA = 68;
  static const int M680X_INS_BRN = 69;
  static const int M680X_INS_BSET = 70;
  static const int M680X_INS_BSR = 71;
  static const int M680X_INS_BVC = 72;
  static const int M680X_INS_BVS = 73;
  static const int M680X_INS_CALL = 74;

  /// < M6800/1/2/3
  static const int M680X_INS_CBA = 75;
  static const int M680X_INS_CBEQ = 76;
  static const int M680X_INS_CBEQA = 77;
  static const int M680X_INS_CBEQX = 78;

  /// < M6800/1/2/3
  static const int M680X_INS_CLC = 79;

  /// < M6800/1/2/3
  static const int M680X_INS_CLI = 80;
  static const int M680X_INS_CLR = 81;
  static const int M680X_INS_CLRA = 82;
  static const int M680X_INS_CLRB = 83;
  static const int M680X_INS_CLRD = 84;
  static const int M680X_INS_CLRE = 85;
  static const int M680X_INS_CLRF = 86;
  static const int M680X_INS_CLRH = 87;
  static const int M680X_INS_CLRW = 88;
  static const int M680X_INS_CLRX = 89;

  /// < M6800/1/2/3
  static const int M680X_INS_CLV = 90;
  static const int M680X_INS_CMP = 91;
  static const int M680X_INS_CMPA = 92;
  static const int M680X_INS_CMPB = 93;
  static const int M680X_INS_CMPD = 94;
  static const int M680X_INS_CMPE = 95;
  static const int M680X_INS_CMPF = 96;
  static const int M680X_INS_CMPR = 97;
  static const int M680X_INS_CMPS = 98;
  static const int M680X_INS_CMPU = 99;
  static const int M680X_INS_CMPW = 100;
  static const int M680X_INS_CMPX = 101;
  static const int M680X_INS_CMPY = 102;
  static const int M680X_INS_COM = 103;
  static const int M680X_INS_COMA = 104;
  static const int M680X_INS_COMB = 105;
  static const int M680X_INS_COMD = 106;
  static const int M680X_INS_COME = 107;
  static const int M680X_INS_COMF = 108;
  static const int M680X_INS_COMW = 109;
  static const int M680X_INS_COMX = 110;
  static const int M680X_INS_CPD = 111;
  static const int M680X_INS_CPHX = 112;
  static const int M680X_INS_CPS = 113;

  /// < M6800/1/2/3
  static const int M680X_INS_CPX = 114;
  static const int M680X_INS_CPY = 115;
  static const int M680X_INS_CWAI = 116;
  static const int M680X_INS_DAA = 117;
  static const int M680X_INS_DBEQ = 118;
  static const int M680X_INS_DBNE = 119;
  static const int M680X_INS_DBNZ = 120;
  static const int M680X_INS_DBNZA = 121;
  static const int M680X_INS_DBNZX = 122;
  static const int M680X_INS_DEC = 123;
  static const int M680X_INS_DECA = 124;
  static const int M680X_INS_DECB = 125;
  static const int M680X_INS_DECD = 126;
  static const int M680X_INS_DECE = 127;
  static const int M680X_INS_DECF = 128;
  static const int M680X_INS_DECW = 129;
  static const int M680X_INS_DECX = 130;

  /// < M6800/1/2/3
  static const int M680X_INS_DES = 131;

  /// < M6800/1/2/3
  static const int M680X_INS_DEX = 132;
  static const int M680X_INS_DEY = 133;
  static const int M680X_INS_DIV = 134;
  static const int M680X_INS_DIVD = 135;
  static const int M680X_INS_DIVQ = 136;
  static const int M680X_INS_EDIV = 137;
  static const int M680X_INS_EDIVS = 138;
  static const int M680X_INS_EIM = 139;
  static const int M680X_INS_EMACS = 140;
  static const int M680X_INS_EMAXD = 141;
  static const int M680X_INS_EMAXM = 142;
  static const int M680X_INS_EMIND = 143;
  static const int M680X_INS_EMINM = 144;
  static const int M680X_INS_EMUL = 145;
  static const int M680X_INS_EMULS = 146;
  static const int M680X_INS_EOR = 147;
  static const int M680X_INS_EORA = 148;
  static const int M680X_INS_EORB = 149;
  static const int M680X_INS_EORD = 150;
  static const int M680X_INS_EORR = 151;
  static const int M680X_INS_ETBL = 152;
  static const int M680X_INS_EXG = 153;
  static const int M680X_INS_FDIV = 154;
  static const int M680X_INS_IBEQ = 155;
  static const int M680X_INS_IBNE = 156;
  static const int M680X_INS_IDIV = 157;
  static const int M680X_INS_IDIVS = 158;
  static const int M680X_INS_ILLGL = 159;
  static const int M680X_INS_INC = 160;
  static const int M680X_INS_INCA = 161;
  static const int M680X_INS_INCB = 162;
  static const int M680X_INS_INCD = 163;
  static const int M680X_INS_INCE = 164;
  static const int M680X_INS_INCF = 165;
  static const int M680X_INS_INCW = 166;
  static const int M680X_INS_INCX = 167;

  /// < M6800/1/2/3
  static const int M680X_INS_INS = 168;

  /// < M6800/1/2/3
  static const int M680X_INS_INX = 169;
  static const int M680X_INS_INY = 170;
  static const int M680X_INS_JMP = 171;
  static const int M680X_INS_JSR = 172;

  /// < or LBHS
  static const int M680X_INS_LBCC = 173;

  /// < or LBLO
  static const int M680X_INS_LBCS = 174;
  static const int M680X_INS_LBEQ = 175;
  static const int M680X_INS_LBGE = 176;
  static const int M680X_INS_LBGT = 177;
  static const int M680X_INS_LBHI = 178;
  static const int M680X_INS_LBLE = 179;
  static const int M680X_INS_LBLS = 180;
  static const int M680X_INS_LBLT = 181;
  static const int M680X_INS_LBMI = 182;
  static const int M680X_INS_LBNE = 183;
  static const int M680X_INS_LBPL = 184;
  static const int M680X_INS_LBRA = 185;
  static const int M680X_INS_LBRN = 186;
  static const int M680X_INS_LBSR = 187;
  static const int M680X_INS_LBVC = 188;
  static const int M680X_INS_LBVS = 189;
  static const int M680X_INS_LDA = 190;

  /// < M6800/1/2/3
  static const int M680X_INS_LDAA = 191;

  /// < M6800/1/2/3
  static const int M680X_INS_LDAB = 192;
  static const int M680X_INS_LDB = 193;
  static const int M680X_INS_LDBT = 194;
  static const int M680X_INS_LDD = 195;
  static const int M680X_INS_LDE = 196;
  static const int M680X_INS_LDF = 197;
  static const int M680X_INS_LDHX = 198;
  static const int M680X_INS_LDMD = 199;
  static const int M680X_INS_LDQ = 200;
  static const int M680X_INS_LDS = 201;
  static const int M680X_INS_LDU = 202;
  static const int M680X_INS_LDW = 203;
  static const int M680X_INS_LDX = 204;
  static const int M680X_INS_LDY = 205;
  static const int M680X_INS_LEAS = 206;
  static const int M680X_INS_LEAU = 207;
  static const int M680X_INS_LEAX = 208;
  static const int M680X_INS_LEAY = 209;
  static const int M680X_INS_LSL = 210;
  static const int M680X_INS_LSLA = 211;
  static const int M680X_INS_LSLB = 212;
  static const int M680X_INS_LSLD = 213;
  static const int M680X_INS_LSLX = 214;
  static const int M680X_INS_LSR = 215;
  static const int M680X_INS_LSRA = 216;
  static const int M680X_INS_LSRB = 217;

  /// < or ASRD
  static const int M680X_INS_LSRD = 218;
  static const int M680X_INS_LSRW = 219;
  static const int M680X_INS_LSRX = 220;
  static const int M680X_INS_MAXA = 221;
  static const int M680X_INS_MAXM = 222;
  static const int M680X_INS_MEM = 223;
  static const int M680X_INS_MINA = 224;
  static const int M680X_INS_MINM = 225;
  static const int M680X_INS_MOV = 226;
  static const int M680X_INS_MOVB = 227;
  static const int M680X_INS_MOVW = 228;
  static const int M680X_INS_MUL = 229;
  static const int M680X_INS_MULD = 230;
  static const int M680X_INS_NEG = 231;
  static const int M680X_INS_NEGA = 232;
  static const int M680X_INS_NEGB = 233;
  static const int M680X_INS_NEGD = 234;
  static const int M680X_INS_NEGX = 235;
  static const int M680X_INS_NOP = 236;
  static const int M680X_INS_NSA = 237;
  static const int M680X_INS_OIM = 238;
  static const int M680X_INS_ORA = 239;

  /// < M6800/1/2/3
  static const int M680X_INS_ORAA = 240;

  /// < M6800/1/2/3
  static const int M680X_INS_ORAB = 241;
  static const int M680X_INS_ORB = 242;
  static const int M680X_INS_ORCC = 243;
  static const int M680X_INS_ORD = 244;
  static const int M680X_INS_ORR = 245;

  /// < M6800/1/2/3
  static const int M680X_INS_PSHA = 246;

  /// < M6800/1/2/3
  static const int M680X_INS_PSHB = 247;
  static const int M680X_INS_PSHC = 248;
  static const int M680X_INS_PSHD = 249;
  static const int M680X_INS_PSHH = 250;
  static const int M680X_INS_PSHS = 251;
  static const int M680X_INS_PSHSW = 252;
  static const int M680X_INS_PSHU = 253;
  static const int M680X_INS_PSHUW = 254;

  /// < M6800/1/2/3
  static const int M680X_INS_PSHX = 255;
  static const int M680X_INS_PSHY = 256;

  /// < M6800/1/2/3
  static const int M680X_INS_PULA = 257;

  /// < M6800/1/2/3
  static const int M680X_INS_PULB = 258;
  static const int M680X_INS_PULC = 259;
  static const int M680X_INS_PULD = 260;
  static const int M680X_INS_PULH = 261;
  static const int M680X_INS_PULS = 262;
  static const int M680X_INS_PULSW = 263;
  static const int M680X_INS_PULU = 264;
  static const int M680X_INS_PULUW = 265;

  /// < M6800/1/2/3
  static const int M680X_INS_PULX = 266;
  static const int M680X_INS_PULY = 267;
  static const int M680X_INS_REV = 268;
  static const int M680X_INS_REVW = 269;
  static const int M680X_INS_ROL = 270;
  static const int M680X_INS_ROLA = 271;
  static const int M680X_INS_ROLB = 272;
  static const int M680X_INS_ROLD = 273;
  static const int M680X_INS_ROLW = 274;
  static const int M680X_INS_ROLX = 275;
  static const int M680X_INS_ROR = 276;
  static const int M680X_INS_RORA = 277;
  static const int M680X_INS_RORB = 278;
  static const int M680X_INS_RORD = 279;
  static const int M680X_INS_RORW = 280;
  static const int M680X_INS_RORX = 281;
  static const int M680X_INS_RSP = 282;
  static const int M680X_INS_RTC = 283;
  static const int M680X_INS_RTI = 284;
  static const int M680X_INS_RTS = 285;

  /// < M6800/1/2/3
  static const int M680X_INS_SBA = 286;
  static const int M680X_INS_SBC = 287;
  static const int M680X_INS_SBCA = 288;
  static const int M680X_INS_SBCB = 289;
  static const int M680X_INS_SBCD = 290;
  static const int M680X_INS_SBCR = 291;
  static const int M680X_INS_SEC = 292;
  static const int M680X_INS_SEI = 293;
  static const int M680X_INS_SEV = 294;
  static const int M680X_INS_SEX = 295;
  static const int M680X_INS_SEXW = 296;
  static const int M680X_INS_SLP = 297;
  static const int M680X_INS_STA = 298;

  /// < M6800/1/2/3
  static const int M680X_INS_STAA = 299;

  /// < M6800/1/2/3
  static const int M680X_INS_STAB = 300;
  static const int M680X_INS_STB = 301;
  static const int M680X_INS_STBT = 302;
  static const int M680X_INS_STD = 303;
  static const int M680X_INS_STE = 304;
  static const int M680X_INS_STF = 305;
  static const int M680X_INS_STOP = 306;
  static const int M680X_INS_STHX = 307;
  static const int M680X_INS_STQ = 308;
  static const int M680X_INS_STS = 309;
  static const int M680X_INS_STU = 310;
  static const int M680X_INS_STW = 311;
  static const int M680X_INS_STX = 312;
  static const int M680X_INS_STY = 313;
  static const int M680X_INS_SUB = 314;
  static const int M680X_INS_SUBA = 315;
  static const int M680X_INS_SUBB = 316;
  static const int M680X_INS_SUBD = 317;
  static const int M680X_INS_SUBE = 318;
  static const int M680X_INS_SUBF = 319;
  static const int M680X_INS_SUBR = 320;
  static const int M680X_INS_SUBW = 321;
  static const int M680X_INS_SWI = 322;
  static const int M680X_INS_SWI2 = 323;
  static const int M680X_INS_SWI3 = 324;
  static const int M680X_INS_SYNC = 325;

  /// < M6800/1/2/3
  static const int M680X_INS_TAB = 326;

  /// < M6800/1/2/3
  static const int M680X_INS_TAP = 327;
  static const int M680X_INS_TAX = 328;

  /// < M6800/1/2/3
  static const int M680X_INS_TBA = 329;
  static const int M680X_INS_TBEQ = 330;
  static const int M680X_INS_TBL = 331;
  static const int M680X_INS_TBNE = 332;
  static const int M680X_INS_TEST = 333;
  static const int M680X_INS_TFM = 334;
  static const int M680X_INS_TFR = 335;
  static const int M680X_INS_TIM = 336;

  /// < M6800/1/2/3
  static const int M680X_INS_TPA = 337;
  static const int M680X_INS_TST = 338;
  static const int M680X_INS_TSTA = 339;
  static const int M680X_INS_TSTB = 340;
  static const int M680X_INS_TSTD = 341;
  static const int M680X_INS_TSTE = 342;
  static const int M680X_INS_TSTF = 343;
  static const int M680X_INS_TSTW = 344;
  static const int M680X_INS_TSTX = 345;

  /// < M6800/1/2/3
  static const int M680X_INS_TSX = 346;
  static const int M680X_INS_TSY = 347;
  static const int M680X_INS_TXA = 348;

  /// < M6800/1/2/3
  static const int M680X_INS_TXS = 349;
  static const int M680X_INS_TYS = 350;

  /// < M6800/1/2/3
  static const int M680X_INS_WAI = 351;
  static const int M680X_INS_WAIT = 352;
  static const int M680X_INS_WAV = 353;
  static const int M680X_INS_WAVR = 354;

  /// < HD6301
  static const int M680X_INS_XGDX = 355;
  static const int M680X_INS_XGDY = 356;
  static const int M680X_INS_ENDING = 357;
}

/// Instruction structure
class cs_evm extends ffi.Struct {
  /// < number of items popped from the stack
  @ffi.UnsignedChar()
  external int pop;

  /// < number of items pushed into the stack
  @ffi.UnsignedChar()
  external int push;

  /// < gas fee for the instruction
  @ffi.UnsignedInt()
  external int fee;
}

/// EVM instruction
abstract class evm_insn {
  static const int EVM_INS_STOP = 0;
  static const int EVM_INS_ADD = 1;
  static const int EVM_INS_MUL = 2;
  static const int EVM_INS_SUB = 3;
  static const int EVM_INS_DIV = 4;
  static const int EVM_INS_SDIV = 5;
  static const int EVM_INS_MOD = 6;
  static const int EVM_INS_SMOD = 7;
  static const int EVM_INS_ADDMOD = 8;
  static const int EVM_INS_MULMOD = 9;
  static const int EVM_INS_EXP = 10;
  static const int EVM_INS_SIGNEXTEND = 11;
  static const int EVM_INS_LT = 16;
  static const int EVM_INS_GT = 17;
  static const int EVM_INS_SLT = 18;
  static const int EVM_INS_SGT = 19;
  static const int EVM_INS_EQ = 20;
  static const int EVM_INS_ISZERO = 21;
  static const int EVM_INS_AND = 22;
  static const int EVM_INS_OR = 23;
  static const int EVM_INS_XOR = 24;
  static const int EVM_INS_NOT = 25;
  static const int EVM_INS_BYTE = 26;
  static const int EVM_INS_SHA3 = 32;
  static const int EVM_INS_ADDRESS = 48;
  static const int EVM_INS_BALANCE = 49;
  static const int EVM_INS_ORIGIN = 50;
  static const int EVM_INS_CALLER = 51;
  static const int EVM_INS_CALLVALUE = 52;
  static const int EVM_INS_CALLDATALOAD = 53;
  static const int EVM_INS_CALLDATASIZE = 54;
  static const int EVM_INS_CALLDATACOPY = 55;
  static const int EVM_INS_CODESIZE = 56;
  static const int EVM_INS_CODECOPY = 57;
  static const int EVM_INS_GASPRICE = 58;
  static const int EVM_INS_EXTCODESIZE = 59;
  static const int EVM_INS_EXTCODECOPY = 60;
  static const int EVM_INS_RETURNDATASIZE = 61;
  static const int EVM_INS_RETURNDATACOPY = 62;
  static const int EVM_INS_BLOCKHASH = 64;
  static const int EVM_INS_COINBASE = 65;
  static const int EVM_INS_TIMESTAMP = 66;
  static const int EVM_INS_NUMBER = 67;
  static const int EVM_INS_DIFFICULTY = 68;
  static const int EVM_INS_GASLIMIT = 69;
  static const int EVM_INS_POP = 80;
  static const int EVM_INS_MLOAD = 81;
  static const int EVM_INS_MSTORE = 82;
  static const int EVM_INS_MSTORE8 = 83;
  static const int EVM_INS_SLOAD = 84;
  static const int EVM_INS_SSTORE = 85;
  static const int EVM_INS_JUMP = 86;
  static const int EVM_INS_JUMPI = 87;
  static const int EVM_INS_PC = 88;
  static const int EVM_INS_MSIZE = 89;
  static const int EVM_INS_GAS = 90;
  static const int EVM_INS_JUMPDEST = 91;
  static const int EVM_INS_PUSH1 = 96;
  static const int EVM_INS_PUSH2 = 97;
  static const int EVM_INS_PUSH3 = 98;
  static const int EVM_INS_PUSH4 = 99;
  static const int EVM_INS_PUSH5 = 100;
  static const int EVM_INS_PUSH6 = 101;
  static const int EVM_INS_PUSH7 = 102;
  static const int EVM_INS_PUSH8 = 103;
  static const int EVM_INS_PUSH9 = 104;
  static const int EVM_INS_PUSH10 = 105;
  static const int EVM_INS_PUSH11 = 106;
  static const int EVM_INS_PUSH12 = 107;
  static const int EVM_INS_PUSH13 = 108;
  static const int EVM_INS_PUSH14 = 109;
  static const int EVM_INS_PUSH15 = 110;
  static const int EVM_INS_PUSH16 = 111;
  static const int EVM_INS_PUSH17 = 112;
  static const int EVM_INS_PUSH18 = 113;
  static const int EVM_INS_PUSH19 = 114;
  static const int EVM_INS_PUSH20 = 115;
  static const int EVM_INS_PUSH21 = 116;
  static const int EVM_INS_PUSH22 = 117;
  static const int EVM_INS_PUSH23 = 118;
  static const int EVM_INS_PUSH24 = 119;
  static const int EVM_INS_PUSH25 = 120;
  static const int EVM_INS_PUSH26 = 121;
  static const int EVM_INS_PUSH27 = 122;
  static const int EVM_INS_PUSH28 = 123;
  static const int EVM_INS_PUSH29 = 124;
  static const int EVM_INS_PUSH30 = 125;
  static const int EVM_INS_PUSH31 = 126;
  static const int EVM_INS_PUSH32 = 127;
  static const int EVM_INS_DUP1 = 128;
  static const int EVM_INS_DUP2 = 129;
  static const int EVM_INS_DUP3 = 130;
  static const int EVM_INS_DUP4 = 131;
  static const int EVM_INS_DUP5 = 132;
  static const int EVM_INS_DUP6 = 133;
  static const int EVM_INS_DUP7 = 134;
  static const int EVM_INS_DUP8 = 135;
  static const int EVM_INS_DUP9 = 136;
  static const int EVM_INS_DUP10 = 137;
  static const int EVM_INS_DUP11 = 138;
  static const int EVM_INS_DUP12 = 139;
  static const int EVM_INS_DUP13 = 140;
  static const int EVM_INS_DUP14 = 141;
  static const int EVM_INS_DUP15 = 142;
  static const int EVM_INS_DUP16 = 143;
  static const int EVM_INS_SWAP1 = 144;
  static const int EVM_INS_SWAP2 = 145;
  static const int EVM_INS_SWAP3 = 146;
  static const int EVM_INS_SWAP4 = 147;
  static const int EVM_INS_SWAP5 = 148;
  static const int EVM_INS_SWAP6 = 149;
  static const int EVM_INS_SWAP7 = 150;
  static const int EVM_INS_SWAP8 = 151;
  static const int EVM_INS_SWAP9 = 152;
  static const int EVM_INS_SWAP10 = 153;
  static const int EVM_INS_SWAP11 = 154;
  static const int EVM_INS_SWAP12 = 155;
  static const int EVM_INS_SWAP13 = 156;
  static const int EVM_INS_SWAP14 = 157;
  static const int EVM_INS_SWAP15 = 158;
  static const int EVM_INS_SWAP16 = 159;
  static const int EVM_INS_LOG0 = 160;
  static const int EVM_INS_LOG1 = 161;
  static const int EVM_INS_LOG2 = 162;
  static const int EVM_INS_LOG3 = 163;
  static const int EVM_INS_LOG4 = 164;
  static const int EVM_INS_CREATE = 240;
  static const int EVM_INS_CALL = 241;
  static const int EVM_INS_CALLCODE = 242;
  static const int EVM_INS_RETURN = 243;
  static const int EVM_INS_DELEGATECALL = 244;
  static const int EVM_INS_CALLBLACKBOX = 245;
  static const int EVM_INS_STATICCALL = 250;
  static const int EVM_INS_REVERT = 253;
  static const int EVM_INS_SUICIDE = 255;
  static const int EVM_INS_INVALID = 512;
  static const int EVM_INS_ENDING = 513;
}

/// Group of EVM instructions
abstract class evm_insn_group {
  /// < = CS_GRP_INVALID
  static const int EVM_GRP_INVALID = 0;

  /// < all jump instructions
  static const int EVM_GRP_JUMP = 1;

  /// < math instructions
  static const int EVM_GRP_MATH = 8;

  /// < instructions write to stack
  static const int EVM_GRP_STACK_WRITE = 9;

  /// < instructions read from stack
  static const int EVM_GRP_STACK_READ = 10;

  /// < instructions write to memory
  static const int EVM_GRP_MEM_WRITE = 11;

  /// < instructions read from memory
  static const int EVM_GRP_MEM_READ = 12;

  /// < instructions write to storage
  static const int EVM_GRP_STORE_WRITE = 13;

  /// < instructions read from storage
  static const int EVM_GRP_STORE_READ = 14;

  /// < instructions halt execution
  static const int EVM_GRP_HALT = 15;

  /// < <-- mark the end of the list of groups
  static const int EVM_GRP_ENDING = 16;
}

/// NOTE: All information in cs_detail is only available when CS_OPT_DETAIL = CS_OPT_ON
/// Initialized as memset(., 0, offsetof(cs_detail, ARCH)+sizeof(cs_ARCH))
/// by ARCH_getInstruction in arch/ARCH/ARCHDisassembler.c
/// if cs_detail changes, in particular if a field is added after the union,
/// then update arch/ARCH/ARCHDisassembler.c accordingly
class cs_detail extends ffi.Struct {
  @ffi.Array.multi([12])
  external ffi.Array<ffi.Uint16> regs_read;

  /// < number of implicit registers read by this insn
  @ffi.Uint8()
  external int regs_read_count;

  @ffi.Array.multi([20])
  external ffi.Array<ffi.Uint16> regs_write;

  /// < number of implicit registers modified by this insn
  @ffi.Uint8()
  external int regs_write_count;

  @ffi.Array.multi([8])
  external ffi.Array<ffi.Uint8> groups;

  /// < number of groups this insn belongs to
  @ffi.Uint8()
  external int groups_count;

  /// Architecture-specific instruction info
  external UnnamedUnion14 unnamed;
}

/// Architecture-specific instruction info
class UnnamedUnion14 extends ffi.Union {
  /// < X86 architecture, including 16-bit, 32-bit & 64-bit mode
  external cs_x86 x86;

  /// < ARM64 architecture (aka AArch64)
  external cs_arm64 arm64;

  /// < ARM architecture (including Thumb/Thumb2)
  external cs_arm arm;

  /// < M68K architecture
  external cs_m68k m68k;

  /// < MIPS architecture
  external cs_mips mips;

  /// < PowerPC architecture
  external cs_ppc ppc;

  /// < Sparc architecture
  external cs_sparc sparc;

  /// < SystemZ architecture
  external cs_sysz sysz;

  /// < XCore architecture
  external cs_xcore xcore;

  /// < TMS320C64x architecture
  external cs_tms320c64x tms320c64x;

  /// < M680X architecture
  external cs_m680x m680x;

  /// < Ethereum architecture
  external cs_evm evm;
}

/// Detail information of disassembled instruction
class cs_insn extends ffi.Struct {
  /// Instruction ID (basically a numeric ID for the instruction mnemonic)
  /// Find the instruction id in the '[ARCH]_insn' enum in the header file
  /// of corresponding architecture, such as 'arm_insn' in arm.h for ARM,
  /// 'x86_insn' in x86.h for X86, etc...
  /// This information is available even when CS_OPT_DETAIL = CS_OPT_OFF
  /// NOTE: in Skipdata mode, "data" instruction has 0 for this id field.
  @ffi.UnsignedInt()
  external int id;

  /// Address (EIP) of this instruction
  /// This information is available even when CS_OPT_DETAIL = CS_OPT_OFF
  @ffi.Uint64()
  external int address;

  /// Size of this instruction
  /// This information is available even when CS_OPT_DETAIL = CS_OPT_OFF
  @ffi.Uint16()
  external int size;

  @ffi.Array.multi([16])
  external ffi.Array<ffi.Uint8> bytes;

  @ffi.Array.multi([32])
  external ffi.Array<ffi.Char> mnemonic;

  @ffi.Array.multi([160])
  external ffi.Array<ffi.Char> op_str;

  /// Pointer to cs_detail.
  /// NOTE: detail pointer is only valid when both requirements below are met:
  /// (1) CS_OP_DETAIL = CS_OPT_ON
  /// (2) Engine is not in Skipdata mode (CS_OP_SKIPDATA option set to CS_OPT_ON)
  ///
  /// NOTE 2: when in Skipdata mode, or when detail mode is OFF, even if this pointer
  /// is not NULL, its content is still irrelevant.
  external ffi.Pointer<cs_detail> detail;
}

/// All type of errors encountered by Capstone API.
/// These are values returned by cs_errno()
abstract class cs_err {
  /// < No error: everything was fine
  static const int OK = 0;

  /// < Out-Of-Memory error: cs_open(), cs_disasm(), cs_disasm_iter()
  static const int MEM = 1;

  /// < Unsupported architecture: cs_open()
  static const int ARCH = 2;

  /// < Invalid handle: cs_op_count(), cs_op_index()
  static const int HANDLE = 3;

  /// < Invalid csh argument: cs_close(), cs_errno(), cs_option()
  static const int CSH = 4;

  /// < Invalid/unsupported mode: cs_open()
  static const int MODE = 5;

  /// < Invalid/unsupported option: cs_option()
  static const int OPTION = 6;

  /// < Information is unavailable because detail option is OFF
  static const int DETAIL = 7;

  /// < Dynamic memory management uninitialized (see CS_OPT_MEM)
  static const int MEMSETUP = 8;

  /// < Unsupported version (bindings)
  static const int VERSION = 9;

  /// < Access irrelevant data in "diet" engine
  static const int DIET = 10;

  /// < Access irrelevant data for "data" instruction in SKIPDATA mode
  static const int SKIPDATA = 11;

  /// < X86 AT&T syntax is unsupported (opt-out at compile time)
  static const int X86_ATT = 12;

  /// < X86 Intel syntax is unsupported (opt-out at compile time)
  static const int X86_INTEL = 13;

  /// < X86 Masm syntax is unsupported (opt-out at compile time)
  static const int X86_MASM = 14;
}

typedef csh = ffi.Size;

const int CS_API_MAJOR = 4;

const int CS_API_MINOR = 0;

const int CS_NEXT_VERSION = 5;

const int CS_VERSION_MAJOR = 4;

const int CS_VERSION_MINOR = 0;

const int CS_VERSION_EXTRA = 2;

const int CS_MNEMONIC_SIZE = 32;

const int CS_SUPPORT_DIET = 65536;

const int CS_SUPPORT_X86_REDUCE = 65537;

const int M68K_OPERAND_COUNT = 4;

const int X86_EFLAGS_MODIFY_AF = 1;

const int X86_EFLAGS_MODIFY_CF = 2;

const int X86_EFLAGS_MODIFY_SF = 4;

const int X86_EFLAGS_MODIFY_ZF = 8;

const int X86_EFLAGS_MODIFY_PF = 16;

const int X86_EFLAGS_MODIFY_OF = 32;

const int X86_EFLAGS_MODIFY_TF = 64;

const int X86_EFLAGS_MODIFY_IF = 128;

const int X86_EFLAGS_MODIFY_DF = 256;

const int X86_EFLAGS_MODIFY_NT = 512;

const int X86_EFLAGS_MODIFY_RF = 1024;

const int X86_EFLAGS_PRIOR_OF = 2048;

const int X86_EFLAGS_PRIOR_SF = 4096;

const int X86_EFLAGS_PRIOR_ZF = 8192;

const int X86_EFLAGS_PRIOR_AF = 16384;

const int X86_EFLAGS_PRIOR_PF = 32768;

const int X86_EFLAGS_PRIOR_CF = 65536;

const int X86_EFLAGS_PRIOR_TF = 131072;

const int X86_EFLAGS_PRIOR_IF = 262144;

const int X86_EFLAGS_PRIOR_DF = 524288;

const int X86_EFLAGS_PRIOR_NT = 1048576;

const int X86_EFLAGS_RESET_OF = 2097152;

const int X86_EFLAGS_RESET_CF = 4194304;

const int X86_EFLAGS_RESET_DF = 8388608;

const int X86_EFLAGS_RESET_IF = 16777216;

const int X86_EFLAGS_RESET_SF = 33554432;

const int X86_EFLAGS_RESET_AF = 67108864;

const int X86_EFLAGS_RESET_TF = 134217728;

const int X86_EFLAGS_RESET_NT = 268435456;

const int X86_EFLAGS_RESET_PF = 536870912;

const int X86_EFLAGS_SET_CF = 1073741824;

const int X86_EFLAGS_SET_DF = 2147483648;

const int X86_EFLAGS_SET_IF = 4294967296;

const int X86_EFLAGS_TEST_OF = 8589934592;

const int X86_EFLAGS_TEST_SF = 17179869184;

const int X86_EFLAGS_TEST_ZF = 34359738368;

const int X86_EFLAGS_TEST_PF = 68719476736;

const int X86_EFLAGS_TEST_CF = 137438953472;

const int X86_EFLAGS_TEST_NT = 274877906944;

const int X86_EFLAGS_TEST_DF = 549755813888;

const int X86_EFLAGS_UNDEFINED_OF = 1099511627776;

const int X86_EFLAGS_UNDEFINED_SF = 2199023255552;

const int X86_EFLAGS_UNDEFINED_ZF = 4398046511104;

const int X86_EFLAGS_UNDEFINED_PF = 8796093022208;

const int X86_EFLAGS_UNDEFINED_AF = 17592186044416;

const int X86_EFLAGS_UNDEFINED_CF = 35184372088832;

const int X86_EFLAGS_RESET_RF = 70368744177664;

const int X86_EFLAGS_TEST_RF = 140737488355328;

const int X86_EFLAGS_TEST_IF = 281474976710656;

const int X86_EFLAGS_TEST_TF = 562949953421312;

const int X86_EFLAGS_TEST_AF = 1125899906842624;

const int X86_EFLAGS_RESET_ZF = 2251799813685248;

const int X86_EFLAGS_SET_OF = 4503599627370496;

const int X86_EFLAGS_SET_SF = 9007199254740992;

const int X86_EFLAGS_SET_ZF = 18014398509481984;

const int X86_EFLAGS_SET_AF = 36028797018963968;

const int X86_EFLAGS_SET_PF = 72057594037927936;

const int X86_EFLAGS_RESET_0F = 144115188075855872;

const int X86_EFLAGS_RESET_AC = 288230376151711744;

const int X86_FPU_FLAGS_MODIFY_C0 = 1;

const int X86_FPU_FLAGS_MODIFY_C1 = 2;

const int X86_FPU_FLAGS_MODIFY_C2 = 4;

const int X86_FPU_FLAGS_MODIFY_C3 = 8;

const int X86_FPU_FLAGS_RESET_C0 = 16;

const int X86_FPU_FLAGS_RESET_C1 = 32;

const int X86_FPU_FLAGS_RESET_C2 = 64;

const int X86_FPU_FLAGS_RESET_C3 = 128;

const int X86_FPU_FLAGS_SET_C0 = 256;

const int X86_FPU_FLAGS_SET_C1 = 512;

const int X86_FPU_FLAGS_SET_C2 = 1024;

const int X86_FPU_FLAGS_SET_C3 = 2048;

const int X86_FPU_FLAGS_UNDEFINED_C0 = 4096;

const int X86_FPU_FLAGS_UNDEFINED_C1 = 8192;

const int X86_FPU_FLAGS_UNDEFINED_C2 = 16384;

const int X86_FPU_FLAGS_UNDEFINED_C3 = 32768;

const int X86_FPU_FLAGS_TEST_C0 = 65536;

const int X86_FPU_FLAGS_TEST_C1 = 131072;

const int X86_FPU_FLAGS_TEST_C2 = 262144;

const int X86_FPU_FLAGS_TEST_C3 = 524288;

const int M680X_OPERAND_COUNT = 9;

const int M680X_OFFSET_NONE = 0;

const int M680X_OFFSET_BITS_5 = 5;

const int M680X_OFFSET_BITS_8 = 8;

const int M680X_OFFSET_BITS_9 = 9;

const int M680X_OFFSET_BITS_16 = 16;

const int M680X_IDX_INDIRECT = 1;

const int M680X_IDX_NO_COMMA = 2;

const int M680X_IDX_POST_INC_DEC = 4;

const int M680X_FIRST_OP_IN_MNEM = 1;

const int M680X_SECOND_OP_IN_MNEM = 2;
